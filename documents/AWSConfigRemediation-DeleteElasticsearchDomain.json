{
  "schemaVersion": "0.3",
  "description": "### Document name - AWSConfigRemediation-DeleteElasticsearchDomain\n\n## What does this document do?\nThis runbook deletes the given Amazon Elasticsearch Service (Amazon ES) domain using the [DeleteElasticsearchDomain](https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-configuration-api.html#es-configuration-api-actions-deleteelasticsearchdomain) API.\n\n## Input Parameters\n* AutomationAssumeRole: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.\n* DomainName: (Required) The name of the Amazon Elasticsearch service domain.\n\n## Output Parameters\n* DeleteElasticsearchDomainAndVerify.Output: Success message or failure exception.\n",
  "assumeRole": "{{ AutomationAssumeRole }}",
  "parameters": {
    "AutomationAssumeRole": {
      "type": "AWS::IAM::Role::Arn",
      "description": "(Required) The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that allows Systems Manager Automation to perform the actions on your behalf."
    },
    "DomainName": {
      "type": "String",
      "description": "(Required) The name of the Amazon ES service domain to be deleted.",
      "allowedPattern": "(\\d{12}/)?[a-z]{1}[a-z0-9-]{2,28}"
    }
  },
  "outputs": [
    "DeleteElasticsearchDomainAndVerify.Output"
  ],
  "mainSteps": [
    {
      "name": "DeleteElasticsearchDomainAndVerify",
      "action": "aws:executeScript",
      "description": "## DeleteElasticsearchDomainAndVerify\nAccepts the Amazon ES service domain name as input, deletes it, and verifies the deletion.\n## Outputs\n* Output: Success message or failure exception.\n",
      "timeoutSeconds": 600,
      "inputs": {
        "Runtime": "python3.8",
        "Handler": "handler",
        "InputPayload": {
          "DomainName": "{{ DomainName }}"
        },
        "Script": "import boto3\n\ndef verify_es_domain_exist(es_client, domain_name):\n    desc_es_domain = es_client.describe_elasticsearch_domain(DomainName=domain_name)\n    if desc_es_domain[\"DomainStatus\"][\"Deleted\"]:\n        return False\n    return True\n\ndef delete_es_domain(es_client, domain_name):\n    return es_client.delete_elasticsearch_domain(DomainName=domain_name)\n\ndef handler(event, context):\n    es_client = boto3.client(\"es\")\n    domain_name = event[\"DomainName\"]\n    if \"/\" in domain_name:\n        domain_name = domain_name.split(\"/\")[-1]\n\n    response = delete_es_domain(es_client, domain_name)['ResponseMetadata']\n    domain_exist = verify_es_domain_exist(es_client, domain_name)\n    if not domain_exist:\n        return {\n            \"output\": {\n                \"message\": \"Verification of delete amazon elastic search domain is successful.\",\n                \"HTTPResponse\": response,\n            }\n        }\n    raise Exception(\"VERIFICATION FAILED. AMAZON ELASTIC SEARCH DOMAIN NOT DELETED.\")"
      },
      "outputs": [
        {
          "Name": "Output",
          "Selector": "$.Payload.output",
          "Type": "StringMap"
        }
      ]
    }
  ]
}
