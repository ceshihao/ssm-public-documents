{
  "description": "### Document Name - AWSConfigRemediation-EnableElasticBeanstalkEnvironmentLogging\n\n## What does this document do?\nThis document enables logging on a given AWS Elastic Beanstalk environment using the [UpdateEnvironment](https://docs.aws.amazon.com/elasticbeanstalk/latest/api/API_UpdateEnvironment.html) API.\n\n## Input Parameters\n* EnvironmentId: (Required) The ID of the AWS Elastic Beanstalk environment.\n* AutomationAssumeRole: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.\n\n## Output Parameters\n* EnableEnvironmentLogging.EnableEnvironmentLoggingResponse - The standard HTTP response from the UpdateEnvironment API.\n",
  "schemaVersion": "0.3",
  "assumeRole": "{{ AutomationAssumeRole }}",
  "parameters": {
    "AutomationAssumeRole": {
      "type": "String",
      "description": "(Required) The ARN of the role that allows Automation to perform the actions on your behalf.",
      "allowedPattern": "^arn:(aws[a-zA-Z-]*)?:iam::\\d{12}:role/[\\w+=,.@/-]+$"
    },
    "EnvironmentId": {
      "type": "String",
      "description": "(Required) The ID of the AWS Elastic Beanstalk environment.",
      "allowedPattern": "^e-[a-z0-9]*$"
    }
  },
  "outputs": [
    "EnableEnvironmentLogging.EnableEnvironmentLoggingResponse"
  ],
  "mainSteps": [
    {
      "name": "EnableEnvironmentLogging",
      "action": "aws:executeAwsApi",
      "description": "## EnableEnvironmentLogging\nEnables instance log streaming for the specified AWS Elastic Beanstalk environment ID.\n## Outputs\n* EnableEnvironmentLoggingResponse: The standard HTTP response from the UpdateEnvironment API.\n",
      "timeoutSeconds": 600,
      "isEnd": false,
      "inputs": {
        "Service": "elasticbeanstalk",
        "Api": "UpdateEnvironment",
        "EnvironmentId": "{{ EnvironmentId }}",
        "OptionSettings": [
          {
            "Namespace": "aws:elasticbeanstalk:cloudwatch:logs",
            "OptionName": "StreamLogs",
            "Value": "true"
          }
        ]
      },
      "outputs": [
        {
          "Name": "EnableEnvironmentLoggingResponse",
          "Selector": "$",
          "Type": "StringMap"
        }
      ]
    },
    {
      "name": "WaitForEnvironmentAvailability",
      "action": "aws:waitForAwsResourceProperty",
      "description": "## WaitForEnvironmentAvailability\nWaits for the given AWS Elastic Beanstalk environment to enter the \"Ready\" state.\n",
      "timeoutSeconds": 600,
      "isEnd": false,
      "inputs": {
        "Service": "elasticbeanstalk",
        "Api": "DescribeEnvironments",
        "EnvironmentIds": [
          "{{ EnvironmentId }}"
        ],
        "PropertySelector": "$.Environments[0].Status",
        "DesiredValues": [
          "Ready"
        ]
      }
    },
    {
      "name": "VerifyLogStreamingEnabled",
      "action": "aws:executeScript",
      "description": "## VerifyLogStreamingEnabled\nChecks that instance log streaming for the specified AWS Elastic Beanstalk environment is enabled.\n## Outputs\n* Output: The standard HTTP response from the DescribeEnvironments API.\n",
      "isEnd": true,
      "timeoutSeconds": 600,
      "inputs": {
        "Runtime": "python3.6",
        "Handler": "handler",
        "InputPayload": {
          "EnvironmentId": "{{ EnvironmentId }}"
        },
        "Script": "import boto3\n\ndef verify_enviroment_logging(elasticbeanstalk_client, environment_id):\n  environment_list = elasticbeanstalk_client.describe_environments(\n      EnvironmentIds=[environment_id]\n  )\n  environment_name = environment_list[\"Environments\"][0][\"EnvironmentName\"]\n  application_name = environment_list[\"Environments\"][0][\"ApplicationName\"]\n\n  describe_configuration_settings_response = (\n      elasticbeanstalk_client.describe_configuration_settings(\n          ApplicationName=application_name, EnvironmentName=environment_name\n      )\n  )\n  for option in describe_configuration_settings_response[\"ConfigurationSettings\"][0][\n      \"OptionSettings\"\n  ]:\n      if (\n          option[\"Namespace\"] == \"aws:elasticbeanstalk:cloudwatch:logs\"\n          and option[\"OptionName\"] == \"StreamLogs\"\n          and option[\"Value\"] == \"true\"\n      ):\n          return True\n  return False\n\ndef handler(event, context):\n  elasticbeanstalk_client = boto3.client(\"elasticbeanstalk\")\n  environment_id = event[\"EnvironmentId\"]\n  if verify_enviroment_logging(elasticbeanstalk_client, environment_id):\n      return {\n          \"output\": {\n              \"Message\": \"Verification of instance log streaming for the AWS Elastic Beanstalk environment ID {} is successful.\".format(environment_id)\n          }\n      }\n  raise Exception(\n      \"VERIFICATION FAILED. INSTANCE LOG STREAMING NOT ENABLED FOR AWS ELASTIC BEANSTALK ENVIRONMENT: {}.\".format(environment_id)\n  )"
      },
      "outputs": [
        {
          "Name": "Output",
          "Selector": "$.Payload.output",
          "Type": "StringMap"
        }
      ]
    }
  ]
}
