{
  "schemaVersion": "1.0",
  "templateBody": {
    "Parameters": {
      "QSType": {
        "Type": "String",
        "AllowedValues": [
          "TA",
          "MA",
          "LA"
        ],
        "Description": "(Required) Specifies whether the Quick Setup applies to the local account or an AWS organization."
      },
      "QSConfigurationId": {
        "Type": "String",
        "Description": "(Required) Unique identifier of the deployed configuration."
      },
      "QSGlobalResourcesRegion": {
        "Type": "String",
        "Description": "(Required) Name of the AWS Region to deploy global resources such as SNS topics."
      },
      "QSPrincipalOrgId": {
        "Type": "String",
        "Default": "",
        "Description": "(Optional) The ID of the principal organization your management account operates in."
      },
      "QSAttachConfigurationPolicy": {
        "Type": "String",
        "Default": "false",
        "AllowedValues": [
          "true",
          "false"
        ],
        "Description": "(Optional) Whether to attach Configuration permissions policy which sets boundaries of what configuration can do."
      },
      "AnalyseAllResources": {
        "Type": "String",
        "Default": "false",
        "AllowedValues": [
          "true",
          "false"
        ],
        "Description": "(Optional) Identifies whether DevOps Guru should analyse all CloudFormation stacks of the account."
      },
      "EnableSnsNotifications": {
        "Type": "String",
        "Default": "true",
        "AllowedValues": [
          "true",
          "false"
        ],
        "Description": "(Optional) Identifies whether DevOps Guru should send notifications when an insight is generated."
      },
      "EnableSsmOpsItems": {
        "Type": "String",
        "Default": "true",
        "AllowedValues": [
          "true",
          "false"
        ],
        "Description": "(Optional) Determines whether DevOps Guru should create AWS Systems Manager OpsItems for each generated insight."
      },
      "RemediationSchedule": {
        "Type": "String",
        "Default": "none",
        "AllowedValues": [
          "rate(1 day)",
          "rate(7 days)",
          "rate(14 days)",
          "rate(30 days)",
          "none"
        ],
        "Description": "(Optional) Defines the custom drift remediation schedule for DevOps Guru."
      }
    },
    "Conditions": {
      "ShouldAttachConfigurationPolicy": {
        "Fn::Equals": [
          {
            "Ref": "QSAttachConfigurationPolicy"
          },
          "true"
        ]
      },
      "IsRecurrenceDisabled": {
        "Fn::Equals": [
          {
            "Ref": "RemediationSchedule"
          },
          "none"
        ]
      },
      "AnalyseAllResources": {
        "Fn::Equals": [
          {
            "Ref": "AnalyseAllResources"
          },
          "true"
        ]
      },
      "EnableSnsNotifications": {
        "Fn::Equals": [
          {
            "Ref": "EnableSnsNotifications"
          },
          "true"
        ]
      },
      "EnableSsmOpsItems": {
        "Fn::Equals": [
          {
            "Ref": "EnableSsmOpsItems"
          },
          "true"
        ]
      }
    },
    "Resources": {
      "CfgDevOpsGuruRole": {
        "Type": "AWS::IAM::Role",
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Principal": {
                  "Service": [
                    "ssm.amazonaws.com"
                  ]
                },
                "Action": [
                  "sts:AssumeRole"
                ]
              }
            ]
          },
          "Policies": [
            {
              "PolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Action": [
                      "cloudformation:ListStacks",
                      "cloudformation:DescribeStacks",
                      "devops-guru:AddNotificationChannel",
                      "devops-guru:UpdateResourceCollection",
                      "devops-guru:UpdateServiceIntegration",
                      "kms:CreateAlias",
                      "kms:CreateKey",
                      "kms:Encrypt",
                      "kms:Decrypt",
                      "kms:DescribeKey",
                      "kms:GenerateDataKey*",
                      "kms:ReEncrypt*",
                      "sns:ListTopics"
                    ],
                    "Resource": "*"
                  },
                  {
                    "Effect": "Allow",
                    "Action": "iam:CreateServiceLinkedRole",
                    "Resource": {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":iam::*:role/aws-service-role/devops-guru.amazonaws.com/AWSServiceRoleForDevOpsGuru"
                        ]
                      ]
                    },
                    "Condition": {
                      "StringLike": {
                        "iam:AWSServiceName": "devops-guru.amazonaws.com"
                      }
                    }
                  },
                  {
                    "Effect": "Allow",
                    "Action": [
                      "sns:AddPermission",
                      "sns:CreateTopic",
                      "sns:GetTopicAttributes",
                      "sns:Publish",
                      "sns:SetTopicAttributes",
                      "sns:RemovePermission"
                    ],
                    "Resource": {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":sns:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":DevOpsGuru-Default-Topic"
                        ]
                      ]
                    }
                  }
                ]
              },
              "PolicyName": {
                "Fn::Join": [
                  "",
                  [
                    "AWS-QuickSetup-Policy-",
                    {
                      "Ref": "AWS::Region"
                    },
                    "-",
                    {
                      "Ref": "QSConfigurationId"
                    }
                  ]
                ]
              }
            }
          ],
          "ManagedPolicyArns": [
            {
              "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/AWSSystemsManagerEnableExplorerExecutionPolicy"
            }
          ],
          "PermissionsBoundary": {
            "Fn::If": [
              "ShouldAttachConfigurationPolicy",
              {
                "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/AWSQuickSetupDevOpsGuruPermissionsBoundary"
              },
              {
                "Ref": "AWS::NoValue"
              }
            ]
          },
          "RoleName": {
            "Fn::Join": [
              "",
              [
                "AWS-QuickSetup-CfgDevOpsGuru-",
                {
                  "Ref": "QSType"
                },
                "_",
                {
                  "Ref": "AWS::Region"
                }
              ]
            ]
          }
        }
      },
      "ConfigureDevOpsGuru": {
        "Type": "AWS::SSM::Document",
        "Properties": {
          "UpdateMethod": "NewVersion",
          "Content": {
            "description": "## AWS-ConfigureDevOpsGuru\n\n### What does this document do?\n\nThe **AWS-ConfigureDevOpsGuru** automation runbook configures DevOps Guru for all CloudFormation stacks in your current AWS account..\n\n### Inputs\n\n- **AnalyseAllResources**: (Optional) Determines whether DevOps Guru analyzes all CloudFormation stacks in the account.\n- **CfnStackNames**: (Optional) The CloudFormation stack names to be analyzed by DevOps Guru. This parameter is used only if 'AnalyseAllResources' is false.\n- **EnableSnsNotifications**: (Optional) Determines whether DevOps Guru sends SNS notifications when an insight is generated.\n- **EnableSsmOpsItems**: (Optional) Determines whether DevOps Guru creates AWS Systems Manager OpsItems for each insight.\n- **AutomationAssumeRole**: (Optional) The ARN of the role that allows Automation to perform the actions on your behalf.",
            "schemaVersion": "0.3",
            "assumeRole": "{{ AutomationAssumeRole }}",
            "parameters": {
              "AnalyseAllResources": {
                "default": false,
                "description": "(Optional) Determines whether DevOps Guru analyzes all CloudFormation stacks in the account.",
                "type": "Boolean"
              },
              "CfnStackNames": {
                "default": [],
                "description": "(Optional) The CloudFormation stack names you want DevOps Guru to analyze. This parameter is used only if 'AnalyseAllResources' is false.",
                "type": "StringList"
              },
              "EnableSnsNotifications": {
                "default": false,
                "description": "(Optional) Determines whether DevOps Guru sends SNS notifications when an insight is generated.",
                "type": "Boolean"
              },
              "EnableSsmOpsItems": {
                "default": false,
                "description": "(Optional) Determines whether DevOps Guru creates AWS Systems Manager OpsItems for each insight.",
                "type": "Boolean"
              },
              "AutomationAssumeRole": {
                "default": "",
                "description": "(Optional) The ARN of the role that allows Automation to perform the actions on your behalf.",
                "type": "String"
              }
            },
            "mainSteps": [
              {
                "action": "aws:executeScript",
                "maxAttempts": 3,
                "inputs": {
                  "Handler": "configure_devops_guru_handler",
                  "InputPayload": {
                    "AnalyseAllResources": "{{ AnalyseAllResources }}",
                    "CfnStackNames": "{{ CfnStackNames }}",
                    "EnableSnsNotifications": "{{ EnableSnsNotifications }}",
                    "EnableSsmOpsItems": "{{ EnableSsmOpsItems }}",
                    "AutomationAssumeRoleArn": "{{ AutomationAssumeRole }}"
                  },
                  "Runtime": "python3.11",
                  "Script": "import boto3\nimport time\n\nSNS_TOPIC_NAME = \"DevOpsGuru-Default-Topic\"\n\n\ndef ensure_sns_topic_exists():\n    sns_client = boto3.resource('sns')\n\n    existing_topics = dict(map(lambda topic: [topic.arn.rsplit(':', 1)[1], topic.arn], sns_client.topics.all()))\n\n    if SNS_TOPIC_NAME not in existing_topics:\n        topic = sns_client.create_topic(\n            Name=SNS_TOPIC_NAME,\n            Attributes={\n                'DisplayName': SNS_TOPIC_NAME\n            }\n        )\n        return topic.arn\n    else:\n        return existing_topics[SNS_TOPIC_NAME]\n\ndef configure_devops_guru_handler(events, context):\n    # get required parameters\n    analyse_all_resources = events['AnalyseAllResources'] or False\n    cfn_stack_names = events['CfnStackNames'] or []\n    enable_sns_notifications = events['EnableSnsNotifications'] or False\n    enable_ssm_ops_items = events['EnableSsmOpsItems'] or False\n    devops_guru_client = boto3.client('devops-guru')\n\n    # Enable SNS notifications for each generated insight\n    if enable_sns_notifications:\n        notifications_topic_arn = ensure_sns_topic_exists()\n\n        # Create a notification channel for the specified/created SNS topic ARN\n        devops_guru_client.add_notification_channel(Config={\n            'Sns': {\n                'TopicArn': notifications_topic_arn\n            }\n        })\n\n    # Get all CloudFormation stack names and override the provided stack names\n    if analyse_all_resources:\n        cfn_client = boto3.resource('cloudformation')\n        cfn_stack_names = list(map(lambda stack: stack.stack_name, cfn_client.stacks.all()))\n\n    # Enable DevOps Guru analysis for the provided/all CloudFormation stacks\n    if len(cfn_stack_names) > 0:\n        chunk_size = 100\n        for i in range(0, len(cfn_stack_names), chunk_size):\n            devops_guru_client.update_resource_collection(\n                Action='ADD',\n                ResourceCollection={\n                    'CloudFormation': {\n                        'StackNames': cfn_stack_names[i:i + chunk_size]\n                    }\n                }\n            )\n            time.sleep(1)\n\n    # Toggle creation of OpsItems for each generated insight\n    devops_guru_client.update_service_integration(ServiceIntegration={\n        'OpsCenter': {\n            'OptInStatus': 'ENABLED' if enable_ssm_ops_items else 'DISABLED'\n        }\n    })"
                },
                "name": "ConfigureDevOpsGuru"
              }
            ]
          },
          "DocumentType": "Automation",
          "Name": {
            "Fn::Join": [
              "",
              [
                "AWSQuickSetup-ConfigureDevOpsGuruV2-",
                {
                  "Ref": "QSConfigurationId"
                }
              ]
            ]
          }
        }
      },
      "ConfigureDevOpsGuruAssociation": {
        "Type": "AWS::SSM::Association",
        "Properties": {
          "Name": {
            "Ref": "ConfigureDevOpsGuru"
          },
          "AssociationName": {
            "Fn::Join": [
              "",
              [
                "AWS-QuickSetup-ConfigureDevOpsGuruAssociation-",
                {
                  "Ref": "QSConfigurationId"
                }
              ]
            ]
          },
          "Parameters": {
            "AutomationAssumeRole": [
              {
                "Fn::GetAtt": [
                  "CfgDevOpsGuruRole",
                  "Arn"
                ]
              }
            ],
            "AnalyseAllResources": [
              {
                "Fn::If": [
                  "AnalyseAllResources",
                  true,
                  false
                ]
              }
            ],
            "EnableSnsNotifications": [
              {
                "Fn::If": [
                  "EnableSnsNotifications",
                  true,
                  false
                ]
              }
            ],
            "EnableSsmOpsItems": [
              {
                "Fn::If": [
                  "EnableSsmOpsItems",
                  true,
                  false
                ]
              }
            ]
          },
          "ScheduleExpression": {
            "Fn::If": [
              "IsRecurrenceDisabled",
              {
                "Ref": "AWS::NoValue"
              },
              {
                "Ref": "RemediationSchedule"
              }
            ]
          }
        }
      },
      "EnableExplorerAssociation": {
        "Type": "AWS::SSM::Association",
        "Properties": {
          "Name": "AWS-EnableExplorer",
          "AssociationName": {
            "Fn::Join": [
              "",
              [
                "AWS-QuickSetup-EnableExplorerAssociation-",
                {
                  "Ref": "QSConfigurationId"
                }
              ]
            ]
          },
          "Parameters": {
            "AutomationAssumeRole": [
              {
                "Fn::GetAtt": [
                  "CfgDevOpsGuruRole",
                  "Arn"
                ]
              }
            ]
          },
          "ScheduleExpression": "rate(1 day)"
        }
      }
    }
  }
}
