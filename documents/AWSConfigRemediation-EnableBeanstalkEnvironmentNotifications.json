{
  "schemaVersion": "0.3",
  "description": "### Document name - AWSConfigRemediation-EnableBeanstalkEnvironmentNotifications\n\n## What does this document do?\nThis runbook enables notifications on a given AWS Elastic Beanstalk environment using the [UpdateEnvironment](https://docs.aws.amazon.com/elasticbeanstalk/latest/api/API_UpdateEnvironment.html) API.\n\n## Input Parameters\n* AutomationAssumeRole: (Required) The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that allows Systems Manager Automation to perform the actions on your behalf.\n* EnvironmentId: (Required) The ID of the Elastic Beanstalk environment that you want to enable notifications for.\n* TopicArn: (Required) The ARN of the Amazon Simple Notification Service (Amazon SNS) topic you want to send notifications to.\n\n## Output Parameters\n* EnableNotifications.EnableNotificationsResponse: The standard HTTP response from the UpdateEnvironment API.\n",
  "assumeRole": "{{ AutomationAssumeRole }}",
  "parameters": {
    "AutomationAssumeRole": {
      "type": "String",
      "description": "(Required) The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that allows Systems Manager Automation to perform the actions on your behalf.",
      "allowedPattern": "^arn:(aws[a-zA-Z-]*)?:iam::\\d{12}:role/[\\w+=,.@/-]+$"
    },
    "EnvironmentId": {
      "type": "String",
      "description": "(Required) The ID of the Elastic Beanstalk environment that you want to enable notifications for.",
      "allowedPattern": "^e-[a-z0-9]*$"
    },
    "TopicArn": {
      "type": "String",
      "description": "(Required) The ARN of the Amazon Simple Notification Service (Amazon SNS) topic you want to send notifications to.",
      "allowedPattern": "^arn:(aws[a-zA-Z-]*)?:sns:([a-z]{2}-[a-z]+-\\d{1}):\\d{12}:[\\w+.-]+$"
    }
  },
  "outputs": [
    "EnableNotifications.EnableNotificationsResponse"
  ],
  "mainSteps": [
    {
      "name": "EnableNotifications",
      "action": "aws:executeAwsApi",
      "description": "## EnableNotifications\nEnables notifications for the Elastic Beanstalk environment you specify in the EnvironmentId parameter.\n## Outputs\n* EnableNotificationsResponse: The standard HTTP response from the UpdateEnvironment API.\n",
      "timeoutSeconds": 600,
      "isEnd": false,
      "inputs": {
        "Service": "elasticbeanstalk",
        "Api": "UpdateEnvironment",
        "EnvironmentId": "{{ EnvironmentId }}",
        "OptionSettings": [
          {
            "Namespace": "aws:elasticbeanstalk:sns:topics",
            "OptionName": "Notification Topic ARN",
            "Value": "{{ TopicArn }}"
          }
        ]
      },
      "outputs": [
        {
          "Name": "EnableNotificationsResponse",
          "Selector": "$",
          "Type": "StringMap"
        }
      ]
    },
    {
      "name": "WaitForEnvironmentAvailability",
      "action": "aws:waitForAwsResourceProperty",
      "description": "## WaitForEnvironmentAvailability\nWaits for the status of the environment to change to Ready.\n",
      "timeoutSeconds": 600,
      "isEnd": false,
      "inputs": {
        "Service": "elasticbeanstalk",
        "Api": "DescribeEnvironments",
        "EnvironmentIds": [
          "{{ EnvironmentId }}"
        ],
        "PropertySelector": "$.Environments[0].Status",
        "DesiredValues": [
          "Ready"
        ]
      }
    },
    {
      "name": "VerifyNotificationsEnabled",
      "action": "aws:executeScript",
      "description": "## VerifyNotificationsEnabled\nVerifies notifications have been enabled for the Elastic Beanstalk environment.\n## Outputs\n* Output: The standard HTTP response from the DescribeEnvironments API.\n",
      "isEnd": true,
      "timeoutSeconds": 600,
      "inputs": {
        "Runtime": "python3.7",
        "Handler": "handler",
        "InputPayload": {
          "EnvironmentId": "{{ EnvironmentId }}",
          "TopicArn": "{{ TopicArn }}"
        },
        "Script": "import boto3\n\ndef is_notifications_enabled(elasticbeanstalk_client, environment_id, topic_arn):\n  environment_list = elasticbeanstalk_client.describe_environments(\n      EnvironmentIds=[environment_id]\n  )\n  environment_name = environment_list[\"Environments\"][0][\"EnvironmentName\"]\n  application_name = environment_list[\"Environments\"][0][\"ApplicationName\"]\n\n  describe_configuration_settings_response = (\n      elasticbeanstalk_client.describe_configuration_settings(\n          ApplicationName=application_name, EnvironmentName=environment_name\n      )\n  )\n  for option in describe_configuration_settings_response[\"ConfigurationSettings\"][0][\"OptionSettings\"]:\n      if (\n          option[\"Namespace\"] == \"aws:elasticbeanstalk:sns:topics\"\n          and option[\"OptionName\"] == \"Notification Topic ARN\"\n          and option[\"Value\"] == topic_arn\n      ):\n          return True\n  return False\n\ndef handler(event, context):\n  elasticbeanstalk_client = boto3.client(\"elasticbeanstalk\")\n  environment_id = event[\"EnvironmentId\"]\n  topic_arn = event[\"TopicArn\"]\n  if is_notifications_enabled(elasticbeanstalk_client, environment_id, topic_arn):\n      return {\n          \"Message\": \"Verification of enable notifications for the AWS Elastic Beanstalk environment ID {} is successful.\".format(environment_id)\n      }\n  raise Exception(\n      \"VERIFICATION FAILED. NOTIFICATIONS NOT ENABLED FOR AWS ELASTIC BEANSTALK ENVIRONMENT: {}.\".format(environment_id)\n  )"
      },
      "outputs": [
        {
          "Name": "Output",
          "Selector": "$.Payload",
          "Type": "StringMap"
        }
      ]
    }
  ]
}
