{
  "schemaVersion": "0.3",
  "description": "### Document Name - AWSConfigRemediation-DeleteUnusedVPCNetworkACL.\n\n## What does this document do?\nThis document deletes an unused Amazon VPC Network ACL i.e., a Network ACL that is not associated with a subnet.\n\n## Input Parameters\n* NetworkAclId: (Required) Network ACL ID which needs to be deleted.\n* AutomationAssumeRole: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.\n\n## Output Parameters\n* DeleteUnusedVPCNetworkACL.HttpResponse: The standard HTTP response from the DeleteNetworkAcl API call.\n",
  "assumeRole": "{{ AutomationAssumeRole }}",
  "parameters": {
    "AutomationAssumeRole": {
      "type": "String",
      "description": "(Required) The ARN of the role that allows Automation to perform the actions on your behalf.",
      "allowedPattern": "^arn:aws[a-z0-9-]*:iam::\\d{12}:role\\/[\\w-\\/.@+=,]{1,1017}$"
    },
    "NetworkAclId": {
      "type": "String",
      "description": "(Required) Network ACL ID which needs to be deleted.",
      "allowedPattern": "^acl-[A-Za-z0-9]{17}$"
    }
  },
  "outputs": [
    "DeleteUnusedVPCNetworkACL.HttpResponse"
  ],
  "mainSteps": [
    {
      "name": "DeleteUnusedVPCNetworkACL",
      "action": "aws:executeAwsApi",
      "description": "## DeleteUnusedVPCNetworkACL\nDelete an unused Amazon VPC Network ACL.\n## Outputs\n* DeleteUnusedVPCNetworkACL.ResponseMetadata: The standard HTTP response from the DeleteNetworkAcl API call.\n",
      "timeoutSeconds": 600,
      "isEnd": false,
      "inputs": {
        "Service": "ec2",
        "Api": "DeleteNetworkAcl",
        "NetworkAclId": "{{ NetworkAclId }}"
      },
      "outputs": [
        {
          "Name": "HttpResponse",
          "Selector": "$",
          "Type": "StringMap"
        }
      ]
    },
    {
      "name": "VerifyVPCNetworkACLDeleted",
      "action": "aws:executeScript",
      "description": "## VerifyVPCNetworkACLDeleted\n  Checks that the VPC Network ACL deleted in the previous step exists.\n## Outputs\n  * Output: Success message or failure Exception.\n",
      "isEnd": true,
      "timeoutSeconds": 600,
      "inputs": {
        "Runtime": "python3.8",
        "Handler": "handler",
        "InputPayload": {
          "NetworkAclId": "{{ NetworkAclId }}"
        },
        "Script": "import boto3\n\ndef handler(event, context):\n    ec2 = boto3.client('ec2')\n    network_acl_id = event['NetworkAclId']\n\n    try:\n      ec2.describe_network_acls(NetworkAclIds = [network_acl_id])\n      error_message = \"VERIFICATION FAILED. THE NETWORKACL {} DELETION UNSUCCESSFUL.\".format(network_acl_id)\n      raise Exception(error_message)\n    except ec2.exceptions.ClientError as error:\n      if error.response['Error']['Code'] == 'InvalidNetworkAclID.NotFound':\n        return {\n          \"output\": \"Verification of delete VPC Network ACL is successful.\"\n        }\n      else:\n        raise error"
      },
      "outputs": [
        {
          "Name": "Output",
          "Selector": "$.Payload.output",
          "Type": "String"
        }
      ]
    }
  ]
}
