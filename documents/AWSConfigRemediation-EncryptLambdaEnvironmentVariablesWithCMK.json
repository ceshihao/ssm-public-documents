{
  "schemaVersion": "0.3",
  "description": "### Document name - AWSConfigRemediation-EncryptLambdaEnvironmentVariablesWithCMK\n\n## What does this document do?\nThis document encrypts a given AWS Lambda function's environment variables at rest with provided AWS Key Management Service (AWS KMS) key using [UpdateFunctionConfiguration](https://docs.aws.amazon.com/lambda/latest/dg/API_UpdateFunctionConfiguration.html) API.\nThis document must only be used as a baseline to ensure that your AWS Lambda function's environment variables are encrypted with the minimum security best practice of using an AWS KMS customer managed CMK.\nBased on your data policy, AWS Lambda function's environment variables should be encrypted with different customer managed CMKs as documented [here](https://docs.aws.amazon.com/kms/latest/developerguide/best-practices.html).\n\n## Input Parameters\n* AutomationAssumeRole: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.\n* KMSKeyArn: (Required) The ARN of the AWS KMS key that is used to encrypt your AWS Lambda function's environment variables.\n* FunctionName: (Required) AWS Lambda Function name or ARN for which environment variables will be encrypted.\n\n## Output Parameters\n* EncryptFunctionEnvironmentVariablesAtRest.Output: The standard HTTP response from the UpdateFunctionConfiguration API.\n",
  "assumeRole": "{{ AutomationAssumeRole }}",
  "parameters": {
    "AutomationAssumeRole": {
      "type": "String",
      "description": "(Required) The ARN of the role that allows Automation to perform the actions on your behalf.",
      "allowedPattern": "^arn:aws[a-z0-9-]*:iam::\\d{12}:role\\/[\\w-\\/.@+=,]{1,1017}$"
    },
    "KMSKeyArn": {
      "type": "String",
      "description": "(Required) The ARN of the AWS KMS key that is used to encrypt your function's environment variables.",
      "allowedPattern": "^arn:(aws[a-zA-Z-]*)?:kms:.*:\\d{12}:key/[\\w+=,.@-]+"
    },
    "FunctionName": {
      "type": "String",
      "description": "(Required) AWS Lambda Function name or ARN for which environment variables will be encrypted.",
      "allowedPattern": "(arn:(aws[a-zA-Z-]*)?:lambda:)?([a-z]{2}(-gov)?-[a-z]+-\\d{1}:)?(\\d{12}:)?(function:)?([a-zA-Z0-9-_]+)(:(\\$LATEST|[a-zA-Z0-9-_]+))?"
    }
  },
  "outputs": [
    "EncryptFunctionEnvironmentVariablesAtRest.Output"
  ],
  "mainSteps": [
    {
      "name": "WaitUntilLambdaFunctionIsActive",
      "description": "## WaitUntilLambdaFunctionIsActive\nWaits until AWS Lambda function 'LastUpdateStatus' property changes to \"Successful\" or times out.\n",
      "action": "aws:waitForAwsResourceProperty",
      "timeoutSeconds": 600,
      "isEnd": false,
      "inputs": {
        "Service": "lambda",
        "Api": "GetFunctionConfiguration",
        "FunctionName": "{{ FunctionName }}",
        "PropertySelector": "$.LastUpdateStatus",
        "DesiredValues": [
          "Successful"
        ]
      }
    },
    {
      "name": "EncryptFunctionEnvironmentVariablesAtRest",
      "action": "aws:executeAwsApi",
      "description": "## EncryptFunctionEnvironmentVariablesAtRest\nEncrypts a given AWS Lambda function's environment variables at rest with AWS KMS  using UpdateFunctionConfiguration API.\n## Outputs\n* Output: The standard HTTP response from the UpdateFunctionConfiguration API.\n",
      "timeoutSeconds": 600,
      "isEnd": false,
      "inputs": {
        "Service": "lambda",
        "Api": "UpdateFunctionConfiguration",
        "FunctionName": "{{ FunctionName }}",
        "KMSKeyArn": "{{ KMSKeyArn }}"
      },
      "outputs": [
        {
          "Name": "Output",
          "Selector": "$",
          "Type": "StringMap"
        }
      ]
    },
    {
      "name": "VerifyEncryptFunctionEnvironmentVariablesAtRest",
      "action": "aws:assertAwsResourceProperty",
      "timeoutSeconds": 600,
      "isEnd": true,
      "description": "## VerifyEncryptFunctionEnvironmentVariablesAtRest\nVerifies that the given AWS Lambda function's environment variables at rest are encrypted with the given AWS KMS key using GetFunctionConfiguration API.\n",
      "inputs": {
        "Service": "lambda",
        "Api": "GetFunctionConfiguration",
        "FunctionName": "{{ FunctionName }}",
        "PropertySelector": "$.KMSKeyArn",
        "DesiredValues": [
          "{{ KMSKeyArn }}"
        ]
      }
    }
  ]
}
