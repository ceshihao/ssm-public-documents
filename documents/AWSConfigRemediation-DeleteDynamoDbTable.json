{
  "schemaVersion": "0.3",
  "description": "### Document Name - AWSConfigRemediation-DeleteDynamoDbTable\n\n## What does this document do?\nThis document deletes a given Amazon DynamoDB table using the [DeleteTable](https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_DeleteTable.html) API.\n\n## Input Parameters\n* AutomationAssumeRole: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.\n* TableName: (Required) The name of the table to delete.\n\n## Output Parameters\n* DeleteDynamoDbTable.Output: The standard HTTP response from the DeleteTable API.\n* VerifyDynamoDbTableDeletion.Output: Success message or failure exception.\n",
  "assumeRole": "{{ AutomationAssumeRole }}",
  "parameters": {
    "AutomationAssumeRole": {
      "type": "String",
      "description": "(Required) The ARN of the role that allows Automation to perform the actions on your behalf.",
      "allowedPattern": "^arn:(aws[a-zA-Z-]*)?:iam::\\d{12}:role/[\\w+=,.@-]+"
    },
    "TableName": {
      "type": "String",
      "description": "(Required) The name of the table to delete.",
      "allowedPattern": "^[\\w.-]{3,255}$"
    }
  },
  "outputs": [
    "DeleteDynamoDbTable.Output",
    "VerifyDynamoDbTableDeletion.Output"
  ],
  "mainSteps": [
    {
      "name": "DeleteDynamoDbTable",
      "action": "aws:executeAwsApi",
      "description": "## DeleteDynamoDbTable\nDeletes the given Amazon DynamoDB table.\n## Outputs\n* Output: The standard HTTP response from the DeleteTable API.\n",
      "timeoutSeconds": 600,
      "isEnd": false,
      "inputs": {
        "Service": "dynamodb",
        "Api": "DeleteTable",
        "TableName": "{{ TableName }}"
      },
      "outputs": [
        {
          "Name": "Output",
          "Selector": "$",
          "Type": "StringMap"
        }
      ]
    },
    {
      "name": "VerifyDynamoDbTableDeletion",
      "action": "aws:executeScript",
      "description": "## VerifyDynamoDbTableDeletion\nVerifies that the Amazon DynamoDB table has been successfully deleted.\n## Outputs\n* Output: Success message or failure exception.\n",
      "isEnd": true,
      "timeoutSeconds": 600,
      "inputs": {
        "Runtime": "python3.6",
        "Handler": "handler",
        "InputPayload": {
          "TableName": "{{ TableName }}"
        },
        "Script": "import boto3\nimport botocore\n\ndef handler(event, context):\n    dynamodb_client = boto3.client(\"dynamodb\")\n    table_name = event[\"TableName\"]\n    try:\n      dynamodb_waiter = dynamodb_client.get_waiter(\"table_not_exists\")\n      dynamodb_waiter.wait(TableName=table_name)\n      dynamodb_client.describe_table(TableName=table_name)\n    except botocore.exceptions.WaiterError:\n      error_message = f\"VERIFICATION FAILED. DYNAMODB TABLE {table_name} NOT DELETED.\"\n      raise Exception(error_message)\n    except dynamodb_client.exceptions.ResourceNotFoundException:\n        return {\"output\": \"Verification of 'DeleteDynamoDbTable' step successful.\"}"
      },
      "outputs": [
        {
          "Name": "Output",
          "Selector": "$.Payload.output",
          "Type": "String"
        }
      ]
    }
  ]
}
