{
  "schemaVersion": "0.3",
  "description": "Tutorial: Increase the availability of your application on Amazon EC2\n===\n\nThis Automation document creates a load balancer, creates a launch configuration for your instances, creates an Auto Scaling group with two or more instances, and associates the load balancer with the Auto Scaling group.\n\nPrerequisites\n---\n\nTo run the following Automation document, you must have permissions to run Automation workflows. The Automation workflow runs in the context of the current AWS Identity and Access Management (IAM) user. Additionally, you must have created a virtual private cloud (VPC) with one public subnet in two or more Availability Zones and launched an instance in the VPC.\n\nOutput\n---\n\nIn the output you will see the DNS name of the load balancer created. In a web browser, paste the DNS name for the load balancer into the address bar and press Enter. You'll see your website displayed. . For example:\n\n>my-lb-xxxxxxxxxx.us-west-2.elb.amazonaws.com",
  "assumeRole": "{{ AutomationAssumeRole }}",
  "parameters": {
    "SubnetId": {
      "type": "String",
      "description": "(Required) The subnet ID for the public subnet.",
      "allowedPattern": "^subnet-[a-z0-9]{8,17}$"
    },
    "LoadBalancerName": {
      "type": "String",
      "description": "(Optional) The name for the Load balancer",
      "default": "my-load-balancer"
    },
    "LaunchConfigurationName": {
      "type": "String",
      "description": "(Optional) The name for the Launch Configuration",
      "default": "my-launch-config"
    },
    "AutoScalingGroupName": {
      "type": "String",
      "description": "(Optional) The name for the Auto Scaling Group",
      "default": "my-auto-scaling-group"
    },
    "SecurityGroupName": {
      "type": "String",
      "description": "(Optional) The name for the Security Group",
      "default": "my-security-group"
    },
    "InstanceType": {
      "type": "String",
      "description": "(Optional) The EC2 instance type for the test instance. Recommended size: t2.micro.",
      "default": "t2.micro",
      "allowedValues": [
        "t2.micro",
        "t2.small",
        "t2.medium",
        "t2.large"
      ]
    },
    "AutomationAssumeRole": {
      "type": "String",
      "description": "(Optional) The IAM role for this execution. If no role is specified, AWS Systems Manager Automation will use the permissions of the user that executes this document.",
      "default": ""
    }
  },
  "mainSteps": [
    {
      "name": "createLoadBalancer",
      "action": "aws:executeAwsApi",
      "onFailure": "Abort",
      "inputs": {
        "Service": "ec2",
        "Api": "CreateLoadBalancer",
        "Listeners": [
          "{'InstancePort': 80, 'InstanceProtocol': 'HTTP', 'LoadBalancerPort': 80, 'Protocol': 'HTTP'}"
        ],
        "LoadBalancerName": "{{ LoadBalancerName }}",
        "Subnets": [
          "{{ SubnetId }}"
        ],
        "SecurityGroups": [
          "{{ createSecurityGroup.GroupId }}"
        ]
      },
      "isCritical": "true",
      "nextStep": "createLaunchConfiguration"
    },
    {
      "name": "deleteLoadBalancer",
      "action": "aws:executeAwsApi",
      "onFailure": "Continue",
      "inputs": {
        "Service": "ec2",
        "Api": "deleteLoadBalancer",
        "LoadBalancerName": "{{ LoadBalancerName }}"
      },
      "isCritical": "true",
      "isEnd": "true"
    },
    {
      "name": "describeSubnet",
      "action": "aws:executeAwsApi",
      "onFailure": "Abort",
      "inputs": {
        "Service": "ec2",
        "Api": "DescribeSubnets",
        "SubnetIds": [
          "{{ SubnetId }}"
        ]
      },
      "isCritical": "true"
    },
    {
      "name": "createLaunchConfiguration",
      "action": "aws:executeAwsApi",
      "onFailure": "step:deleteLaunchConfiguration",
      "inputs": {
        "Service": "autoscaling",
        "Api": "CreateLaunchConfiguration",
        "LaunchConfigurationName": "{{ LaunchConfigurationName }}",
        "ImageId": "{{ getLatestLinuxAMI.ImageId }}",
        "InstanceType": "{{ InstanceType }}",
        "SecurityGroups": [
          "{{ createSecurityGroup.GroupId }}"
        ]
      },
      "isCritical": "true",
      "nextStep": "createAutoScalingGroup"
    },
    {
      "name": "deleteLaunchConfiguration",
      "action": "aws:executeAwsApi",
      "onFailure": "Continue",
      "inputs": {
        "Service": "autoscaling",
        "Api": "DeleteLaunchConfiguration",
        "LaunchConfigurationName": "{{ LaunchConfigurationName }}"
      },
      "isCritical": "true",
      "nextStep": "deleteLoadBalancer"
    },
    {
      "name": "createAutoScalingGroup",
      "action": "aws:executeAwsApi",
      "onFailure": "step:deleteAutoScalingGroup",
      "inputs": {
        "Service": "autoscaling",
        "Api": "CreateAutoScalingGroup",
        "AutoScalingGroupName": "AutoScalingGroupName",
        "LaunchConfigurationName": "LaunchConfigurationName",
        "LoadBalancerNames": [
          "{{ LoadBalancerName }} "
        ],
        "MaxSize": "3",
        "MinSize": "1",
        "VPCZoneIdentifier": [
          "{{ SubnetId }}"
        ]
      },
      "isCritical": "true",
      "isEnd": "true"
    },
    {
      "name": "deleteAutoScalingGroup",
      "action": "aws:executeAwsApi",
      "onFailure": "Continue",
      "inputs": {
        "Service": "autoscaling",
        "Api": "DeleteAutoScalingGroup",
        "AutoScalingGroupName": "AutoScalingGroupName"
      },
      "isCritical": "true",
      "nextStep": "deleteLaunchConfiguration"
    },
    {
      "name": "getLatestLinuxAMI",
      "action": "aws:executeAwsApi",
      "onFailure": "Abort",
      "inputs": {
        "Service": "ssm",
        "Api": "GetParameter",
        "Name": "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"
      },
      "isCritical": "true"
    },
    {
      "name": "createSecurityGroup",
      "action": "aws:executeAwsApi",
      "onFailure": "Abort",
      "inputs": {
        "Service": "ec2",
        "Api": "CreateSecurityGroup",
        "VpcId": "{{ describeSubnet.VpcId }}",
        "GroupName": " {{ SecurityGroupName }} ",
        "Description": "Security group used by the test instance created by Automation execution {{ automation:EXECUTION_ID }}."
      },
      "isCritical": "true"
    }
  ]
}
