{
  "schemaVersion": "0.3",
  "description": "### Document name - AWSConfigRemediation-EnableNLBCrossZoneLoadBalancing\n\n## What does this document do?\nThis document enables `Cross Zone Load Balancing` on a given AWS Network load balancer using the [ModifyLoadBalancerAttributes](https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_ModifyLoadBalancerAttributes.html) API.\n\n## Input Parameters\n* AutomationAssumeRole: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.\n* LoadBalancerArn: (Required) The Amazon Resource Name (ARN) of the AWS Network load balancer.\n\n## Output Parameters\n* ModifyLoadBalancer.Response: The standard HTTP response from the ModifyLoadBalancerAttributes API.\n",
  "assumeRole": "{{ AutomationAssumeRole }}",
  "parameters": {
    "AutomationAssumeRole": {
      "type": "AWS::IAM::Role::Arn",
      "description": "(Required) The ARN of the role that allows Automation to perform the actions on your behalf."
    },
    "LoadBalancerArn": {
      "type": "String",
      "description": "(Required) The name of the AWS Network load balancer, for which `Cross Zone Load Balancing` is to be enabled.",
      "allowedPattern": "^arn:aws[a-z-]*:elasticloadbalancing:[a-z\\d-]+:\\d{12}:loadbalancer/net/[\\w/-]+$"
    }
  },
  "outputs": [
    "ModifyLoadBalancer.Response"
  ],
  "mainSteps": [
    {
      "name": "ModifyLoadBalancer",
      "action": "aws:executeAwsApi",
      "description": "## ModifyLoadBalancer\nMakes ModifyLoadBalancerAttributes API call to enable 'Cross Zone Load Balancing' on a given AWS Network load balancer.\n## Outputs\n* Response: The standard HTTP response from the ModifyLoadBalancerAttributes API.\n",
      "timeoutSeconds": 600,
      "isEnd": false,
      "inputs": {
        "Service": "elbv2",
        "Api": "ModifyLoadBalancerAttributes",
        "LoadBalancerArn": "{{ LoadBalancerArn }}",
        "Attributes": [
          {
            "Key": "load_balancing.cross_zone.enabled",
            "Value": "true"
          }
        ]
      },
      "outputs": [
        {
          "Name": "Response",
          "Selector": "$",
          "Type": "StringMap"
        }
      ]
    },
    {
      "name": "VerifyLoadBalancerState",
      "action": "aws:executeScript",
      "isEnd": true,
      "timeoutSeconds": 600,
      "description": "## VerifyLoadBalancerState\nVerifies that 'Cross Zone Load Balancing' is enabled on a given AWS Network load balancer.\n",
      "inputs": {
        "Runtime": "python3.11",
        "Handler": "handler",
        "InputPayload": {
          "LoadBalancerArn": "{{ LoadBalancerArn }}"
        },
        "Script": "import boto3\n\ndef verify_cross_zone_status(nlb_client, arn):\n    load_balancer_attributes = nlb_client.describe_load_balancer_attributes(\n        LoadBalancerArn=arn\n    ).get(\"Attributes\", [{}])\n    for attribute in load_balancer_attributes:\n        if (\n            attribute[\"Key\"] == \"load_balancing.cross_zone.enabled\"\n            and attribute[\"Value\"] == \"true\"\n        ):\n            return True\n    return False\n\ndef handler(event, context):\n    elbv2_client = boto3.client(\"elbv2\")\n    load_balancer_arn = event[\"LoadBalancerArn\"]\n    cross_zone_status = verify_cross_zone_status(elbv2_client, load_balancer_arn)\n    if cross_zone_status:\n        return {\n            \"output\": \"Verification of 'Cross Zone Load Balancing' on AWS Network load balancer is successful.\"\n        }\n    raise Exception(\n        \"VERIFICATION OF CROSS ZONE LOAD BALANCING ON AWS NETWORK LOAD BALANCER FAILED.\"\n    )"
      },
      "outputs": [
        {
          "Name": "Output",
          "Selector": "$.Payload.output",
          "Type": "String"
        }
      ]
    }
  ]
}
