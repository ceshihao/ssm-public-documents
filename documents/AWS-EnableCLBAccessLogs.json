{
  "description": "### Document Name - AWS-EnableCLBAccessLogs\n\n## What does this document do?\nThis document enables access logs for Classic Load Balancers.\n\n## Notes\n* You must attach a policy to the S3 bucket used to store the logs. Please see the following link for more details:\n(https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/enable-access-logs.html#attach-bucket-policy)\n* This document will execute successfully even if enabling access logs fails for one or more load balancers. Please check the execution output for complete information on successes and failures.\n\n## Input Parameters\n* LoadBalancerNames: (Required) Comma separated list of Classic Load Balancers to enable access logs for.\n* S3BucketName: (Required) The name of the Amazon S3 bucket where the access logs are stored.\n* EmitInterval: (Optional) The interval for publishing the access logs in minutes.\n  * Allowed Values: 5 | 60\n  * Default: 60\n* S3BucketPrefix: (Optional) The logical hierarchy you created for your Amazon S3 bucket, for example `my-bucket-prefix/prod`. If the prefix is not provided, the log is placed at the root level of the bucket.\n* AutomationAssumeRole: (Optional) The ARN of the role that allows Automation to perform the actions on your behalf.\n\n## Output Parameters\n* EnableCLBAccessLogs.SuccessesLoadBalancers: List of load balancer names where access logs where successfully enabled.\n* EnableCLBAccessLogs.FailedLoadBalancers: MapList of load balancer names where enabling access logs failed and the reason for the failure.\n\n## Minimum Permissions Required\n* `elasticloadbalancing:ModifyLoadBalancerAttributes` permission on the targeted classic load balancers.\n",
  "schemaVersion": "0.3",
  "assumeRole": "{{AutomationAssumeRole}}",
  "parameters": {
    "LoadBalancerNames": {
      "type": "StringList",
      "description": "(Required) Comma separated list of Classic Load Balancers to enable access logs for."
    },
    "EmitInterval": {
      "type": "Integer",
      "description": "(Optional) The interval for publishing the access logs in minutes. Default Value - 60 minutes.",
      "default": 60,
      "allowedValues": [
        5,
        60
      ]
    },
    "S3BucketName": {
      "type": "String",
      "description": "(Required) The name of the Amazon S3 bucket where the access logs are stored.",
      "allowedPattern": "(?=^.{3,63}$)(?!^(\\\\d{1,3}\\\\.){3}\\\\d{1,3}$)(^[a-z0-9]([a-z0-9-]*(\\\\.[a-z0-9])?)*$(?<!\\\\-))"
    },
    "S3BucketPrefix": {
      "type": "String",
      "description": "(Optional) The logical hierarchy you created for your Amazon S3 bucket.",
      "default": ""
    },
    "AutomationAssumeRole": {
      "type": "String",
      "description": "(Optional) The ARN of the role that allows Automation to perform the actions on your behalf.",
      "default": "",
      "allowedPattern": "^arn:aws(-cn|-us-gov)?:iam::\\d{12}:role\\/[\\w+=,.@_\\/-]+|^$"
    }
  },
  "outputs": [
    "EnableCLBAccessLogs.SuccessesLoadBalancers",
    "EnableCLBAccessLogs.FailedLoadBalancers"
  ],
  "mainSteps": [
    {
      "name": "EnableCLBAccessLogs",
      "action": "aws:executeScript",
      "onFailure": "Abort",
      "isCritical": true,
      "isEnd": true,
      "timeoutSeconds": 600,
      "description": "## EnableCLBAccessLogs\nEnables access logs for the targeted load balancers.\n## Inputs\n* LoadBalancerNames: The list of load balancer names.\n* EmitInterval: The interval for publishing the access logs.\n* S3BucketName: The name of the Amazon S3 bucket.\n* S3BucketPrefix: The logical hierarchy you created for the Amazon S3 bucket.\n## Outputs\n* SuccessesLoadBalancers: List of load balancer names where access logs where successfully enabled.\n* FailedLoadBalancers: MapList of load balancer names where enabling access logs failed and the reason for failure.\n",
      "inputs": {
        "Runtime": "python3.8",
        "Handler": "enable_CLB_AccessLogs",
        "InputPayload": {
          "LoadBalancerNames": "{{LoadBalancerNames}}",
          "EmitInterval": "{{EmitInterval}}",
          "S3BucketName": "{{S3BucketName}}",
          "S3BucketPrefix": "{{S3BucketPrefix}}"
        },
        "Script": "import json\nimport boto3\n\nclient = boto3.client('elb')\n\ndef enable_CLB_AccessLogs(event, context):\n    LoadBalancerNames = event['LoadBalancerNames']\n    EmitInterval = event['EmitInterval']\n    S3BucketName = event['S3BucketName']\n    S3BucketPrefix = event['S3BucketPrefix']\n    FailedloadBalancers = []\n    SuccessesloadBalancers = []\n    for loadBalancer in LoadBalancerNames:\n        try:\n            response = client.modify_load_balancer_attributes(\n                LoadBalancerName = loadBalancer,\n                LoadBalancerAttributes = {\n                    'AccessLog': {\n                        'Enabled': True,\n                        'S3BucketName': S3BucketName ,\n                        'EmitInterval': EmitInterval,\n                        'S3BucketPrefix': S3BucketPrefix\n                    }\n                }\n            )\n            SuccessesloadBalancers.append(loadBalancer)\n        except Exception as e :\n            FailedloadBalancers.append({'loadBalancersName': loadBalancer, \"ErrorMsg\":  str(e)})\n\n    return {\n        'SuccessesloadBalancers': SuccessesloadBalancers,\n        'FailedloadBalancers': FailedloadBalancers\n    }\n"
      },
      "outputs": [
        {
          "Name": "SuccessesLoadBalancers",
          "Selector": "$.Payload.SuccessesloadBalancers",
          "Type": "StringList"
        },
        {
          "Name": "FailedLoadBalancers",
          "Selector": "$.Payload.FailedloadBalancers",
          "Type": "MapList"
        }
      ]
    }
  ]
}
