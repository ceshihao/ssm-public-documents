{
  "schemaVersion": "0.3",
  "description": "### Document name - AWSConfigRemediation-DeleteVPCFlowLog\n\n## What does this document do?\nThis runbook deletes the virtual private cloud (VPC) flow log you specify using the [DeleteVPCFlowLog](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteFlowLogs.html) API.\n\n## Input Parameters\n* AutomationAssumeRole: (Required) The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that allows Systems Manager Automation to perform the actions on your behalf.\n* FlowLogId: (Required) The ID of the flow log that you want to delete.\n\n## Output Parameters\n* DeleteFlowLogs.Output: The response of the DeleteFlowLogs API call.\n",
  "assumeRole": "{{ AutomationAssumeRole }}",
  "parameters": {
    "AutomationAssumeRole": {
      "type": "AWS::IAM::Role::Arn",
      "description": "(Required) The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that allows Systems Manager Automation to perform the actions on your behalf."
    },
    "FlowLogId": {
      "type": "String",
      "description": "(Required) The ID of the flow log that you want to delete.",
      "allowedPattern": "^fl-[a-f0-9]+$"
    }
  },
  "outputs": [
    "DeleteFlowLogs.Output"
  ],
  "mainSteps": [
    {
      "name": "DeleteFlowLogs",
      "action": "aws:executeAwsApi",
      "description": "## DeleteFlowLogs\nDeletes the flow log you specify in the FlowLogId parameter.\n## Outputs\n* Output: The response of the DeleteFlowLogs API call.\n",
      "timeoutSeconds": 600,
      "isEnd": false,
      "inputs": {
        "Service": "ec2",
        "Api": "DeleteFlowLogs",
        "FlowLogIds": [
          "{{ FlowLogId }}"
        ]
      },
      "outputs": [
        {
          "Name": "Output",
          "Selector": "$",
          "Type": "StringMap"
        }
      ]
    },
    {
      "name": "VerifyFlowLogsDeletion",
      "action": "aws:executeScript",
      "description": "## VerifyFlowLogsDeletion\nVerifies the flow log has been deleted.\n## Outputs\n* Output: A success message or failure exception.\n",
      "isEnd": true,
      "timeoutSeconds": 600,
      "inputs": {
        "Runtime": "python3.8",
        "Handler": "handler",
        "InputPayload": {
          "FlowLogId": "{{ FlowLogId }}"
        },
        "Script": "import boto3\nimport botocore\n\ndef handler(event, context):\n    ec2_client = boto3.client(\"ec2\")\n    flow_log_id = event[\"FlowLogId\"]\n    response = ec2_client.describe_flow_logs(FlowLogIds=[flow_log_id])\n    if not response[\"FlowLogs\"]:\n        return {\"output\": \"Verification of delete vpc flow log is successful.\"}\n    error_message = f\"VERIFICATION FAILED. VPC FLOW LOG {flow_log_id} DELETION UNSUCCESSFUL.\"\n    raise Exception(error_message)"
      },
      "outputs": [
        {
          "Name": "Output",
          "Selector": "$.Payload.output",
          "Type": "String"
        }
      ]
    }
  ]
}
