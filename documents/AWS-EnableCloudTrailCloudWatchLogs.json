{
  "description": "### Document Name - AWS-EnableCloudTrailCloudWatchLogs\n\n## What does this document do?\nThis document updates the configuration of one or more CloudTrail trails and enables sending the events to a CloudWatch log group.\n\n## Input Parameters\n* TrailNames: (Required) A comma separated list of the names of the targeted CloudTrail trails.\n* CloudWatchLogsLogGroupArn: (Required) The ARN of the CloudWatch log group where the CloudTrail logs will be delivered.\n* CloudWatchLogsRoleArn: (Required) The ARN of the role for the CloudWatch Logs endpoint to assume to write to the specified log group.\n* AutomationAssumeRole: (Optional) The ARN of the role that allows Automation to perform the actions on your behalf.\n\n## Output Parameters\nThis document has no outputs.\n\n## Minimum Permissions Required\n* `cloudtrail:UpdateTrail` on the targeted trails\n* `iam:PassRole` on the CloudWatchLogsRoleArn\n",
  "schemaVersion": "0.3",
  "assumeRole": "{{AutomationAssumeRole}}",
  "parameters": {
    "TrailNames": {
      "type": "StringList",
      "description": "(Required) A comma separated list of the names of the targeted CloudTrail trails.",
      "allowedPattern": "^[\\w][\\w\\.,\\-_/]+[\\w]$"
    },
    "CloudWatchLogsLogGroupArn": {
      "type": "String",
      "description": "(Required) The ARN of the CloudWatch log group where the CloudTrail logs will be delivered.",
      "allowedPattern": "^arn:aws(-cn|-us-gov)?:logs:[a-z]{2}-[a-z]*-[0-9]{1}:\\d{12}:log-group:[\\.\\-_/#A-Za-z0-9]+:\\*"
    },
    "CloudWatchLogsRoleArn": {
      "type": "String",
      "description": "(Required) The ARN of the role for the CloudWatch Logs endpoint to assume to write to the specified log group.",
      "default": "",
      "allowedPattern": "^arn:aws(-cn|-us-gov)?:iam::\\d{12}:role\\/[\\w+=,.@_\\/-]+|^$"
    },
    "AutomationAssumeRole": {
      "type": "String",
      "description": "(Optional) The ARN of the role that allows Automation to perform the actions on your behalf.",
      "default": "",
      "allowedPattern": "^arn:aws(-cn|-us-gov)?:iam::\\d{12}:role\\/[\\w+=,.@_\\/-]+|^$"
    }
  },
  "mainSteps": [
    {
      "name": "EnableCloudTrailCloudWatchLogs",
      "action": "aws:executeScript",
      "timeoutSeconds": 300,
      "onFailure": "Abort",
      "isCritical": true,
      "isEnd": true,
      "description": "## EnableCloudTrailCloudWatchLogs\nUpdates the targeted trails to deliver their logs to the specified log group.\n## Inputs\n* TrailNames: The list of the names of the targeted CloudTrail trails.\n* LogGroupArn: The ARN of the log group where the CloudTrail logs will be delivered.\n* CwRoleArn: The ARN of the role for the CloudWatch Logs endpoint to assume to write to the specified log group.\n## Outputs\nThis step has no outputs.\n",
      "inputs": {
        "Runtime": "python3.7",
        "Handler": "enable_ct_cw_logs_handler",
        "InputPayload": {
          "TrailNames": "{{TrailNames}}",
          "LogGroupArn": "{{CloudWatchLogsLogGroupArn}}",
          "CwRoleArn": "{{CloudWatchLogsRoleArn}}"
        },
        "Script": "import boto3\n\ndef enable_ct_cw_logs_handler(event, bucket):\n  trail_names = event[\"TrailNames\"]\n  log_group = event[\"LogGroupArn\"]\n  role_arn = event[\"CwRoleArn\"]\n  client = boto3.client('cloudtrail')\n\n  for trail_name in trail_names:\n    try:\n      client.update_trail(Name = trail_name, CloudWatchLogsLogGroupArn = log_group, CloudWatchLogsRoleArn = role_arn)\n      print(\"CloudWatch Logs are now enabled for the trail '{}' and logs will be delivered to the log group: '{}'.\".format(trail_name, log_group))\n    except Exception as e:\n      errorMsg = str(e)\n      raise Exception(\"Unable to perform the required action on trail '{}'. error: '{}'.\".format(trail_name, errorMsg))\n"
      }
    }
  ]
}
