{
  "schemaVersion": "0.3",
  "description": "### Document name - AWSConfigRemediation-EnableVPCFlowLogsToCloudWatch\n\n## What does this document do?\nThis runbook replaces an existing VPC Flow Log that publishes flow log data to Amazon Simple Storage Service (Amazon S3) with a flow log that publishes flow log data to the Amazon CloudWatch Logs (CloudWatch Logs) log group you specify using the [CreateFlowLogs](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFlowLogs.html) and\n[DeleteVPCFlowLog](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteFlowLogs.html) APIs.\n\n## Input Parameters\n* AutomationAssumeRole: (Required) The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that allows Systems Manager Automation to perform the actions on your behalf.\n* FlowLogId: (Required) The ID of the flow log that publishes to Amazon S3 you want to replace.\n* MaxAggregationInterval: (Optional) The maximum interval of time, in seconds, during which a flow of packets is captured and aggregated into a flow log record.\n  * Default: 600\n  * Valid Values: 60, 600\n* TrafficType: (Required) The type of flow log data you want to record and publish.\n  * Valid Values: ACCEPT, REJECT, ALL\n* DestinationLogGroup: (Required) The name of the CloudWatch Logs log group you want to publish flow log data to.\n* DeliverLogsPermissionArn: (Required) The ARN of the AWS Identity and Access Management (IAM) role you want to use that provides Amazon Elastic Compute Cloud (Amazon EC2) the requisite permissions to publish flow log data to CloudWatch Logs.\n\n## Output Parameters\n* CreateFlowLog.FlowlogId: Id of the Amazon VPC flow log created.\n* DeleteFlowLog.Response: The standard HTTP response from DeleteFlowLogs API call.\n",
  "assumeRole": "{{ AutomationAssumeRole }}",
  "parameters": {
    "AutomationAssumeRole": {
      "type": "AWS::IAM::Role::Arn",
      "description": "(Required) The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that allows Systems Manager Automation to perform the actions on your behalf."
    },
    "FlowLogId": {
      "type": "String",
      "description": "(Required) The ID of the flow log that publishes to Amazon S3 you want to replace.",
      "allowedPattern": "^fl-[a-z0-9]{17}"
    },
    "MaxAggregationInterval": {
      "type": "Integer",
      "description": "(Optional) The maximum interval of time, in seconds, during which a flow of packets is captured and aggregated into a flow log record.",
      "default": 600,
      "allowedValues": [
        60,
        600
      ]
    },
    "TrafficType": {
      "type": "String",
      "description": "(Required) The type of flow log data you want to record and publish.",
      "allowedValues": [
        "ACCEPT",
        "REJECT",
        "ALL"
      ]
    },
    "DestinationLogGroup": {
      "type": "String",
      "description": "(Required) The name of the CloudWatch Logs log group you want to publish flow log data to.",
      "allowedPattern": "[\\.\\-_/#A-Za-z0-9]+"
    },
    "DeliverLogsPermissionArn": {
      "type": "String",
      "description": "(Required) The ARN of the AWS Identity and Access Management (IAM) role you want to use that provides Amazon Elastic Compute Cloud (Amazon EC2) the requisite permissions to publish flow log data to CloudWatch Logs.",
      "allowedPattern": "^arn:(aws[a-zA-Z-]*)?:iam::\\d{12}:role/[\\w+=,.@/-]+$"
    }
  },
  "outputs": [
    "CreateFlowLog.FlowlogId",
    "DeleteFlowLog.Response"
  ],
  "mainSteps": [
    {
      "name": "GetVPCResourceId",
      "action": "aws:executeAwsApi",
      "description": "## GetVPCResourceId\nGathers details about your VPC from the value you specify in the FlowLogId parameter.\n## Outputs\n* ResourceId: ResourceId of Amazon VPC.\n",
      "timeoutSeconds": 600,
      "isEnd": false,
      "inputs": {
        "Service": "ec2",
        "Api": "DescribeFlowLogs",
        "Filters": [
          {
            "Name": "flow-log-id",
            "Values": [
              "{{ FlowLogId }}"
            ]
          }
        ]
      },
      "outputs": [
        {
          "Name": "ResourceId",
          "Selector": "$.FlowLogs[0].ResourceId",
          "Type": "String"
        }
      ]
    },
    {
      "name": "CreateFlowLog",
      "action": "aws:executeAwsApi",
      "description": "## CreateFlowLog\nCreates a flow log based on the values you specify for the runbook parameters.\n## Outputs\n* FlowlogId: Id of the VPC flow log created.\n",
      "timeoutSeconds": 600,
      "isEnd": false,
      "inputs": {
        "Service": "ec2",
        "Api": "CreateFlowLogs",
        "LogGroupName": "{{ DestinationLogGroup }}",
        "DeliverLogsPermissionArn": "{{ DeliverLogsPermissionArn }}",
        "ResourceType": "VPC",
        "MaxAggregationInterval": "{{ MaxAggregationInterval }}",
        "TrafficType": "{{ TrafficType }}",
        "ResourceIds": [
          "{{ GetVPCResourceId.ResourceId }}"
        ]
      },
      "outputs": [
        {
          "Name": "FlowlogId",
          "Selector": "$.FlowLogIds[0]",
          "Type": "String"
        }
      ]
    },
    {
      "name": "VerifyFlowLogCreated",
      "action": "aws:assertAwsResourceProperty",
      "timeoutSeconds": 600,
      "isEnd": true,
      "description": "## VerifyFlowLogCreated\nVerifies the newly created flow log publishes to CloudWatch Logs.\n",
      "inputs": {
        "Service": "ec2",
        "Api": "DescribeFlowLogs",
        "Filters": [
          {
            "Name": "flow-log-id",
            "Values": [
              "{{ CreateFlowLog.FlowlogId }}"
            ]
          }
        ],
        "PropertySelector": "FlowLogs[0].LogDestinationType",
        "DesiredValues": [
          "cloud-watch-logs"
        ]
      }
    },
    {
      "name": "DeleteFlowLog",
      "action": "aws:executeAwsApi",
      "description": "## DeleteFlowLog\nDeletes the flow log that publishes to Amazon S3.\n## Outputs\n* Response: The standard HTTP response from DeleteFlowLogs API call.\n",
      "timeoutSeconds": 600,
      "isEnd": false,
      "inputs": {
        "Service": "ec2",
        "Api": "DeleteFlowLogs",
        "FlowLogIds": [
          "{{ FlowLogId }}"
        ]
      },
      "outputs": [
        {
          "Name": "Response",
          "Selector": "$",
          "Type": "StringMap"
        }
      ]
    },
    {
      "name": "VerifyFlowLogDeleted",
      "action": "aws:executeScript",
      "description": "## VerifyFlowLogDeleted\nConfirms the flow log that published to Amazon S3 was deleted.\n## Outputs\n* Output: A success message or failure exception.\n",
      "isEnd": true,
      "timeoutSeconds": 600,
      "inputs": {
        "Runtime": "python3.8",
        "Handler": "handler",
        "InputPayload": {
          "FlowLogId": "{{ FlowLogId }}"
        },
        "Script": "import boto3\nimport botocore\n\ndef verify_deleted_flow_log(ec2_client, deleted_flow_log_id):\n    response = ec2_client.describe_flow_logs(FlowLogIds=[deleted_flow_log_id])\n    if not response[\"FlowLogs\"]:\n        return True\n    return False\n\ndef handler(event, context):\n    ec2_client = boto3.client(\"ec2\")\n    deleted_flow_log_id = event[\"FlowLogId\"]\n\n    deleted_flow_log_response = verify_deleted_flow_log(ec2_client, deleted_flow_log_id)\n    if deleted_flow_log_response:\n        return {\n            \"output\": {\n                \"Message\": \"Verification of delete vpc flow log id '{}' is successful\".format(\n                    deleted_flow_log_id\n                )\n            }\n        }\n    error_message = \"VERIFICATION FAILED. VPC FLOW LOG '{}' DELETION UNSUCCESSFUL\".format(\n        deleted_flow_log_id\n    )\n    raise Exception(error_message)"
      },
      "outputs": [
        {
          "Name": "Output",
          "Selector": "$.Payload.output",
          "Type": "StringMap"
        }
      ]
    }
  ]
}
