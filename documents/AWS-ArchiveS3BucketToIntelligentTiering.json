{
  "schemaVersion": "0.3",
  "description": "# AWS-ArchiveS3BucketToIntelligentTiering\n\n## What does this document do?\nThe AWS-ArchiveS3BucketToIntelligentTiering runbook either creates a new, or modifies an existing, intelligent \ntiering configuration on an Amazon S3 Bucket. Each S3 Bucket can have up to 1,000 intelligent tiering \nconfigurations. If the Configuration ID provided does not exist, a new configuration will be created and put on the\nbucket. If the Configuration exists, the current configuration will be replaced with the values provided for \nrunbook execution. The S3 Intelligent-Tiering storage class is designed to optimize storage costs by automatically \nmoving data to the most cost-effective storage access tier, without performance impact or operational overhead. An \nobject must be larger than 128 KB for a lifecycle rule to transition it from STANDARD or STANDARD_IA to \nINTELLIGENT_TIERING. For more information, see [Amazon S3 Intelligent-Tiering](https://docs.aws.amazon.com/\\\nAmazonS3/latest/userguide/intelligent-tiering.html) in the Amazon S3 User Guide.\n\n## Input Parameters\n* AutomationAssumeRole: (Optional) The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) \nrole that allows Systems Manager Automation to perform the actions on your behalf. If no role is specified, Systems \nManager Automation uses the permissions of the user that starts this runbook.\n  * Default: \"\"\n* BucketName: (Required) The name of the Amazon S3 bucket for which you want to archive to intelligent tiering.\n* ConfigurationId: (Required) The ID used to identify the S3 Intelligent-Tiering configuration. This can be a new \nconfiguration ID, or the ID of an configuration which already exists.\n* NumberOfDaysToArchive: (Required) The number of consecutive days, between 90 and 730 days, of no access after \nwhich an S3 object will be eligible to be transitioned to Archive Access. A value must be set for either \n`NumberOfDaysToArchive` or `NumberOfDaysToDeepArchive`, and can be set for both. For more information, see Amazon \nS3 Intelligent-Tiering in the [Amazon S3 User Guide](https://docs.aws.amazon.com/AmazonS3/latest/userguide/intelli\\\ngent-tiering.html).\n  * Default: \"\"\n* NumberOfDaysToDeepArchive: (Required) The number of consecutive days, between 180 and 730 days, of no access \nafter which an S3 object will be eligible to be transitioned to Deep Archive Access. A value must be set for either\n`NumberOfDaysToArchive` or `NumberOfDaysToDeepArchive`, and can be set for both. For more information, see Amazon \nS3 Intelligent-Tiering in the [Amazon S3 User Guide](https://docs.aws.amazon.com/AmazonS3/latest/userguide/intelli\\\ngent-tiering.html).\n  * Default: \"\"\n* S3Prefix: (Optional) An object key name prefix that identifies the subset of objects to which the configuration \napplies.\n  * Default: \"\"\n* Tags: (Optional) Key-value name pair(s) which identify the subset of objects to which the rule applies. For \nexample: Single tag example: {\"Key\": \"Classification\", \"Value\": \"Confidential\"}. \nMulti-tag example: {\"Key\": \"Classification\", \"Value\": \"Confidential\"},{\"Key\": \"Category\", \"Value\": \"PCI\"}\n  * Default: []\n",
  "assumeRole": "{{ AutomationAssumeRole }}",
  "parameters": {
    "AutomationAssumeRole": {
      "type": "AWS::IAM::Role::Arn",
      "description": "(Optional) The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that allows \nSystems Manager Automation to perform the actions on your behalf. If no role is specified, Systems Manager \nAutomation uses the permissions of the user that starts this runbook.\n",
      "default": ""
    },
    "BucketName": {
      "type": "AWS::S3::Bucket::Name",
      "description": "(Required) The name of the Amazon S3 bucket for which you want to archive to intelligent tiering.\n"
    },
    "ConfigurationId": {
      "type": "String",
      "description": "(Required) The ID used to identify the S3 Intelligent-Tiering configuration. This can be a new configuration \nID, or the ID of an configuration which already exists.\n",
      "allowedPattern": "^[a-zA-Z0-9_-]{1,1024}$"
    },
    "NumberOfDaysToArchive": {
      "type": "String",
      "description": "(Required) The number of consecutive days, between 90 and 730 days, of no access after which an S3 object will be\neligible to be transitioned to Archive Access. A value must be set for either `NumberOfDaysToArchive` or \n`NumberOfDaysToDeepArchive`, and can be set for both. For more information, see Amazon S3 Intelligent-Tiering in \nthe [Amazon S3 User Guide](https://docs.aws.amazon.com/AmazonS3/latest/userguide/intelligent-tiering.html).\n",
      "default": "",
      "allowedPattern": "^(|9\\d|[1-6]\\d\\d|7[0-2]\\d|730)$"
    },
    "NumberOfDaysToDeepArchive": {
      "type": "String",
      "description": "(Required) The number of consecutive days, between 180 and 730 days, of no access after which an S3 object will \nbe eligible to be transitioned to Deep Archive Access. A value must be set for either `NumberOfDaysToArchive` or \n`NumberOfDaysToDeepArchive`, and can be set for both. For more information, see Amazon S3 Intelligent-Tiering in \nthe [Amazon S3 User Guide](https://docs.aws.amazon.com/AmazonS3/latest/userguide/intelligent-tiering.html).\n",
      "default": "",
      "allowedPattern": "^(|1[89]\\d|[2-6]\\d\\d|7[0-2]\\d|730)$"
    },
    "S3Prefix": {
      "type": "String",
      "description": "(Optional) An object key name prefix that identifies the subset of objects to which the configuration applies.\n",
      "default": "",
      "allowedPattern": "^$|^[^\\/]{1,1024}$"
    },
    "Tags": {
      "type": "MapList",
      "description": "(Optional) Key-value name pair(s) which identify the subset of objects to which the rule applies. Single tag \nexample: {\"Key\": \"Classification\", \"Value\": \"Confidential\"}. Multi-tag example: \n{\"Key\": \"Classification\", \"Value\": \"Confidential\"},{\"Key\": \"Category\", \"Value\": \"PCI\"}\n",
      "default": [],
      "allowedPattern": "^$|\\{\\s{0,}\"Key\"[\\s:]+\"[a-zA-Z][a-zA-Z0-9-]{0,1023}\"[\\s,]+\"Value\"[\\s:]+\"[a-zA-Z][a-zA-Z0-9-]{0,1023}\"\\s{0,}\\}"
    }
  },
  "mainSteps": [
    {
      "name": "PutBucketIntelligentTieringConfiguration",
      "action": "aws:executeScript",
      "timeoutSeconds": 600,
      "description": "## PutBucketIntelligentTieringConfiguration\nThis step puts an S3 Intelligent-Tiering configuration on the specified bucket.\n",
      "inputs": {
        "Runtime": "python3.8",
        "Handler": "handler",
        "InputPayload": {
          "BucketName": "{{ BucketName }}",
          "ConfigurationId": "{{ ConfigurationId }}",
          "NumberOfDaysToArchive": "{{ NumberOfDaysToArchive }}",
          "NumberOfDaysToDeepArchive": "{{ NumberOfDaysToDeepArchive }}",
          "S3Prefix": "{{ S3Prefix }}",
          "Tags": "{{ Tags }}"
        },
        "Script": "import boto3\nimport botocore\n\n\ndef handler(event, context):\n    bucket_name = event[\"BucketName\"]\n    configuration_id = event[\"ConfigurationId\"]\n    days_to_archive = event[\"NumberOfDaysToArchive\"]\n    days_to_deep_archive = event[\"NumberOfDaysToDeepArchive\"]\n    s3_prefix = event[\"S3Prefix\"]\n    tags = event[\"Tags\"]\n\n    s3_client = boto3.client(\"s3\")\n\n    configuration = {\"Id\": configuration_id, \"Status\": \"Enabled\"}\n\n    bucket_filter = None\n    if len(tags) == 1 and not s3_prefix:\n        bucket_filter = {\"Tag\": tags[0]}\n    elif len(tags) > 1 and not s3_prefix:\n        bucket_filter = {\"And\": {\"Tags\": tags}}\n    elif s3_prefix and not tags:\n        bucket_filter = {\"Prefix\": s3_prefix}\n    elif s3_prefix and tags:\n        bucket_filter = {\"And\": {\"Prefix\": s3_prefix, \"Tags\": tags}}\n    if bucket_filter:\n        configuration[\"Filter\"] = bucket_filter\n\n    tierings = []\n    if days_to_archive:\n        tierings.append({\"AccessTier\": \"ARCHIVE_ACCESS\", \"Days\": int(days_to_archive)})\n    if days_to_deep_archive:\n        tierings.append({\"AccessTier\": \"DEEP_ARCHIVE_ACCESS\", \"Days\": int(days_to_deep_archive)})\n    if tierings:\n        configuration[\"Tierings\"] = tierings\n\n    try:\n        s3_client.put_bucket_intelligent_tiering_configuration(\n            Bucket=bucket_name, Id=configuration_id, IntelligentTieringConfiguration=configuration\n        )\n    except botocore.exceptions.ClientError as error:\n        raise Exception from error\n"
      }
    },
    {
      "name": "VerifyBucketIntelligentTieringConfiguration",
      "action": "aws:assertAwsResourceProperty",
      "description": "## VerifyBucketIntelligentTieringConfiguration\nVerifies that the S3 Bucket Intelligent Configuration has been configured on the S3 Bucket and is enabled.\n",
      "timeoutSeconds": 600,
      "inputs": {
        "Service": "s3",
        "Api": "GetBucketIntelligentTieringConfiguration",
        "Bucket": "{{ BucketName }}",
        "Id": "{{ ConfigurationId }}",
        "PropertySelector": "$.IntelligentTieringConfiguration.Status",
        "DesiredValues": [
          "Enabled"
        ]
      }
    }
  ]
}
