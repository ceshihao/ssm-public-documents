{
  "description": "The **AWSSupport-TroubleshootCodeDeploy** automation runbook checks the reasons why a specific Amazon CodeDeploy deployment targeting an Amazon EC2 instance failed by verifying the required AWS Identiy and Access Management (AWS IAM) permissions on the instance, which lifecycle hook failed, and the error reported.\nThe runbook then outputs troubleshooting steps to assist with resolving the failed deployment.\n#### Parameters\n1. **AutomationAssumeRole**:\n    * Type: String\n    * Description: **(Optional)** The ARN of the role that allows Automation to perform the actions on your behalf. If no role is specified, this document will use the permissions of the user that executes this document.\n2. **DeploymentId**:\n    * Type: String\n    * Description: **(Required)** Provide the deployment Id which failed. (e.g. d-CPLJA860O)\n3. **InstanceId**:\n    * Type: String\n    * Description: **(Required)** Provide the Instance Id where the deployment failed. (e.g. i-05fa91429c6cdcb49)",
  "schemaVersion": "0.3",
  "assumeRole": "{{ AutomationAssumeRole }}",
  "parameters": {
    "AutomationAssumeRole": {
      "default": "",
      "type": "AWS::IAM::Role::Arn",
      "description": "(Optional) The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that allows Systems Manager Automation to perform the actions on your behalf. If no role is specified, Systems Manager Automation uses the permissions of the user that starts this runbook."
    },
    "DeploymentId": {
      "type": "String",
      "description": "(Required) Deployment Id which failed.",
      "allowedPattern": "^d-[A-Z0-9]{9}$"
    },
    "InstanceId": {
      "type": "AWS::EC2::Instance::Id",
      "description": "(Required) The instance ID where the deployment failed.",
      "allowedPattern": "^i-[a-z0-9]{8,17}$"
    }
  },
  "mainSteps": [
    {
      "name": "VerifyDeployment",
      "action": "aws:executeAwsApi",
      "inputs": {
        "Service": "Codedeploy",
        "Api": "GetDeploymentTarget",
        "deploymentId": "{{ DeploymentId }}",
        "targetId": "{{ InstanceId }}"
      },
      "description": "Verify if the Amazon CodeDeploy deployment exists and if the Amazon EC2 instance belongs to it.",
      "onFailure": "Abort",
      "nextStep": "CheckInstanceDetails"
    },
    {
      "name": "CheckInstanceDetails",
      "description": "Collects information about the Amazon EC2 instance.",
      "action": "aws:executeScript",
      "onFailure": "Abort",
      "onCancel": "Abort",
      "isCritical": true,
      "nextStep": "TroubleshootCodedeploy",
      "inputs": {
        "InputPayload": {
          "InstanceId": "{{ InstanceId }}"
        },
        "Handler": "CheckInstanceDetails.script_handler",
        "Runtime": "python3.11",
        "Attachment": "artifact.zip"
      },
      "outputs": [
        {
          "Name": "Instanceprofile",
          "Selector": "$.Payload.Instanceprofile",
          "Type": "String"
        },
        {
          "Name": "InstanceSubnet",
          "Selector": "$.Payload.InstanceSubnet",
          "Type": "String"
        },
        {
          "Name": "InstanceState",
          "Selector": "$.Payload.InstanceState",
          "Type": "String"
        },
        {
          "Name": "StateReason",
          "Selector": "$.Payload.StateReason",
          "Type": "String"
        }
      ]
    },
    {
      "name": "TroubleshootCodedeploy",
      "description": "Attempts to detect the issues related to the Amazon CodeDeploy deployment.",
      "action": "aws:executeScript",
      "onFailure": "Abort",
      "onCancel": "Abort",
      "isCritical": true,
      "inputs": {
        "InputPayload": {
          "InstanceId": "{{ InstanceId }}",
          "DeploymentId": "{{ DeploymentId }}",
          "Instanceprofile": "{{CheckInstanceDetails.Instanceprofile }}",
          "InstanceSubnet": "{{ CheckInstanceDetails.InstanceSubnet }}",
          "InstanceState": "{{CheckInstanceDetails.InstanceState }}",
          "StateReason": "{{CheckInstanceDetails.StateReason}}"
        },
        "Handler": "TroubleshootCodeDeploy.script_handler",
        "Runtime": "python3.11",
        "Attachment": "artifact.zip"
      },
      "outputs": [
        {
          "Name": "output",
          "Selector": "$.Payload.FinalResult",
          "Type": "String"
        }
      ],
      "isEnd": true
    }
  ],
  "outputs": [
    "TroubleshootCodedeploy.output"
  ],
  "files": {
    "artifact.zip": {
      "checksums": {
        "SHA256": "a5584b50f50ad9c6875e9ace324fe88eb7da1bfd4787e99c3fb909f4c37453c3"
      }
    }
  }
}
