{
  "description": "### Document name - AWS-ConfigureCloudWatchOnEC2Instance\n\n## What does this document do?\nThe AWS-ConfigureCloudWatchOnEC2Instance Automation document enables or disables CloudWatch monitoring on an EC2 instance.\n\n## Input Parameters\n* InstanceId: (Required) The ID of the EC2 instance on which you want to enable CloudWatch monitoring.\n* status: (Optional) Specifies whether to enable or disable CloudWatch.\n  * Allowed Values: Enabled | Disabled\n  * Default: Enabled\n* properties: (Optional) This parameter is not supported. It is listed here for backwards compatibility.\n* AutomationAssumeRole: (Optional) The Amazon Resource Name (ARN) of the role that allows SSM Automation to perform the actions on your behalf.\n\n## Output parameters\nNone\n",
  "schemaVersion": "0.3",
  "assumeRole": "{{ AutomationAssumeRole }}",
  "parameters": {
    "InstanceId": {
      "type": "String",
      "description": "(Required) The ID of the EC2 instance on which you want to enable CloudWatch monitoring."
    },
    "status": {
      "type": "String",
      "description": "(Optional) Specifies whether to enable or disable CloudWatch. Valid values: \"Enabled\" | \"Disabled\"",
      "allowedValues": [
        "Enabled",
        "Disabled"
      ],
      "default": "Enabled"
    },
    "AutomationAssumeRole": {
      "default": "",
      "type": "String",
      "description": "(Optional) The Amazon Resource Name (ARN) of the role that allows SSM Automation to perform the actions on your behalf."
    },
    "properties": {
      "type": "String",
      "description": "(Optional) This parameter is not supported. It is listed here for backwards compatibility.",
      "default": ""
    }
  },
  "mainSteps": [
    {
      "name": "configureCloudWatch",
      "action": "aws:executeScript",
      "isEnd": true,
      "description": "## configureCloudWatch\nConfigures Cloudwatch on the EC2 instance with the given status.\n## Inputs\n* InstanceId: The ID of the EC2 instance on which you want to enable CloudWatch monitoring.\n* status: Specifies whether to enable or disable CloudWatch.\n",
      "inputs": {
        "Runtime": "python3.6",
        "Handler": "configurecloudwatch_handler",
        "InputPayload": {
          "InstanceId": "{{InstanceId}}",
          "status": "{{status}}"
        },
        "Script": "import boto3\n\ndef configurecloudwatch_handler(event, context):\n  ec2_client = boto3.client('ec2')\n  instance_id = event[\"InstanceId\"]\n  new_state = event[\"status\"]\n\n  if new_state == \"Enabled\":\n    ec2_client.monitor_instances(InstanceIds=[instance_id])\n  elif new_state == \"Disabled\":\n    ec2_client.unmonitor_instances(InstanceIds=[instance_id])"
      }
    }
  ]
}
