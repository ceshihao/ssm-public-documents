{
  "description": "### Document name - AWSFIS-Run-Kill-Process\n\n## What does this document do?\nIt kills a particular process by name in an instance, using the `killall` command.\n\n## Input Parameters\n* ProcessName: (Required) Name of the process to kill.\n* Signal: The SIGNAL to be sent along with the kill command (default: SIGTERM). The allowed values are:\n  * SIGTERM: Signal used for gracefully terminate a process. Can be referred as soft kill, because the receiver may choose to ignore it.\n  * SIGKILL: Signal used for immediate termination of a process. Cannot be caught, ignored or blocked. Child processes are killed as well.\n\n## Output Parameters\nNone.\n",
  "schemaVersion": "2.2",
  "parameters": {
    "ProcessName": {
      "type": "String",
      "description": "(Required) Name of the process to kill, using the `killall` command. ",
      "allowedPattern": "^[0-9a-zA-Z.\\-=_]{1,128}$"
    },
    "Signal": {
      "type": "String",
      "description": "The SIGNAL to be sent along with the kill command (default: SIGTERM).\nThe allowed values are:\n* SIGTERM: Signal used for graceful process termination. Can be referred as soft kill, because the receiver may choose to ignore it.\n* SIGKILL: Signal used for immediate process termination. Cannot be caught, ignored or blocked. Child processes are killed as well.\n",
      "default": "SIGTERM",
      "allowedValues": [
        "SIGTERM",
        "SIGKILL"
      ]
    }
  },
  "mainSteps": [
    {
      "action": "aws:runShellScript",
      "name": "KillProcess",
      "precondition": {
        "StringEquals": [
          "platformType",
          "Linux"
        ]
      },
      "description": "## Parameters: ProcessName\nThis step will attempt to kill the specified process, using the `killall` command.\n",
      "inputs": {
        "maxAttempts": 1,
        "timeoutSeconds": 10,
        "runCommand": [
          "killall -{{ Signal }} '{{ ProcessName }}'\necho Done with command: \"killall -{{ Signal }} '{{ ProcessName }}'\""
        ]
      }
    }
  ]
}
