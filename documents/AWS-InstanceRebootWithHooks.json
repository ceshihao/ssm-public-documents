{
  "schemaVersion": "2.2",
  "description": "This document is used to schedule an instance reboot at a later time with custom provided script to be run as post-reboot hook. Requires SSM Agent 3.0.502 or higher, and Patching Operation running at least once prior to the execution. ",
  "parameters": {
    "PostRebootHookDocName": {
      "type": "String",
      "description": "Document Name for Post Reboot Hook",
      "default": "AWS-Noop",
      "allowedPattern": "(^[a-zA-Z0-9_\\-.]{3,128}$)|(^arn:[a-z0-9][-.a-z0-9]{0,62}:[a-z0-9][-.a-z0-9]{0,62}:([a-z0-9][-.a-z0-9]{0,62})?:([a-z0-9][-.a-z0-9]{0,62})?:document\\/[a-zA-Z0-9_\\-.]{3,128}$)"
    }
  },
  "mainSteps": [
    {
      "precondition": {
        "StringEquals": [
          "platformType",
          "Linux"
        ]
      },
      "action": "aws:runShellScript",
      "name": "VerifyPendingRebootPatchesAndRebootLinux",
      "inputs": {
        "runCommand": [
          "localFile=/var/log/amazon/ssm/patch-configuration/patch-inventory-from-last-operation.json",
          "[[ ! -f \"$localFile\" ]] && exit 169",
          "installedPendingRebootCount=$(cat $localFile | grep 'InstalledPendingRebootCount' | sed 's/[^0-9]*//g')",
          "if [[ \"$installedPendingRebootCount\" -eq 0 ]]; then",
          "     echo \"No pending reboot patches were found. Exiting document execution.\"",
          "     exit 168",
          "fi",
          "instanceRebootFile=/var/log/amazon/ssm/patch-instance-reboot-with-hooks",
          "if [[ ! -f \"$instanceRebootFile\" ]]; then",
          "  touch ${instanceRebootFile}",
          "  exit 194",
          "fi",
          "rm -f ${instanceRebootFile}",
          "echo \"Reboot is done, proceed to next step.\""
        ]
      }
    },
    {
      "precondition": {
        "StringEquals": [
          "platformType",
          "Windows"
        ]
      },
      "action": "aws:runPowerShellScript",
      "name": "VerifyPendingRebootPatchesAndRebootWindows",
      "inputs": {
        "runCommand": [
          "$appName = 'PatchBaselineOperations'",
          "$fileName = 'PatchInventoryFromLastOperation.json'",
          "$localFileLocation = [IO.Path]::Combine($env:ProgramData, 'Amazon', $appName, 'State')",
          "$localFile = [IO.Path]::Combine($localFileLocation, $fileName)",
          "if (-Not (Test-Path $localFile -PathType Leaf)) {",
          "     exit 169",
          "}",
          "$installedPendingRebootCountLine = Get-Content $localFile | Select-String 'InstalledPendingRebootCount'",
          "$installedPendingRebootCount = $installedPendingRebootCountLine -replace '\\D+(\\d+)','$1'",
          "if ($installedPendingRebootCount -eq 0) {",
          "     echo \"No pending reboot patches were found. Exiting document execution\"",
          "     exit 168",
          "}",
          "$instanceRebootFile = [IO.Path]::Combine($localFileLocation, 'PatchInstanceRebootWithHooks')",
          "if (-Not (Test-Path $instanceRebootFile -PathType Leaf)) {",
          "  New-Item $instanceRebootFile -ItemType File | Out-Null",
          "  exit 3010",
          "}",
          "Remove-Item $instanceRebootFile -Force",
          "echo \"Reboot is done, proceed to next step.\""
        ]
      }
    },
    {
      "action": "aws:runDocument",
      "name": "PostRebootScan",
      "inputs": {
        "documentType": "SSMDocument",
        "documentPath": "AWS-RunPatchBaseline",
        "documentParameters": "{\"Operation\":\"Scan\",\"RebootOption\":\"NoReboot\"}"
      }
    },
    {
      "action": "aws:runDocument",
      "name": "CustomerProvidedPostRebootHook",
      "inputs": {
        "documentType": "SSMDocument",
        "documentPath": "{{PostRebootHookDocName}}",
        "finallyStep": true
      }
    }
  ]
}
