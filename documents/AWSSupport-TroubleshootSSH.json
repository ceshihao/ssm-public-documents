{
  "schemaVersion": "0.3",
  "description": "The **AWSSupport-TroubleshootSSH** automation document installs the [Amazon Elastic Compute Cloud (EC2) Rescue for Linux (ec2rl)](https://github.com/awslabs/aws-ec2rescue-linux) tool, and then uses the [openssh](https://github.com/awslabs/aws-ec2rescue-linux/blob/develop/docs/modules/openssh.md) module to check or attempt to fix common issues that prevent a remote connection to the Linux machine via Secure Shell (SSH). Optionally, changes can be applied offline by stopping and starting the instance, if the user explicitly allows for offline remediation using the `AllowOffline` input parameter. By default, the document operates in read-only mode.\n\n#### Important:\n> * It is recommended to take a backup or snapshot of your EBS volumes if you are modifying the instance configuration.\n> * If the target instance is not managed by AWS Systems Manager and the parameters `AllowOffline` is set to `True` and `Action` is set to `FixAll`, the runbook runs the [AWSSupport-ExecuteEC2Rescue](https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/automation-awssupport-executeec2rescue.html) runbook to run the `ec2rl` openssh tool. **Important:** The `AWSSupport-ExecuteEC2Rescue` automation stops the instance, and creates an AMI before attempting any operations. Data stored in instance store volumes will be lost. The public IP address will change if you are not using an Elastic IP address.",
  "assumeRole": "{{ AutomationAssumeRole }}",
  "parameters": {
    "AutomationAssumeRole": {
      "type": "AWS::IAM::Role::Arn",
      "description": "(Optional) The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that allows Systems Manager Automation to perform the actions on your behalf. If no role is specified, Systems Manager Automation uses the permissions of the user that starts this runbook.",
      "default": ""
    },
    "InstanceId": {
      "type": "AWS::EC2::Instance::Id",
      "description": "(Required) The ID of your EC2 Linux instance."
    },
    "Action": {
      "description": "(Optional) The troubleshoot action. Specify if you want to check for issues without fixing them (`CheckAll`) or to check and automatically fix any discovered issues (`FixAll`).",
      "type": "String",
      "allowedValues": [
        "CheckAll",
        "FixAll"
      ],
      "default": "CheckAll"
    },
    "AllowOffline": {
      "type": "String",
      "description": "(Optional) Fix only - Set it to `True` if you allow an offline SSH remediation in case the online troubleshooting fails, or the provided instance is not a managed instance. Note: For the offline remediation, this automation stops the instance, and creates an AMI before attempting any operations.",
      "default": "False",
      "allowedValues": [
        "True",
        "False"
      ]
    },
    "SubnetId": {
      "type": "String",
      "description": "(Conditional) Offline only - The subnet ID for the EC2Rescue instance used to perform the offline troubleshooting. If no subnet ID is specified, AWS Systems Manager Automation will create a new VPC. **Important:** The subnet must be in the same Availability Zone as InstanceId, and it must allow access to the AWS Systems Manager endpoints.",
      "default": "SelectedInstanceSubnet",
      "allowedPattern": "^$|^subnet-[a-z0-9]{8,17}$|SelectedInstanceSubnet"
    },
    "EC2RescueInstanceType": {
      "type": "String",
      "description": "(Conditional) Offline only - The EC2 instance type for the EC2Rescue instance.",
      "default": "t3.medium",
      "allowedValues": [
        "t2.small",
        "t2.medium",
        "t2.large",
        "t3.small",
        "t3.medium",
        "t3.large",
        "i3.large"
      ]
    },
    "S3BucketName": {
      "description": "(Optional) Offline only - The Amazon S3 bucket name in your account where you want to upload the troubleshooting logs. Make sure the bucket policy does not grant unnecessary read/write permissions to parties that do not need access to the collected logs.",
      "type": "AWS::S3::Bucket::Name",
      "default": ""
    }
  },
  "mainSteps": [
    {
      "name": "assertInstanceIsManagedInstance",
      "action": "aws:assertAwsResourceProperty",
      "description": "Checks if the instance is managed by AWS Systems Manager.",
      "onFailure": "step:branchOnAllowOffline",
      "inputs": {
        "Service": "ssm",
        "Api": "DescribeInstanceInformation",
        "InstanceInformationFilterList": [
          {
            "key": "InstanceIds",
            "valueSet": [
              "{{ InstanceId }}"
            ]
          }
        ],
        "PropertySelector": "$.InstanceInformationList[0].PingStatus",
        "DesiredValues": [
          "Online"
        ]
      },
      "isCritical": false,
      "nextStep": "installEC2Rescue"
    },
    {
      "name": "installEC2Rescue",
      "action": "aws:runCommand",
      "description": "Install EC2Rescue for Linux via `AWS-ConfigureAWSPackage`.",
      "onFailure": "Abort",
      "inputs": {
        "DocumentName": "AWS-ConfigureAWSPackage",
        "InstanceIds": [
          "{{ InstanceId }}"
        ],
        "Parameters": {
          "name": "AWSSupport-EC2Rescue",
          "action": "Install",
          "version": "latest"
        }
      },
      "nextStep": "troubleshootSSH",
      "isCritical": true
    },
    {
      "name": "troubleshootSSH",
      "action": "aws:runCommand",
      "description": "Runs the bash script to run EC2Rescue for Linux.",
      "onFailure": "Abort",
      "inputs": {
        "DocumentName": "AWS-RunShellScript",
        "InstanceIds": [
          "{{ InstanceId }}"
        ],
        "Parameters": {
          "commands": [
            "#!/bin/sh",
            "# Copyright 2024 Amazon.com, Inc. or its affiliates. All Rights Reserved.",
            "# SPDX-License-Identifier: LicenseRef-.amazon.com.-AmznSL-1.0",
            "# Licensed under the Amazon Software License  http://aws.amazon.com/asl/",
            "",
            "if test \"{{ Action }}\" = \"FixAll\"",
            "then",
            "    printf \"Running EC2 Rescue for Linux openssh module with --remediate option\\\\n\"",
            "    sudo ec2rl run --remediate --only-modules=openssh",
            "else",
            "    printf \"Running EC2 Rescue for Linux openssh module\\\\n\"",
            "    sudo ec2rl run --only-modules=openssh",
            "fi",
            "printf \"For more information please refer to https://github.com/awslabs/aws-ec2rescue-linux/blob/develop/docs/modules/openssh.md.\\\\n\"",
            "printf \"The EC2Rescue execution completed successfully.\\\\n\""
          ]
        }
      },
      "isEnd": true
    },
    {
      "name": "branchOnAllowOffline",
      "action": "aws:branch",
      "description": "Branches the automation based on the value of the `AllowOffline` and `Action` input parameters.",
      "inputs": {
        "Choices": [
          {
            "And": [
              {
                "Variable": "{{ AllowOffline }}",
                "StringEquals": "True"
              },
              {
                "Variable": "{{ Action }}",
                "StringEquals": "FixAll"
              }
            ],
            "NextStep": "branchOnSubnetId"
          }
        ]
      },
      "isEnd": true
    },
    {
      "name": "branchOnSubnetId",
      "action": "aws:branch",
      "description": "Branches the automation based on if the provided 'SubnetId' value.",
      "inputs": {
        "Choices": [
          {
            "NextStep": "describeSourceInstance",
            "Variable": "{{ SubnetId }}",
            "StringEquals": "SelectedInstanceSubnet"
          }
        ],
        "Default": "troubleshootSSHOffline"
      },
      "isEnd": true
    },
    {
      "name": "describeSourceInstance",
      "action": "aws:executeAwsApi",
      "description": "Retrieves the current instance's subnet.",
      "onFailure": "Abort",
      "inputs": {
        "Service": "ec2",
        "Api": "DescribeInstances",
        "InstanceIds": [
          "{{ InstanceId }}"
        ]
      },
      "outputs": [
        {
          "Name": "SubnetId",
          "Selector": "$.Reservations[0].Instances[0].NetworkInterfaces[0].SubnetId",
          "Type": "String"
        }
      ],
      "nextStep": "troubleshootSSHOfflineWithSubnetId"
    },
    {
      "name": "troubleshootSSHOffline",
      "action": "aws:executeAutomation",
      "description": "Runs the `AWSSupport-ExecuteEC2Rescue` runbook with the provided `SubnetId` value.",
      "onFailure": "Abort",
      "inputs": {
        "RuntimeParameters": {
          "UnreachableInstanceId": [
            "{{ InstanceId }}"
          ],
          "SubnetId": [
            "{{ SubnetId }}"
          ],
          "LogDestination": [
            "{{ S3BucketName }}"
          ],
          "AssumeRole": [
            "{{ AutomationAssumeRole }}"
          ],
          "EC2RescueInstanceType": [
            "{{ EC2RescueInstanceType }}"
          ]
        },
        "DocumentName": "AWSSupport-ExecuteEC2Rescue"
      },
      "isEnd": true
    },
    {
      "name": "troubleshootSSHOfflineWithSubnetId",
      "action": "aws:executeAutomation",
      "description": "Runs the `AWSSupport-ExecuteEC2Rescue` runbook with the target instance subnet ID (`SelectedInstanceSubnet`).",
      "onFailure": "Abort",
      "inputs": {
        "RuntimeParameters": {
          "UnreachableInstanceId": [
            "{{ InstanceId }}"
          ],
          "SubnetId": [
            "{{ describeSourceInstance.SubnetId }}"
          ],
          "LogDestination": [
            "{{ S3BucketName }}"
          ],
          "AssumeRole": [
            "{{ AutomationAssumeRole }}"
          ],
          "EC2RescueInstanceType": [
            "{{ EC2RescueInstanceType }}"
          ]
        },
        "DocumentName": "AWSSupport-ExecuteEC2Rescue"
      },
      "isEnd": true
    }
  ],
  "outputs": [
    "troubleshootSSH.Output",
    "troubleshootSSHOffline.Output",
    "troubleshootSSHOfflineWithSubnetId.Output"
  ]
}
