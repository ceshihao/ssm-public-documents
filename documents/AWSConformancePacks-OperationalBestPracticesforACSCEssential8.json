{
  "schemaVersion": "1.0",
  "description": "Operational Best Practices for ACSC Essential 8",
  "templateBody": {
    "Parameters": {
      "BackupPlanMinFrequencyAndMinRetentionCheckParamRequiredFrequencyUnit": {
        "Default": "days",
        "Type": "String"
      },
      "BackupPlanMinFrequencyAndMinRetentionCheckParamRequiredFrequencyValue": {
        "Default": "1",
        "Type": "String"
      },
      "IamCustomerPolicyBlockedKmsActionsParamBlockedActionsPatterns": {
        "Default": "kms:*, kms:Decrypt, kms:ReEncrypt*",
        "Type": "String"
      },
      "IamInlinePolicyBlockedKmsActionsParamBlockedActionsPatterns": {
        "Default": "kms:*, kms:Decrypt, kms:ReEncrypt*",
        "Type": "String"
      },
      "IamUserUnusedCredentialsCheckParamMaxCredentialUsageAge": {
        "Default": "30",
        "Type": "String"
      },
      "RedshiftClusterMaintenancesettingsCheckParamAllowVersionUpgrade": {
        "Default": "true",
        "Type": "String"
      }
    },
    "Resources": {
      "AlbWafEnabled": {
        "Properties": {
          "ConfigRuleName": "alb-waf-enabled",
          "Scope": {
            "ComplianceResourceTypes": [
              "AWS::ElasticLoadBalancingV2::LoadBalancer"
            ]
          },
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "ALB_WAF_ENABLED"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "ApiGwAssociatedWithWaf": {
        "Properties": {
          "ConfigRuleName": "api-gw-associated-with-waf",
          "Scope": {
            "ComplianceResourceTypes": [
              "AWS::ApiGateway::Stage"
            ]
          },
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "API_GW_ASSOCIATED_WITH_WAF"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "AuroraResourcesProtectedByBackupPlan": {
        "Properties": {
          "ConfigRuleName": "aurora-resources-protected-by-backup-plan",
          "Scope": {
            "ComplianceResourceTypes": [
              "AWS::RDS::DBCluster"
            ]
          },
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "AURORA_RESOURCES_PROTECTED_BY_BACKUP_PLAN"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "BackupPlanMinFrequencyAndMinRetentionCheck": {
        "Properties": {
          "ConfigRuleName": "backup-plan-min-frequency-and-min-retention-check",
          "InputParameters": {
            "requiredFrequencyUnit": {
              "Fn::If": [
                "backupPlanMinFrequencyAndMinRetentionCheckParamRequiredFrequencyUnit",
                {
                  "Ref": "BackupPlanMinFrequencyAndMinRetentionCheckParamRequiredFrequencyUnit"
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            },
            "requiredFrequencyValue": {
              "Fn::If": [
                "backupPlanMinFrequencyAndMinRetentionCheckParamRequiredFrequencyValue",
                {
                  "Ref": "BackupPlanMinFrequencyAndMinRetentionCheckParamRequiredFrequencyValue"
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          },
          "Scope": {
            "ComplianceResourceTypes": [
              "AWS::Backup::BackupPlan"
            ]
          },
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "BACKUP_PLAN_MIN_FREQUENCY_AND_MIN_RETENTION_CHECK"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "BackupRecoveryPointManualDeletionDisabled": {
        "Properties": {
          "ConfigRuleName": "backup-recovery-point-manual-deletion-disabled",
          "Scope": {
            "ComplianceResourceTypes": [
              "AWS::Backup::BackupVault"
            ]
          },
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "BACKUP_RECOVERY_POINT_MANUAL_DELETION_DISABLED"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "CodebuildProjectEnvironmentPrivilegedCheck": {
        "Properties": {
          "ConfigRuleName": "codebuild-project-environment-privileged-check",
          "Scope": {
            "ComplianceResourceTypes": [
              "AWS::CodeBuild::Project"
            ]
          },
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "CODEBUILD_PROJECT_ENVIRONMENT_PRIVILEGED_CHECK"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "DbInstanceBackupEnabled": {
        "Properties": {
          "ConfigRuleName": "db-instance-backup-enabled",
          "Scope": {
            "ComplianceResourceTypes": [
              "AWS::RDS::DBInstance"
            ]
          },
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "DB_INSTANCE_BACKUP_ENABLED"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "DynamodbInBackupPlan": {
        "Properties": {
          "ConfigRuleName": "dynamodb-in-backup-plan",
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "DYNAMODB_IN_BACKUP_PLAN"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "EbsInBackupPlan": {
        "Properties": {
          "ConfigRuleName": "ebs-in-backup-plan",
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "EBS_IN_BACKUP_PLAN"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "Ec2Imdsv2Check": {
        "Properties": {
          "ConfigRuleName": "ec2-imdsv2-check",
          "Scope": {
            "ComplianceResourceTypes": [
              "AWS::EC2::Instance"
            ]
          },
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "EC2_IMDSV2_CHECK"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "Ec2InstanceManagedBySsm": {
        "Properties": {
          "ConfigRuleName": "ec2-instance-managed-by-systems-manager",
          "Scope": {
            "ComplianceResourceTypes": [
              "AWS::EC2::Instance",
              "AWS::SSM::ManagedInstanceInventory"
            ]
          },
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "EC2_INSTANCE_MANAGED_BY_SSM"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "Ec2InstanceProfileAttached": {
        "Properties": {
          "ConfigRuleName": "ec2-instance-profile-attached",
          "Scope": {
            "ComplianceResourceTypes": [
              "AWS::EC2::Instance"
            ]
          },
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "EC2_INSTANCE_PROFILE_ATTACHED"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "Ec2ManagedinstanceAssociationComplianceStatusCheck": {
        "Properties": {
          "ConfigRuleName": "ec2-managedinstance-association-compliance-status-check",
          "Scope": {
            "ComplianceResourceTypes": [
              "AWS::SSM::AssociationCompliance"
            ]
          },
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "EC2_MANAGEDINSTANCE_ASSOCIATION_COMPLIANCE_STATUS_CHECK"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "Ec2ManagedinstancePatchComplianceStatusCheck": {
        "Properties": {
          "ConfigRuleName": "ec2-managedinstance-patch-compliance-status-check",
          "Scope": {
            "ComplianceResourceTypes": [
              "AWS::SSM::PatchCompliance"
            ]
          },
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "EC2_MANAGEDINSTANCE_PATCH_COMPLIANCE_STATUS_CHECK"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "Ec2ResourcesProtectedByBackupPlan": {
        "Properties": {
          "ConfigRuleName": "ec2-resources-protected-by-backup-plan",
          "Scope": {
            "ComplianceResourceTypes": [
              "AWS::EC2::Instance"
            ]
          },
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "EC2_RESOURCES_PROTECTED_BY_BACKUP_PLAN"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "EcsContainersNonprivileged": {
        "Properties": {
          "ConfigRuleName": "ecs-containers-nonprivileged",
          "Scope": {
            "ComplianceResourceTypes": [
              "AWS::ECS::TaskDefinition"
            ]
          },
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "ECS_CONTAINERS_NONPRIVILEGED"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "EcsContainersReadonlyAccess": {
        "Properties": {
          "ConfigRuleName": "ecs-containers-readonly-access",
          "Scope": {
            "ComplianceResourceTypes": [
              "AWS::ECS::TaskDefinition"
            ]
          },
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "ECS_CONTAINERS_READONLY_ACCESS"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "EcsFargateLatestPlatformVersion": {
        "Properties": {
          "ConfigRuleName": "ecs-fargate-latest-platform-version",
          "Scope": {
            "ComplianceResourceTypes": [
              "AWS::ECS::Service"
            ]
          },
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "ECS_FARGATE_LATEST_PLATFORM_VERSION"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "EcsTaskDefinitionNonrootUser": {
        "Properties": {
          "ConfigRuleName": "ecs-task-definition-nonroot-user",
          "Scope": {
            "ComplianceResourceTypes": [
              "AWS::ECS::TaskDefinition"
            ]
          },
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "ECS_TASK_DEFINITION_NONROOT_USER"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "EcsTaskDefinitionUserForHostModeCheck": {
        "Properties": {
          "ConfigRuleName": "ecs-task-definition-user-for-host-mode-check",
          "Scope": {
            "ComplianceResourceTypes": [
              "AWS::ECS::TaskDefinition"
            ]
          },
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "ECS_TASK_DEFINITION_USER_FOR_HOST_MODE_CHECK"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "EfsAccessPointEnforceUserIdentity": {
        "Properties": {
          "ConfigRuleName": "efs-access-point-enforce-user-identity",
          "Scope": {
            "ComplianceResourceTypes": [
              "AWS::EFS::AccessPoint"
            ]
          },
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "EFS_ACCESS_POINT_ENFORCE_USER_IDENTITY"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "EfsInBackupPlan": {
        "Properties": {
          "ConfigRuleName": "efs-in-backup-plan",
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "EFS_IN_BACKUP_PLAN"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "ElasticBeanstalkManagedUpdatesEnabled": {
        "Properties": {
          "ConfigRuleName": "elastic-beanstalk-managed-updates-enabled",
          "Scope": {
            "ComplianceResourceTypes": [
              "AWS::ElasticBeanstalk::Environment"
            ]
          },
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "ELASTIC_BEANSTALK_MANAGED_UPDATES_ENABLED"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "ElasticacheRedisClusterAutomaticBackupCheck": {
        "Properties": {
          "ConfigRuleName": "elasticache-redis-cluster-automatic-backup-check",
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "ELASTICACHE_REDIS_CLUSTER_AUTOMATIC_BACKUP_CHECK"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "IamCustomerPolicyBlockedKmsActions": {
        "Properties": {
          "ConfigRuleName": "iam-customer-policy-blocked-kms-actions",
          "InputParameters": {
            "blockedActionsPatterns": {
              "Fn::If": [
                "iamCustomerPolicyBlockedKmsActionsParamBlockedActionsPatterns",
                {
                  "Ref": "IamCustomerPolicyBlockedKmsActionsParamBlockedActionsPatterns"
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          },
          "Scope": {
            "ComplianceResourceTypes": [
              "AWS::IAM::Policy"
            ]
          },
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "IAM_CUSTOMER_POLICY_BLOCKED_KMS_ACTIONS"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "IamInlinePolicyBlockedKmsActions": {
        "Properties": {
          "ConfigRuleName": "iam-inline-policy-blocked-kms-actions",
          "InputParameters": {
            "blockedActionsPatterns": {
              "Fn::If": [
                "iamInlinePolicyBlockedKmsActionsParamBlockedActionsPatterns",
                {
                  "Ref": "IamInlinePolicyBlockedKmsActionsParamBlockedActionsPatterns"
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          },
          "Scope": {
            "ComplianceResourceTypes": [
              "AWS::IAM::Group",
              "AWS::IAM::Role",
              "AWS::IAM::User"
            ]
          },
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "IAM_INLINE_POLICY_BLOCKED_KMS_ACTIONS"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "IamNoInlinePolicyCheck": {
        "Properties": {
          "ConfigRuleName": "iam-no-inline-policy-check",
          "Scope": {
            "ComplianceResourceTypes": [
              "AWS::IAM::User",
              "AWS::IAM::Role",
              "AWS::IAM::Group"
            ]
          },
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "IAM_NO_INLINE_POLICY_CHECK"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "IamPolicyNoStatementsWithAdminAccess": {
        "Properties": {
          "ConfigRuleName": "iam-policy-no-statements-with-admin-access",
          "Scope": {
            "ComplianceResourceTypes": [
              "AWS::IAM::Policy"
            ]
          },
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "IAM_POLICY_NO_STATEMENTS_WITH_ADMIN_ACCESS"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "IamPolicyNoStatementsWithFullAccess": {
        "Properties": {
          "ConfigRuleName": "iam-policy-no-statements-with-full-access",
          "Scope": {
            "ComplianceResourceTypes": [
              "AWS::IAM::Policy"
            ]
          },
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "IAM_POLICY_NO_STATEMENTS_WITH_FULL_ACCESS"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "IamRootAccessKeyCheck": {
        "Properties": {
          "ConfigRuleName": "iam-root-access-key-check",
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "IAM_ROOT_ACCESS_KEY_CHECK"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "IamUserGroupMembershipCheck": {
        "Properties": {
          "ConfigRuleName": "iam-user-group-membership-check",
          "Scope": {
            "ComplianceResourceTypes": [
              "AWS::IAM::User"
            ]
          },
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "IAM_USER_GROUP_MEMBERSHIP_CHECK"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "IamUserMfaEnabled": {
        "Properties": {
          "ConfigRuleName": "iam-user-mfa-enabled",
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "IAM_USER_MFA_ENABLED"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "IamUserUnusedCredentialsCheck": {
        "Properties": {
          "ConfigRuleName": "iam-user-unused-credentials-check",
          "InputParameters": {
            "maxCredentialUsageAge": {
              "Fn::If": [
                "iamUserUnusedCredentialsCheckParamMaxCredentialUsageAge",
                {
                  "Ref": "IamUserUnusedCredentialsCheckParamMaxCredentialUsageAge"
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          },
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "IAM_USER_UNUSED_CREDENTIALS_CHECK"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "MfaEnabledForIamConsoleAccess": {
        "Properties": {
          "ConfigRuleName": "mfa-enabled-for-iam-console-access",
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "MFA_ENABLED_FOR_IAM_CONSOLE_ACCESS"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "RdsAutomaticMinorVersionUpgradeEnabled": {
        "Properties": {
          "ConfigRuleName": "rds-automatic-minor-version-upgrade-enabled",
          "Scope": {
            "ComplianceResourceTypes": [
              "AWS::RDS::DBInstance"
            ]
          },
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "RDS_AUTOMATIC_MINOR_VERSION_UPGRADE_ENABLED"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "RdsInBackupPlan": {
        "Properties": {
          "ConfigRuleName": "rds-in-backup-plan",
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "RDS_IN_BACKUP_PLAN"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "RdsInstanceIamAuthenticationEnabled": {
        "Properties": {
          "ConfigRuleName": "rds-instance-iam-authentication-enabled",
          "Scope": {
            "ComplianceResourceTypes": [
              "AWS::RDS::DBInstance"
            ]
          },
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "RDS_INSTANCE_IAM_AUTHENTICATION_ENABLED"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "RedshiftBackupEnabled": {
        "Properties": {
          "ConfigRuleName": "redshift-backup-enabled",
          "Scope": {
            "ComplianceResourceTypes": [
              "AWS::Redshift::Cluster"
            ]
          },
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "REDSHIFT_BACKUP_ENABLED"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "RedshiftClusterMaintenancesettingsCheck": {
        "Properties": {
          "ConfigRuleName": "redshift-cluster-maintenancesettings-check",
          "InputParameters": {
            "allowVersionUpgrade": {
              "Fn::If": [
                "redshiftClusterMaintenancesettingsCheckParamAllowVersionUpgrade",
                {
                  "Ref": "RedshiftClusterMaintenancesettingsCheckParamAllowVersionUpgrade"
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          },
          "Scope": {
            "ComplianceResourceTypes": [
              "AWS::Redshift::Cluster"
            ]
          },
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "REDSHIFT_CLUSTER_MAINTENANCESETTINGS_CHECK"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "RootAccountHardwareMfaEnabled": {
        "Properties": {
          "ConfigRuleName": "root-account-hardware-mfa-enabled",
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "ROOT_ACCOUNT_HARDWARE_MFA_ENABLED"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "RootAccountMfaEnabled": {
        "Properties": {
          "ConfigRuleName": "root-account-mfa-enabled",
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "ROOT_ACCOUNT_MFA_ENABLED"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "S3BucketReplicationEnabled": {
        "Properties": {
          "ConfigRuleName": "s3-bucket-replication-enabled",
          "Scope": {
            "ComplianceResourceTypes": [
              "AWS::S3::Bucket"
            ]
          },
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "S3_BUCKET_REPLICATION_ENABLED"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "S3BucketVersioningEnabled": {
        "Properties": {
          "ConfigRuleName": "s3-bucket-versioning-enabled",
          "Scope": {
            "ComplianceResourceTypes": [
              "AWS::S3::Bucket"
            ]
          },
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "S3_BUCKET_VERSIONING_ENABLED"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "WafRegionalRuleNotEmpty": {
        "Properties": {
          "ConfigRuleName": "waf-regional-rule-not-empty",
          "Scope": {
            "ComplianceResourceTypes": [
              "AWS::WAFRegional::Rule"
            ]
          },
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "WAF_REGIONAL_RULE_NOT_EMPTY"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "WafRegionalRulegroupNotEmpty": {
        "Properties": {
          "ConfigRuleName": "waf-regional-rulegroup-not-empty",
          "Scope": {
            "ComplianceResourceTypes": [
              "AWS::WAFRegional::RuleGroup"
            ]
          },
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "WAF_REGIONAL_RULEGROUP_NOT_EMPTY"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "WafRegionalWebaclNotEmpty": {
        "Properties": {
          "ConfigRuleName": "waf-regional-webacl-not-empty",
          "Scope": {
            "ComplianceResourceTypes": [
              "AWS::WAFRegional::WebACL"
            ]
          },
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "WAF_REGIONAL_WEBACL_NOT_EMPTY"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      }
    },
    "Conditions": {
      "backupPlanMinFrequencyAndMinRetentionCheckParamRequiredFrequencyUnit": {
        "Fn::Not": [
          {
            "Fn::Equals": [
              "",
              {
                "Ref": "BackupPlanMinFrequencyAndMinRetentionCheckParamRequiredFrequencyUnit"
              }
            ]
          }
        ]
      },
      "backupPlanMinFrequencyAndMinRetentionCheckParamRequiredFrequencyValue": {
        "Fn::Not": [
          {
            "Fn::Equals": [
              "",
              {
                "Ref": "BackupPlanMinFrequencyAndMinRetentionCheckParamRequiredFrequencyValue"
              }
            ]
          }
        ]
      },
      "iamCustomerPolicyBlockedKmsActionsParamBlockedActionsPatterns": {
        "Fn::Not": [
          {
            "Fn::Equals": [
              "",
              {
                "Ref": "IamCustomerPolicyBlockedKmsActionsParamBlockedActionsPatterns"
              }
            ]
          }
        ]
      },
      "iamInlinePolicyBlockedKmsActionsParamBlockedActionsPatterns": {
        "Fn::Not": [
          {
            "Fn::Equals": [
              "",
              {
                "Ref": "IamInlinePolicyBlockedKmsActionsParamBlockedActionsPatterns"
              }
            ]
          }
        ]
      },
      "iamUserUnusedCredentialsCheckParamMaxCredentialUsageAge": {
        "Fn::Not": [
          {
            "Fn::Equals": [
              "",
              {
                "Ref": "IamUserUnusedCredentialsCheckParamMaxCredentialUsageAge"
              }
            ]
          }
        ]
      },
      "redshiftClusterMaintenancesettingsCheckParamAllowVersionUpgrade": {
        "Fn::Not": [
          {
            "Fn::Equals": [
              "",
              {
                "Ref": "RedshiftClusterMaintenancesettingsCheckParamAllowVersionUpgrade"
              }
            ]
          }
        ]
      }
    }
  }
}
