{
  "schemaVersion": "0.3",
  "description": "### Document name - AWSConfigRemediation-DeleteLambdaFunction\n\n## What does this document do?\nThis document deletes a given AWS Lambda function using the [DeleteFunction](https://docs.aws.amazon.com/lambda/latest/dg/API_DeleteFunction.html) API.\n\n## Input Parameters\n* AutomationAssumeRole: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.\n* LambdaFunctionName: (Required) AWS Lambda function name or ARN which needs to be deleted.\n\n## Output Parameters\n* DeleteAWSLambdaFunction.DeleteFunctionResponse: The standard HTTP response from the DeleteFunction API.\n",
  "assumeRole": "{{ AutomationAssumeRole }}",
  "parameters": {
    "AutomationAssumeRole": {
      "type": "String",
      "description": "(Required) The ARN of the role that allows Automation to perform the actions on your behalf.",
      "allowedPattern": "^arn:(aws[a-zA-Z-]*)?:iam::\\d{12}:role/[\\w+=,.@/-]+$"
    },
    "LambdaFunctionName": {
      "type": "String",
      "description": "(Required) AWS Lambda function name or ARN which needs to be deleted.",
      "allowedPattern": "(arn:aws[a-z-]*:lambda:[a-z]{2}(-gov)?-[a-z]+-\\d:\\d{12}:function:)?[a-zA-Z0-9-_]+(:(\\$LATEST|[a-zA-Z0-9-_]+))?"
    }
  },
  "outputs": [
    "DeleteAWSLambdaFunction.DeleteFunctionResponse"
  ],
  "mainSteps": [
    {
      "name": "DeleteAWSLambdaFunction",
      "action": "aws:executeAwsApi",
      "description": "## DeleteAWSLambdaFunction\nDeletes the given AWS Lambda function using the DeleteFunction API.\n## Outputs\n* DeleteFunctionResponse: Response from the DeleteFunction API.\n",
      "timeoutSeconds": 600,
      "isEnd": false,
      "inputs": {
        "Service": "lambda",
        "Api": "DeleteFunction",
        "FunctionName": "{{ LambdaFunctionName }}"
      },
      "outputs": [
        {
          "Name": "DeleteFunctionResponse",
          "Selector": "$",
          "Type": "StringMap"
        }
      ]
    },
    {
      "name": "VerifyAWSLambdaFunctionDeletion",
      "action": "aws:executeScript",
      "description": "## VerifyAWSLambdaFunctionDeletion\nVerifies that the AWS Lambda function is deleted in the previous step.\n## Outputs\n* Output: Success message or failure exception.\n",
      "isEnd": true,
      "timeoutSeconds": 600,
      "inputs": {
        "Runtime": "python3.11",
        "Handler": "handler",
        "InputPayload": {
          "FunctionName": "{{ LambdaFunctionName }}"
        },
        "Script": "import boto3\nimport botocore\n\ndef handler(event, context):\n    lambda_client = boto3.client('lambda')\n    function_name = event['FunctionName']\n    try:\n        lambda_client.get_function(FunctionName=function_name)\n        error_message = f\"VERIFICATION FAILED. AWS LAMBDA FUNCTION {function_name} NOT DELETED.\"\n        raise Exception(error_message)\n    except lambda_client.exceptions.ResourceNotFoundException:\n        return {\"output\": \"Verification of 'DeleteAWSLambdaFunction' is successful.\"}"
      },
      "outputs": [
        {
          "Name": "Output",
          "Selector": "$.Payload.output",
          "Type": "String"
        }
      ]
    }
  ]
}
