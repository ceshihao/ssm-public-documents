{
  "schemaVersion": "0.3",
  "description": "# Document name - AWS-EnableSQSEncryption\n\n## What does this document do?\nThe AWS-EnableSQSEncryption runbook enables encryption at rest for an existing Amazon Simple Queue Service (SQS) queue \nusing the [SetQueueAttributes](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/APIReference/API_SetQueueAttributes.html) API. \nAn Amazon Simple Queue Service (SQS) queue can be encrypted with SQS managed encryption keys (SSE-SQS) or with keys managed by \nin the AWS Key-Management Service (SSE-KMS). The KMS key that you assign to your queue must have a key policy that includes \npermissions for all principals that are authorized to use the queue. With SSE enabled, anonymous SendMessage and ReceiveMessage \nrequests to the encrypted queue will be rejected.\n\n## Input Parameters\n* AutomationAssumeRole: (Optional) The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that \n  allows Systems Manager Automation to perform the actions on your behalf. If no role is specified, Systems Manager Automation \n  uses the permissions of the user that starts this runbook.\n  * Default: \"\"\n* QueueUrl: (Required) The URL of the Amazon Simple Queue Service (SQS) queue whose attributes are set.\n* KmsKeyId: (Optional) The GUID for the customer-managed AWS KMS key to use for encryption. This value can be a\n  globally unique identifier, a fully specified Amazon Resource Name (ARN) to either an alias or a key, or an alias\n  name prefixed by \"alias/\". You can also use a master key owned by SQS Queues by specifying\n  the alias aws/sqs.\n  * Default: \"\"\n* KmsDataKeyReusePeriodSeconds: (Optional) The length in time, in seconds for a minimum of 60 seconds and a \n  max of 86400 seconds, for which an Amazon Simple Queue Service (SQS) queue can reuse a data key to encrypt or \n  decrypt messages before calling KMS again.\n  * Default: \"300\"\n",
  "assumeRole": "{{ AutomationAssumeRole }}",
  "parameters": {
    "AutomationAssumeRole": {
      "type": "AWS::IAM::Role::Arn",
      "description": "(Optional) The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role \nthat allows Systems Manager Automation to perform the actions on your behalf. If no role is \nspecified, Systems Manager Automation uses the permissions of the user that starts this runbook.\n",
      "default": ""
    },
    "QueueUrl": {
      "type": "String",
      "description": "(Required) The URL of the Amazon Simple Queue Service (SQS) queue whose attributes are set.",
      "allowedPattern": "https?:\\/\\/(sqs\\.)?[-a-zA-Z0-9@:%.\\+~#=]{2,256}\\.[a-z]{2,4}\\b([-a-zA-Z0-9@:%\\+_.-~#?&//=]{1,1024}$)"
    },
    "KmsKeyId": {
      "type": "String",
      "description": "(Optional) The GUID for the customer-managed AWS   KMS key to use for encryption. This value can be a\nglobally unique identifier, a fully specified Amazon Resource Name (ARN) to either an alias or a key, or an alias\nname prefixed by \"alias/\". You can also use a master key owned by SQS Queues by specifying the alias aws/sqs.\n",
      "default": "",
      "allowedPattern": "^$|^[a-z0-9-]{1,2048}$|^mrk-[a-z0-9]{1,2044}$|^alias\\/.{1,250}$|^arn:aws[a-z0-9-]*:kms:[a-z0-9-]+:\\d{12}:key\\/[a-z0-9-]{1,1992}$|^arn:aws[a-z0-9-]*:kms:[a-z0-9-]+:\\d{12}:key\\/mrk-[a-z0-9]{1,1988}$|^arn:aws[a-z0-9-]*:kms:[a-z0-9-]+:\\d{12}:alias\\/.{1,1990}$"
    },
    "KmsDataKeyReusePeriodSeconds": {
      "type": "String",
      "description": "(Optional) The length in time, in seconds for a minimum of 60 seconds and a max of 86400 seconds, for which an \nAmazon Simple Queue Service (SQS) queue can reuse a data key to encrypt or decrypt messages before calling KMS again.\n",
      "default": "300",
      "allowedPattern": "^(0|[6-9]\\d|[1-9]\\d{2}|[1-9]\\d{3}|[1-7]\\d{4}|8[0-5]\\d{3}|86[0-3]\\d{2}|86400)$"
    }
  },
  "mainSteps": [
    {
      "name": "SelectKeyType",
      "description": "## SelectKeyType\nThis step determines if the user will use the default SSE-SQS or SSE-KMS.\n",
      "action": "aws:branch",
      "inputs": {
        "Choices": [
          {
            "NextStep": "PutAttributeSseKms",
            "Not": {
              "Variable": "{{ KmsKeyId }}",
              "StringEquals": ""
            }
          }
        ],
        "Default": "PutAttributeSseSqs"
      }
    },
    {
      "name": "PutAttributeSseKms",
      "description": "## PutAttributeSseKms\nThis step sets the Amazon Simple Queue Service (SQS) queue attribute with a user managed KMS Key.\n",
      "action": "aws:executeAwsApi",
      "timeoutSeconds": 600,
      "inputs": {
        "Service": "SQS",
        "Api": "SetQueueAttributes",
        "QueueUrl": "{{ QueueUrl }}",
        "Attributes": {
          "KmsDataKeyReusePeriodSeconds": "{{ KmsDataKeyReusePeriodSeconds }}",
          "KmsMasterKeyId": "{{ KmsKeyId }}"
        }
      },
      "nextStep": "VerifySqsEncryptionKms"
    },
    {
      "name": "PutAttributeSseSqs",
      "description": "## PutAttributeSseSqs\nThis step sets the Amazon Simple Queue Service (SQS) queue attribute with SSE-SQS.\n",
      "action": "aws:executeAwsApi",
      "timeoutSeconds": 600,
      "inputs": {
        "Service": "sqs",
        "Api": "SetQueueAttributes",
        "QueueUrl": "{{ QueueUrl }}",
        "Attributes": {
          "SqsManagedSseEnabled": "True"
        }
      },
      "nextStep": "VerifySqsEncryptionDefault"
    },
    {
      "name": "VerifySqsEncryptionKms",
      "description": "## VerifySqsEncryptionKms\nThis step verifies that the KMS Keys have been enabled on the Amazon Simple Queue Service (SQS) queue.\n",
      "action": "aws:assertAwsResourceProperty",
      "inputs": {
        "Service": "sqs",
        "Api": "GetQueueAttributes",
        "QueueUrl": "{{ QueueUrl }}",
        "AttributeNames": [
          "KmsMasterKeyId"
        ],
        "PropertySelector": "$.Attributes.KmsMasterKeyId",
        "DesiredValues": [
          "{{ KmsKeyId }}"
        ]
      },
      "isEnd": true
    },
    {
      "name": "VerifySqsEncryptionDefault",
      "description": "## VerifySqsEncryptionDefault This step verifies that the SQS Managed Keys have been enabled on the Amazon Simple Queue Service (SQS) queue.\n",
      "action": "aws:assertAwsResourceProperty",
      "inputs": {
        "Service": "sqs",
        "Api": "GetQueueAttributes",
        "QueueUrl": "{{ QueueUrl }}",
        "AttributeNames": [
          "SqsManagedSseEnabled"
        ],
        "PropertySelector": "$.Attributes.SqsManagedSseEnabled",
        "DesiredValues": [
          "true"
        ]
      }
    }
  ]
}
