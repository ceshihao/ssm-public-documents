{
  "schemaVersion": "0.3",
  "description": "### Document name - AWSConfigRemediation-DeleteSecret\n\n## What does this document do?\nThe AWSConfigRemediation-RotateSecret runbook deletes a secret and all of the versions stored in AWS Secrets Manager. You can optionally specify the recovery window during which you can restore the secret. If you don't specify a value for the RecoveryWindowInDays parameter, the operation defaults to 30 days using the [DeleteSecret](https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_DeleteSecret.html) API.\n\n## Input Parameters\n* AutomationAssumeRole: (Required) The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that allows Systems Manager Automation to perform the actions on your behalf.\n* SecretId: (Required) The Amazon Resource Name (ARN) of the secret you want to rotate.\n* RecoveryWindowInDays: (Optional)\n   * The number of days which you can restore the secret.\n   * default: 30\n\n## Output Parameters\n* DeleteSecret.DeleteSecretApiResponse: Response from the DeleteSecret API call.\n",
  "assumeRole": "{{ AutomationAssumeRole }}",
  "parameters": {
    "AutomationAssumeRole": {
      "type": "AWS::IAM::Role::Arn",
      "description": "(Required) The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that allows Systems Manager Automation to perform the actions on your behalf."
    },
    "SecretId": {
      "type": "String",
      "description": "(Required) The Amazon Resource Name (ARN) of the secret you want to rotate.",
      "allowedPattern": "^arn:(aws[a-zA-Z-]*)?:secretsmanager:[a-z0-9-]*:\\d{12}:secret:[\\w-_+=.@\\/]*|^[\\w/+=.@-]{1,512}$"
    },
    "RecoveryWindowInDays": {
      "type": "Integer",
      "description": "(Optional) The number of days which you can restore the secret.",
      "allowedPattern": "^[7-9]$|^[1-2][0-9]?$|^30$",
      "default": 30
    }
  },
  "outputs": [
    "DeleteSecret.DeleteSecretApiResponse"
  ],
  "mainSteps": [
    {
      "name": "DeleteSecret",
      "action": "aws:executeAwsApi",
      "description": "## DeleteSecret\nDeletes the secret you specify in the SecretId parameter.\n## Outputs\n* DeleteSecretApiResponse: Response from the DeleteSecret API call.\n",
      "timeoutSeconds": 600,
      "isEnd": false,
      "inputs": {
        "Service": "secretsmanager",
        "Api": "DeleteSecret",
        "SecretId": "{{ SecretId }}",
        "RecoveryWindowInDays": "{{ RecoveryWindowInDays }}"
      },
      "outputs": [
        {
          "Name": "DeleteSecretApiResponse",
          "Selector": "$",
          "Type": "StringMap"
        }
      ]
    },
    {
      "name": "VerifyDeletion",
      "action": "aws:executeScript",
      "timeoutSeconds": 600,
      "isEnd": true,
      "description": "## VerifyDeletion\nVerifies the secret has been scheduled for deletion.\n## Outputs\n* Output: Success message or failure exception.\n",
      "inputs": {
        "Runtime": "python3.8",
        "Handler": "handler",
        "InputPayload": {
          "SecretId": "{{ SecretId }}",
          "DeleteApiResponse": "{{ DeleteSecret.DeleteSecretApiResponse }}"
        },
        "Script": "import boto3\n\ndef handler(event, context):\n    secrets_manager_client = boto3.client(\"secretsmanager\")\n    secret_arn = event[\"SecretId\"]\n    deletion_date = event[\"DeleteApiResponse\"][\"DeletionDate\"]\n\n    desc_secret = secrets_manager_client.describe_secret(SecretId=secret_arn)\n    if desc_secret[\"DeletedDate\"]:\n        return {\n            \"output\":  \"Verification of DeleteSecret is successful, secret will be deleted on {}.\".format(deletion_date)\n        }\n    raise Exception(\"VERIFICATION FAILED. SECRET NOT DELETED.\")"
      },
      "outputs": [
        {
          "Name": "Output",
          "Selector": "$.Payload.output",
          "Type": "String"
        }
      ]
    }
  ]
}
