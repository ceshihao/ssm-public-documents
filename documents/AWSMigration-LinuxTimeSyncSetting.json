{
  "schemaVersion": "2.2",
  "description": "This document configure your Linux instance to use the Amazon Time Sync Service.",
  "mainSteps": [
    {
      "action": "aws:runShellScript",
      "name": "LinuxTimeSyncSetting",
      "precondition": {
        "StringEquals": [
          "platformType",
          "Linux"
        ]
      },
      "inputs": {
        "timeoutSeconds": "3600",
        "runCommand": [
          "#!/bin/bash\n\nset -eE\nset -u\nset -o pipefail\n\ntrap handle_error ERR\n\nMAX_VERIFY_TRIES=30\n\nhandle_error() {\n    echo \"An unexpected error occurred. Exiting...\"\n    exit 1\n}\n\nunimplemented_step() {\n    echo \"Error: An unexpected error occurred. Exiting...\"\n    exit 1\n}\n\nverify_amazon_timesync_service_configured() {\n    chronyc_cmd=$(which chronyc)\n    if [[ -n \"$chronyc_cmd\" ]]; then\n        $chronyc_cmd sources | grep -q '^\\^\\* 169\\.254\\.169\\.123'\n    else\n        return 1\n    fi\n}\n\nupdate_chrony_config_file() {\n    config_line=\"server 169.254.169.123 prefer iburst minpoll 4 maxpoll 4\"\n    sed -E -i \"0,/^(server|pool|! pool).*$/s//$config_line\\n&/\" \"$chrony_config_file_path\"\n}\n\nubuntu_install_chrony() {\n    apt update\n    apt install -y chrony\n}\n\nsles_install_chrony() {\n    zypper refresh\n    zypper -n install chrony\n}\n\ninstall_chrony=unimplemented_step\nconfigure_chrony_startup=unimplemented_step\nrestart_chrony=unimplemented_step\nunset chrony_config_file_path\n\n. /etc/os-release\nOS_RELEASE=\"$ID${VERSION_ID:+.${VERSION_ID}}\"\ncase \"$OS_RELEASE\" in\n    ubuntu.18.04|ubuntu.20.04)\n        install_chrony=\"ubuntu_install_chrony\"\n        configure_chrony_startup=\"\"\n        restart_chrony=\"/etc/init.d/chrony restart\"\n        chrony_config_file_path=\"/etc/chrony/chrony.conf\"\n        ;;\n    sles.12.5)\n        install_chrony=\"sles_install_chrony\"\n        configure_chrony_startup=\"systemctl enable chronyd\"\n        restart_chrony=\"systemctl restart chronyd\"\n        chrony_config_file_path=\"/etc/chrony.conf\"\n        ;;\nesac\n\necho \"Checking if Amazon time service already configured...\"\nif verify_amazon_timesync_service_configured; then\n    echo \"Service already configured. Exiting...\"\n    exit 0\nfi\n\necho \"Installing chrony...\"\n$install_chrony > /dev/null\n\necho \"Configuring chrony service startup...\"\n$configure_chrony_startup > /dev/null\n\necho \"Updating chrony configuration file...\"\nupdate_chrony_config_file > /dev/null\n\necho \"Restarting chrony...\"\n$restart_chrony > /dev/null\n\necho \"Verifying Amazon time service configured...\"\nfor ((i=0; i<$MAX_VERIFY_TRIES; i++))\ndo\n    if verify_amazon_timesync_service_configured; then\n        echo \"Done.\"\n        exit 0\n    fi\n    sleep 1s\ndone\n\necho \"Amazon time service configuration failed.\"\nexit 1\n"
        ]
      }
    }
  ]
}
