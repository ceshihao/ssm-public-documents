{
  "schemaVersion": "2.2",
  "description": "Invokes inspector ssm plugin for linux",
  "parameters": {
    "Timeout": {
      "type": "String",
      "description": "Timeout in seconds for inspector ssm plugin",
      "default": "900",
      "allowedPattern": "^([0-9]|[1-9][0-9]+)$"
    },
    "CpuLimit": {
      "type": "String",
      "description": "Cpu usage limit in percentage for inspector ssm plugin",
      "default": "65",
      "allowedPattern": "^([1-9]|[1-9][0-9])$|^(100)$"
    }
  },
  "mainSteps": [
    {
      "action": "aws:runShellScript",
      "name": "invokeInspectorSsmPluginLinux",
      "precondition": {
        "StringEquals": [
          "platformType",
          "Linux"
        ]
      },
      "inputs": {
        "runCommand": [
          "#!/bin/bash",
          "#",
          "# Copyright 2023 Amazon.com, Inc. or its affiliates. All Rights Reserved.",
          "#",
          "",
          "fail () {",
          "  echo $1",
          "  echo $1 >&2",
          "  exit 1",
          "}",
          "",
          "is_excluded () {",
          "  metadata_uri=\"http://169.254.169.254/latest\"",
          "  TOKEN=$(curl -sS -X PUT \"$metadata_uri/api/token\" -H \"X-aws-ec2-metadata-token-ttl-seconds: 120\")",
          "  response=$(curl -sS -w \"\\n%{http_code}\" -H \"X-aws-ec2-metadata-token: $TOKEN\" -v $metadata_uri/meta-data/tags/instance 2> /dev/null)",
          "  http_code=$(tail -n1 <<< \"$response\")",
          "  if [ $http_code -ne 200 ]; then",
          "    echo \"Failed to get instance tags from instance metadata.\"",
          "    return 1",
          "  fi",
          "  tags=$(sed '$ d' <<< \"$response\")",
          "  INSPECTOR_EXCLUSION_TAG=\"inspectorec2exclusion\"",
          "",
          "  # put hard newline character in variable",
          "  nl=$(printf \"\\nx\")",
          "  nl=${nl%x}",
          "",
          "  while [ \"$tags\" != \"$tag\" ] ;do",
          "      # extract the substring from start of string up to delimiter.",
          "      tag=${tags%%$nl*}",
          "      # delete this first \"element\" AND next separator, from $tags.",
          "      tags=\"${tags#$tag$nl}\"",
          "      tag_lower=$(echo \"$tag\" | tr \"[:upper:]\" \"[:lower:]\")",
          "      if [ \"$tag_lower\" == \"$INSPECTOR_EXCLUSION_TAG\" ]; then",
          "        echo \"Inspector exclusion tag found: $tag\"",
          "        return 0",
          "      fi",
          "  done",
          "  return 1",
          "}",
          "",
          "retry () {",
          "  local attempt=0",
          "  local max_attempts=5",
          "  local delay=60",
          "  while",
          "    \"$1\" && break || {",
          "        attempt=$((attempt+1))",
          "        echo \"Waiting for $delay second(s) before retrying...\"",
          "        sleep $delay;",
          "    }",
          "    [ $attempt -lt $max_attempts ]",
          "  do :; done",
          "  if [ $attempt -eq $max_attempts ]; then",
          "    echo \"Retries completed after $attempt attempts.\"",
          "    fail \"$2\"",
          "  fi",
          "}",
          "",
          "INSPECTOR_ROOT_DIR=\"/opt/aws/inspector\"",
          "INSPECTOR_SSM_PLUGIN=\"$INSPECTOR_ROOT_DIR/bin/inspectorssmplugin\"",
          "INSPECTOR_OUTPUT_DIR=\"$INSPECTOR_ROOT_DIR/var/output\"",
          "",
          "TIMEOUT=\"{{Timeout}}\"",
          "CPU_LIMIT=\"{{CpuLimit}}\"",
          "",
          "if is_excluded; then",
          "  echo \"Exiting: instance is inspector excluded, skipping the evaluation for an instance.\"",
          "  exit 0",
          "fi",
          "",
          "is_installed () {",
          "  if [ ! -f $INSPECTOR_SSM_PLUGIN ]; then",
          "    echo \"$INSPECTOR_SSM_PLUGIN does not exist\"",
          "    (exit 1)",
          "  else",
          "    echo \"$INSPECTOR_SSM_PLUGIN exist\"",
          "  fi",
          "}",
          "",
          "echo \"Checking the installation of inspector ssm plugin...\"",
          "retry is_installed \"Inspector ssm plugin is not installed. Exiting...\"",
          "echo \"Inspector ssm plugin is installed.\"",
          "",
          "echo \"Starting evaluation using inspector ssm plugin\"",
          "cmd=\"$INSPECTOR_SSM_PLUGIN -mode bpm -read-params-store -report-ssm-inventory -report-metrics-via-ssm-inventory -save-findings-as $INSPECTOR_OUTPUT_DIR/packages.txt -format text -timeout $(($TIMEOUT)) -cpulimit $(($CPU_LIMIT))\"",
          "$cmd",
          "status=$?",
          "if [ $status -eq 0 ]",
          "then",
          "  echo \"Inspector ssm plugin linux ran successfully\"",
          "  exit 0",
          "else",
          "  fail \"Inspector ssm plugin did not run successfully\"",
          "fi"
        ]
      }
    }
  ]
}
