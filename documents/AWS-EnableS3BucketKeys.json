{
  "schemaVersion": "0.3",
  "description": "### Document name - AWS-EnableS3BucketKeys\n\n## What does this document do?\nThe AWS-EnableS3BucketKeys runbook enables S3 Bucket Keys on a specified S3 Bucket. This bucket-level key will create\ndata keys for new objects during its lifecycle. If the KmsKeyId parameter is not specified, server-side encryption\nwith Amazon S3 managed keys (SSE-S3) is the default encryption configuration. Note: S3 Bucket Keys aren't supported\nfor dual-layer server-side encryption with AWS Key Management Service (AWS KMS) keys (DSSE-KMS).\n\n## Input Parameters\n* AutomationAssumeRole: (Optional) The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role\n  that allows Systems Manager Automation to perform the actions on your behalf. If no role is specified,\n  Systems Manager Automation uses the permissions of the user that starts this runbook.\n  * Default: \"\"\n* BucketName: (Required) The name of the S3 bucket that will have Bucket Keys enabled.\n* KmsKeyId: (Optional) The ARN, key ID, or the key alias of the of the KMS Key you want to use for\n  server-side bucket encryption.\n  * Default: \"\"\n",
  "assumeRole": "{{ AutomationAssumeRole }}",
  "parameters": {
    "AutomationAssumeRole": {
      "type": "AWS::IAM::Role::Arn",
      "description": "(Optional) The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that\nallows Systems Manager Automation to perform the actions on your behalf. If no role is specified,\nSystems Manager Automation uses the permissions of the user that starts this runbook.\n",
      "default": ""
    },
    "BucketName": {
      "type": "AWS::S3::Bucket::Name",
      "description": "(Required) The name of the S3 bucket that will have Bucket Keys enabled."
    },
    "KmsKeyId": {
      "type": "String",
      "description": "(Optional) The ARN, key ID, or the key alias of the of the KMS Key you want to use for\nserver-side bucket encryption.\n",
      "default": "",
      "allowedPattern": "^$|^[a-z0-9-]{1,2048}$|^mrk-[a-z0-9]{1,2044}$|^alias\\/.{1,250}$|^arn:aws[a-z0-9-]*:kms:[a-z0-9-]+:\\d{12}:key\\/[a-z0-9-]{1,1992}$|^arn:aws[a-z0-9-]*:kms:[a-z0-9-]+:\\d{12}:key\\/mrk-[a-z0-9]{1,1988}$|^arn:aws[a-z0-9-]*:kms:[a-z0-9-]+:\\d{12}:alias\\/.{1,1990}$"
    }
  },
  "mainSteps": [
    {
      "name": "ChooseEncryptionType",
      "description": "## ChooseEncryptionType\nEvaluates the KmsKeyId parameter to determine if SSE-S3 (AES256) or SSE-KMS will be used.\n",
      "action": "aws:branch",
      "inputs": {
        "Choices": [
          {
            "NextStep": "PutBucketKeysKMS",
            "Not": {
              "Variable": "{{ KmsKeyId }}",
              "StringEquals": ""
            }
          }
        ],
        "Default": "PutBucketKeysAES256"
      }
    },
    {
      "name": "PutBucketKeysKMS",
      "action": "aws:executeAwsApi",
      "description": "## PutBucketKeysKMS\nSets the BucketKeyEnabled property to True for the specified S3 Bucket using the specified KmsKeyId.\n",
      "timeoutSeconds": 600,
      "inputs": {
        "Service": "s3",
        "Api": "PutBucketEncryption",
        "Bucket": "{{ BucketName }}",
        "ServerSideEncryptionConfiguration": {
          "Rules": [
            {
              "ApplyServerSideEncryptionByDefault": {
                "SSEAlgorithm": "aws:kms",
                "KMSMasterKeyID": "{{ KmsKeyId }}"
              },
              "BucketKeyEnabled": true
            }
          ]
        }
      },
      "nextStep": "VerifyS3BucketKeysEnabled"
    },
    {
      "name": "PutBucketKeysAES256",
      "action": "aws:executeAwsApi",
      "description": "## PutBucketKeysAES256\nSets the BucketKeyEnabled property to True for the specified S3 Bucket with AES256 encryption.\n",
      "timeoutSeconds": 600,
      "inputs": {
        "Service": "s3",
        "Api": "PutBucketEncryption",
        "Bucket": "{{ BucketName }}",
        "ServerSideEncryptionConfiguration": {
          "Rules": [
            {
              "ApplyServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              },
              "BucketKeyEnabled": true
            }
          ]
        }
      },
      "nextStep": "VerifyS3BucketKeysEnabled"
    },
    {
      "name": "VerifyS3BucketKeysEnabled",
      "action": "aws:assertAwsResourceProperty",
      "description": "## VerifyS3BucketKeysEnabled\nVerifies that the S3 Bucket Keys have been enabled on the specified S3 Bucket.\n",
      "inputs": {
        "Service": "s3",
        "Api": "GetBucketEncryption",
        "Bucket": "{{ BucketName }}",
        "PropertySelector": "$.ServerSideEncryptionConfiguration.Rules[0].BucketKeyEnabled",
        "DesiredValues": [
          "True"
        ]
      }
    }
  ]
}
