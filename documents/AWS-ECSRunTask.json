{
  "schemaVersion": "0.3",
  "description": "### Document name - AWS-ECSRunTask\n\n## What does this document do?\nThe AWS-ECSRunTask runbook starts a new ECS task using the specified task definition using\nthe [RunTask](https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_RunTask.html) API.\n\n## Input Parameters\n* AutomationAssumeRole:(Optional) The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role\n  that allows Systems Manager Automation to perform the actions on your behalf. If no role is specified,\n  Systems Manager Automation uses the permissions of the user that starts this runbook.\n  * Default: \"\"\n* TaskDefinition: (Required) The family and revision (family:revision) or full ARN of the task definition to run.\n  If a revision isn't specified, the latest ACTIVE revision is used.\n* CapacityProviderStrategy: (Optional) The capacity provider strategy to use for the task. If a\n  capacityProviderStrategy is specified, the launchType parameter must be omitted. If no capacityProviderStrategy or\n  launchType is specified, the defaultCapacityProviderStrategy for the cluster is used.\n  * Default: []\n* Cluster: (Optional) The short name or full Amazon Resource Name (ARN) of the cluster to run your task on.\n  If you do not specify a cluster, the default cluster is assumed.\n  * Default: \"\"\n* Count: (Optional) The number of instantiations of the specified task to place on your cluster.\n  You can specify up to 10 tasks for each call.\n  * Default: 1\n* EnableECSManagedTags: (Optional) Specifies whether to enable Amazon ECS managed tags for the task. For more\n  information, see\n  [Tagging Your Amazon ECS Resources](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-using-tags.html)\n  in the Amazon Elastic Container Service Developer Guide.\n  * Default: `false`\n* EnableExecuteCommand: (Optional) Determines whether to enable the execute command functionality for the containers\n  in this task. If true, this enables execute command functionality on all containers in the task and the task\n  definition must have a task role, or you must provide one as an override.\n  * Default: `false`\n* Group: (Optional) The name of the task group to associate with the task. The default value is the family\n  name of the task definition (for example, `family:my-family-name`).\n  * Default: \"\"\n* LaunchType: (Optional) The infrastructure to run your standalone task on. For more information, see Amazon ECS\n  launch types in the Amazon Elastic Container Service Developer Guide. A task can use either a launch type or a\n  capacity provider strategy. If a launchType is specified, the capacityProviderStrategy parameter must be omitted.\n  Valid Values: EC2 | FARGATE | EXTERNAL\n  * Default: \"\"\n* NetworkConfiguration: (Optional) The network configuration for the task. This parameter is required for task\n  definitions that use the awsvpc network mode to receive their own elastic network interface, and it isn't supported\n  for other network modes. For more information, see\n  [Task Networking](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-networking.html) in the\n  Amazon Elastic Container Service Developer Guide.\n  * Default: {}\n* Overrides: (Optional) A list of container overrides in JSON format that specify the name of a container in the\n  specified task definition and the overrides it should receive. You can override the default command for a container\n  (that's specified in the task definition or Docker image) with a `command` override. You can also override existing\n  environment variables (that are specified in the task definition or Docker image) on a container or add new\n  environment variables to it with an `environment` override.\n  * Default: {}\n* PlacementConstraints: (Optional) An array of placement constraint objects to use for the task. You can specify up\n  to 10 constraints for each task (including constraints in the task definition and those specified at runtime).\n  * Default: []\n* PlacementStrategy: (Optional) The placement strategy objects to use for the task. You can specify a maximum of 5\n  strategy rules for each task.\n  * Default: []\n* PlatformVersion: (Optional) The platform version the task uses. A platform version is only specified for tasks\n  hosted on Fargate. If one isn't specified, the `LATEST` platform version is used. For more information, see\n  AWS Fargate platform versions in the Amazon Elastic Container Service Developer Guide.\n  * Default: \"\"\n* PropagateTags: (Optional) Specifies whether to propagate the tags from the task definition to the task. If no value\n  is specified, the tags aren't propagated. Tags can only be propagated to the task during task creation. To add\n  tags to a task after task creation, use the TagResource API action.\n  * Default: \"\"\n* ReferenceId: (Optional) The reference ID to use for the task. The reference ID can have a maximum length of\n  1024 characters.\n  * Default: \"\"\n* StartedBy: (Optional) An optional tag specified when a task is started. For example, if you automatically\n  trigger a task to run a batch process job, you could apply a unique identifier for that job to your task with the\n  startedBy parameter. You can then identify which tasks belong to that job by filtering the results of a ListTasks\n  call with the startedBy value. Up to 36 letters (uppercase and lowercase), numbers, hyphens (-), and underscores (_)\n  are allowed.\n  * Default: \"\"\n* Tags: (Optional) The metadata that you apply to the task to help you categorize and organize them. Each\n  tag consists of a key and an optional value, both of which you define.\n  * Default: []\n\n## Output Parameters\n* RunTask.RunTaskResponse: Response from the RunTask api call.\n",
  "assumeRole": "{{AutomationAssumeRole}}",
  "parameters": {
    "AutomationAssumeRole": {
      "type": "AWS::IAM::Role::Arn",
      "description": "(Optional) The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that\nallows Systems Manager Automation to perform the actions on your behalf. If no role is specified,\nSystems Manager Automation uses the permissions of the user that starts this runbook.\n",
      "default": ""
    },
    "TaskDefinition": {
      "type": "String",
      "description": "(Required) The family and revision (family:revision) or full ARN of the task definition to run.\nIf a revision isn't specified, the latest ACTIVE revision is used.\n",
      "allowedPattern": "^arn:(aws[a-zA-Z-]*):ecs:([A-Za-z0-9]+(-[A-Za-z0-9]+)+):([+-]?(?=\\.\\d|\\d)(?:\\d+)?(?:\\.?\\d*))(?:[eE]([+-]?\\d+))?:task-definition\\/([A-Za-z0-9]+(-[A-Za-z0-9]+)+):1|^[-_a-zA-Z\\/\\s\\.“\\-]*$"
    },
    "CapacityProviderStrategy": {
      "type": "MapList",
      "description": "(Optional) The capacity provider strategy to use for the task. If a capacityProviderStrategy is specified, the\nlaunchType parameter must be omitted. If no capacityProviderStrategy or launchType is specified,\nthe defaultCapacityProviderStrategy for the cluster is used.\n",
      "default": [],
      "allowedPattern": "^\\{.*\\}$"
    },
    "Cluster": {
      "type": "String",
      "description": "(Optional) The short name or full Amazon Resource Name (ARN) of the cluster to run your task on.\nIf you do not specify a cluster, the default cluster is assumed.\n",
      "default": "",
      "allowedPattern": "^$|^[A-Za-z0-9\\/\\s\\.\"\\-]+|[a-zA-Z-]|^[-_a-zA-Z\\/\\s\\.“\\-]*$"
    },
    "Count": {
      "type": "Integer",
      "description": "(Optional) The number of instantiations of the specified task to place on your cluster.\nYou can specify up to 10 tasks for each call.\n",
      "default": 1,
      "allowedPattern": "^\\d+$"
    },
    "EnableECSManagedTags": {
      "type": "Boolean",
      "description": "(Optional) Specifies whether to enable Amazon ECS managed tags for the task. For more information, see\n[Tagging Your Amazon ECS Resources](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-using-tags.html)\nin the Amazon Elastic Container Service Developer Guide.\n",
      "default": false
    },
    "EnableExecuteCommand": {
      "type": "Boolean",
      "description": "(Optional) Determines whether to enable the execute command functionality for the containers in this task. If\ntrue, this enables execute command functionality on all containers in the task and the task definition must have\na task role, or you must provide one as an override.\n",
      "default": false
    },
    "Group": {
      "type": "String",
      "description": "(Optional) The name of the task group to associate with the task. The default value is the family name of the task\ndefinition (for example, `family:my-family-name`).\n",
      "default": "",
      "allowedPattern": "^[\\w\\d\\s_\\.\\/-:]{0,1024}$"
    },
    "LaunchType": {
      "type": "String",
      "description": "(Optional) The infrastructure to run your standalone task on. For more information, see Amazon ECS launch types\nin the Amazon Elastic Container Service Developer Guide. A task can use either a launch type or a capacity\nprovider strategy. If a launchType is specified, the capacityProviderStrategy parameter must be omitted.\nValid Values: EC2 | FARGATE | EXTERNAL\n",
      "default": "",
      "allowedPattern": "^$|^(EC2|FARGATE|EXTERNAL)$"
    },
    "NetworkConfiguration": {
      "type": "StringMap",
      "description": "(Optional) The network configuration for the task. This parameter is required for task definitions that use the\nawsvpc network mode to receive their own elastic network interface, and it isn't supported for other network\nmodes. For more information, see\n[Task Networking](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-networking.html) in the\nAmazon Elastic Container Service Developer Guide.\n",
      "default": {},
      "allowedPattern": "^\\{.*\\}$"
    },
    "Overrides": {
      "type": "StringMap",
      "description": "(Optional) A list of container overrides in JSON format that specify the name of a container in the specified task\ndefinition and the overrides it should receive. You can override the default command for a container (that's\nspecified in the task definition or Docker image) with a `command` override. You can also override existing\nenvironment variables (that are specified in the task definition or Docker image) on a container or add new\nenvironment variables to it with an `environment` override.\n",
      "default": {},
      "allowedPattern": "^\\{.*\\}$"
    },
    "PlacementConstraints": {
      "type": "MapList",
      "description": "(Optional) An array of placement constraint objects to use for the task. You can specify up to 10 constraints for\neach task (including constraints in the task definition and those specified at runtime).\n",
      "default": [],
      "allowedPattern": "^\\{.*\\}$"
    },
    "PlacementStrategy": {
      "type": "MapList",
      "description": "(Optional) The placement strategy objects to use for the task. You can specify a maximum of 5 strategy rules\nfor each task.\n",
      "default": [],
      "allowedPattern": "^\\{.*\\}$"
    },
    "PlatformVersion": {
      "type": "String",
      "description": "(Optional) The platform version the task uses. A platform version is only specified for tasks hosted on Fargate.\nIf one isn't specified, the `LATEST` platform version is used. For more information, see AWS Fargate platform\nversions in the Amazon Elastic Container Service Developer Guide.\n",
      "default": "",
      "allowedPattern": "^[\\w\\d\\s_\\.\\/-:]{0,1024}$"
    },
    "PropagateTags": {
      "type": "String",
      "description": "(Optional) Specifies whether to propagate the tags from the task definition to the task. If no value is specified,\nthe tags aren't propagated. Tags can only be propagated to the task during task creation. To add tags to a task\nafter task creation, use the TagResource API action.\n",
      "default": "",
      "allowedPattern": "^[\\w\\d\\s_\\.\\/-:]{0,1024}$"
    },
    "ReferenceId": {
      "type": "String",
      "description": "(Optional) The reference ID to use for the task. The reference ID can have a maximum length of 1024 characters.\n",
      "default": "",
      "allowedPattern": "^[\\w\\d\\s_\\.\\/-:]{0,1024}$"
    },
    "StartedBy": {
      "type": "String",
      "description": "(Optional) An optional tag specified when a task is started. For example, if you automatically trigger a task to\nrun a batch process job, you could apply a unique identifier for that job to your task with the startedBy\nparameter. You can then identify which tasks belong to that job by filtering the results of a ListTasks call with\nthe startedBy value. Up to 36 letters (uppercase and lowercase), numbers, hyphens (-), and underscores (_)\nare allowed.\n",
      "default": "",
      "allowedPattern": "^[\\w\\d\\s_\\.\\/-:]{0,36}$"
    },
    "Tags": {
      "type": "MapList",
      "description": "(Optional) The metadata that you apply to the task to help you categorize and organize them. Each tag consists of\na key and an optional value, both of which you define.\n",
      "default": [],
      "allowedPattern": "^\\{.*\\}$"
    }
  },
  "outputs": [
    "RunTask.RunTaskResponse"
  ],
  "mainSteps": [
    {
      "name": "RunTask",
      "action": "aws:executeScript",
      "description": "## RunTask\nStarts a new ECS task using the specified task definition.\n## Outputs\n* RunTaskResponse: Response of the RunTask API call.\n* ClusterName: Name of the ECS Cluster that the task was run on.\n* TaskArn: Full ARN entry of the task that was run.\n",
      "timeoutSeconds": 600,
      "inputs": {
        "Runtime": "python3.8",
        "Handler": "handler",
        "InputPayload": {
          "TaskDefinition": "{{TaskDefinition}}",
          "CapacityProviderStrategy": "{{CapacityProviderStrategy}}",
          "Cluster": "{{Cluster}}",
          "Count": "{{Count}}",
          "EnableECSManagedTags": "{{EnableECSManagedTags}}",
          "EnableExecuteCommand": "{{EnableExecuteCommand}}",
          "Group": "{{Group}}",
          "LaunchType": "{{LaunchType}}",
          "Overrides": "{{Overrides}}",
          "PlacementConstraints": "{{PlacementConstraints}}",
          "PlacementStrategy": "{{PlacementStrategy}}",
          "PlatformVersion": "{{PlatformVersion}}",
          "PropagateTags": "{{PropagateTags}}",
          "NetworkConfiguration": "{{NetworkConfiguration}}",
          "ReferenceId": "{{ReferenceId}}",
          "StartedBy": "{{StartedBy}}",
          "Tags": "{{Tags}}"
        },
        "Script": "import boto3\nimport datetime\nimport json\n\n\ndef extract_value(event_value):\n    if not event_value:\n        return None\n    if isinstance(event_value, str):\n        return event_value.strip()\n    return event_value\n\n\ndef serialize_datetime(object):\n    if isinstance(object, (datetime.date, datetime.datetime)):\n        return object.isoformat()\n    return str(object)\n\n\ndef handler(event, context):\n    run_task_parameters = dict(\n        capacityProviderStrategy=extract_value(event[\"CapacityProviderStrategy\"]),\n        cluster=extract_value(event[\"Cluster\"]),\n        count=extract_value(event[\"Count\"]),\n        enableECSManagedTags=extract_value(event[\"EnableECSManagedTags\"]),\n        enableExecuteCommand=extract_value(event[\"EnableExecuteCommand\"]),\n        group=extract_value(event[\"Group\"]),\n        launchType=extract_value(event[\"LaunchType\"]),\n        networkConfiguration=extract_value(event[\"NetworkConfiguration\"]),\n        overrides=extract_value(event[\"Overrides\"]),\n        placementConstraints=extract_value(event[\"PlacementConstraints\"]),\n        placementStrategy=extract_value(event[\"PlacementStrategy\"]),\n        platformVersion=extract_value(event[\"PlatformVersion\"]),\n        propagateTags=extract_value(event[\"PropagateTags\"]),\n        referenceId=extract_value(event[\"ReferenceId\"]),\n        startedBy=extract_value(event[\"StartedBy\"]),\n        tags=extract_value(event[\"Tags\"]),\n        taskDefinition=extract_value(event[\"TaskDefinition\"])\n    )\n\n    run_task_parameters_without_null_values = {}\n    for parameter_key, parameter_value in run_task_parameters.items():\n        if parameter_value is not None:\n            run_task_parameters_without_null_values[parameter_key] = parameter_value\n\n    ecs_client = boto3.client(\"ecs\")\n    response = ecs_client.run_task(**run_task_parameters_without_null_values)\n\n    results = {}\n    results[\"TaskArn\"] = response[\"tasks\"][0][\"taskArn\"]\n    results[\"ClusterName\"] = run_task_parameters_without_null_values.get(\"cluster\", \"default\")\n    results[\"RunTaskResponse\"] = json.dumps(response, indent=4, default=serialize_datetime)\n\n    return results\n"
      },
      "outputs": [
        {
          "Name": "RunTaskResponse",
          "Selector": "$.Payload.RunTaskResponse",
          "Type": "String"
        },
        {
          "Name": "ClusterName",
          "Selector": "$.Payload.ClusterName",
          "Type": "String"
        },
        {
          "Name": "TaskArn",
          "Selector": "$.Payload.TaskArn",
          "Type": "String"
        }
      ]
    },
    {
      "name": "VerifyRunTask",
      "action": "aws:waitForAwsResourceProperty",
      "description": "## VerifyRunTask\n  Verifies the Task has a `lastStatus` of `RUNNING`, `DEACTIVATING`, `STOPPING`, `DEPROVISIONING` or `STOPPED`.\n",
      "timeoutSeconds": 600,
      "inputs": {
        "Service": "ecs",
        "Api": "DescribeTasks",
        "cluster": "{{RunTask.ClusterName}}",
        "tasks": [
          "{{RunTask.TaskArn}}"
        ],
        "PropertySelector": "$.tasks[0].lastStatus",
        "DesiredValues": [
          "RUNNING",
          "DEACTIVATING",
          "STOPPING",
          "DEPROVISIONING",
          "STOPPED"
        ]
      }
    }
  ]
}
