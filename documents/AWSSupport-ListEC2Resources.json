{
  "description": "The **AWSSupport-ListEC2Resources** runbook lists EC2 related resources (Instances, Images, EBS Volumes, Snapshots, EIPs, ENIs, ASGs, and ELBs) in your AWS Account.*  \n\n---\nThis document has four parameters:\n- (Optional) `AutomationAssumeRole`: AWS Identity and Access Management (IAM) role required for executing this runbook.\n- (Optional) `BucketName:` an S3 bucket in your account to save the outputted list as a CSV.\n- (Optional) `RegionsToQuery`: regions to list the resources from. By default all active regions are queried.\n- (Optional) `DisplayResourceDeletionDocumentation`: to include relevant documentation links to delete the resources. Default is `Yes`.\n\n**Note: This document provides sensitive data. Please make sure appropriate bucket policy is in place for the bucket specified in the parameter 'BucketName'. If the bucket is public CSV would not be uploaded.**",
  "schemaVersion": "0.3",
  "assumeRole": "{{ AutomationAssumeRole }}",
  "outputs": [
    "ListEC2Instances.EC2Instances",
    "ListImages.AMIs",
    "ListVolumes.EBSVolumes",
    "ListSnapshots.VolumeSnapshots",
    "ListEIPs.EIPs",
    "ListENIs.NetworkInterfaces",
    "ListAutoScalingGroups.AutoScalingGroups",
    "ListElasticLoadBalancers.ELBs"
  ],
  "parameters": {
    "AutomationAssumeRole": {
      "type": "AWS::IAM::Role::Arn",
      "description": "(Optional) The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that allows Systems Manager Automation to perform the actions on your behalf. If no role is specified, Systems Manager Automation uses the permissions of the user that starts this runbook.",
      "default": ""
    },
    "BucketName": {
      "type": "AWS::S3::Bucket::Name",
      "description": "(Optional) Provide a bucket name to save a CSV of the reported list of resources.",
      "default": ""
    },
    "RegionsToQuery": {
      "type": "String",
      "default": "All",
      "description": "(Optional) The document will list resources in regions specified by this parameter. By default, the document queries all active regions in the partition. However, to override the behaviour it is possible to pass a comma delimited region list such as 'us-east-1,us-west-1'.",
      "allowedPattern": "All|[a-z]{2}(-gov)?(-iso[a-z]?)?-[a-z]{2,10}-[0-9]{1,2}(,[a-z]{2}(-gov)?(-iso[a-z]?)?-[a-z]{2,10}-[0-9]{1,2})*"
    },
    "DisplayResourceDeletionDocumentation": {
      "type": "String",
      "default": "True",
      "description": "(Optional) If set to `True`, the automation creates links in the output to documentation related to deleting your resources.",
      "allowedValues": [
        "True",
        "False"
      ]
    }
  },
  "mainSteps": [
    {
      "name": "GetActiveRegions",
      "description": "Retrieves the active regions for the AWS account executing the runbook.",
      "action": "aws:executeAwsApi",
      "nextStep": "ValidateRegionsToQuery",
      "outputs": [
        {
          "Name": "ActiveRegions",
          "Selector": "$.Regions",
          "Type": "MapList"
        }
      ],
      "inputs": {
        "Api": "DescribeRegions",
        "Service": "ec2"
      },
      "onFailure": "Abort",
      "isCritical": true
    },
    {
      "name": "ValidateRegionsToQuery",
      "description": "Verify if the regions provided in the `RegionToQuery` parameter are valid AWS regions.",
      "action": "aws:executeScript",
      "nextStep": "BranchOnIfValidRegions",
      "inputs": {
        "InputPayload": {
          "RegionsToQuery": "{{ RegionsToQuery }}",
          "ActiveRegions": "{{ GetActiveRegions.ActiveRegions }}"
        },
        "Handler": "validate_regions.script_handler",
        "Runtime": "python3.11",
        "Attachment": "artifact.zip"
      },
      "outputs": [
        {
          "Name": "ValidRegions",
          "Selector": "$.Payload.valid_regions",
          "Type": "String"
        },
        {
          "Name": "InvalidRegions",
          "Selector": "$.Payload.invalid_regions",
          "Type": "String"
        },
        {
          "Name": "InactiveRegions",
          "Selector": "$.Payload.inactive_regions",
          "Type": "String"
        },
        {
          "Name": "KnownIssuesNotRunningIn",
          "Selector": "$.Payload.not_running_in",
          "Type": "String"
        }
      ],
      "onFailure": "Abort"
    },
    {
      "name": "BranchOnIfValidRegions",
      "description": "Branches of if valid regions are present. If none are available, it proceeds to end the execution.",
      "action": "aws:branch",
      "isEnd": true,
      "inputs": {
        "Choices": [
          {
            "Not": {
              "Variable": "{{ ValidateRegionsToQuery.ValidRegions }}",
              "StringEquals": "Empty"
            },
            "NextStep": "ListEC2Instances"
          }
        ]
      }
    },
    {
      "name": "ListEC2Instances",
      "description": "Retrieves a list of EC2 instances in the AWS account.",
      "action": "aws:executeScript",
      "nextStep": "ListImages",
      "inputs": {
        "InputPayload": {
          "Regions": "{{ ValidateRegionsToQuery.ValidRegions }}",
          "Documentation": "{{ DisplayResourceDeletionDocumentation }}"
        },
        "Handler": "list_instances.script_handler",
        "Runtime": "python3.11",
        "Attachment": "artifact.zip"
      },
      "outputs": [
        {
          "Name": "EC2Instances",
          "Selector": "$.Payload.resource_list",
          "Type": "String"
        },
        {
          "Name": "Failures",
          "Selector": "$.Payload.failed",
          "Type": "String"
        },
        {
          "Name": "How to terminate resource",
          "Selector": "$.Payload.how_to",
          "Type": "String"
        }
      ],
      "onFailure": "Continue",
      "isCritical": false
    },
    {
      "name": "ListImages",
      "description": "Retrieves a list of AMIs in the AWS account.",
      "action": "aws:executeScript",
      "nextStep": "ListVolumes",
      "inputs": {
        "InputPayload": {
          "Regions": "{{ ValidateRegionsToQuery.ValidRegions }}",
          "Documentation": "{{ DisplayResourceDeletionDocumentation }}"
        },
        "Handler": "list_images.script_handler",
        "Runtime": "python3.11",
        "Attachment": "artifact.zip"
      },
      "outputs": [
        {
          "Name": "AMIs",
          "Selector": "$.Payload.resource_list",
          "Type": "String"
        },
        {
          "Name": "Failures",
          "Selector": "$.Payload.failed",
          "Type": "String"
        },
        {
          "Name": "How to terminate resource",
          "Selector": "$.Payload.how_to",
          "Type": "String"
        }
      ],
      "onFailure": "Continue",
      "isCritical": false
    },
    {
      "name": "ListVolumes",
      "description": "Retrieves a list of EBS volumes in the AWS account.",
      "action": "aws:executeScript",
      "nextStep": "ListSnapshots",
      "inputs": {
        "InputPayload": {
          "Regions": "{{ ValidateRegionsToQuery.ValidRegions }}",
          "Documentation": "{{ DisplayResourceDeletionDocumentation }}"
        },
        "Handler": "list_volumes.script_handler",
        "Runtime": "python3.11",
        "Attachment": "artifact.zip"
      },
      "outputs": [
        {
          "Name": "EBSVolumes",
          "Selector": "$.Payload.resource_list",
          "Type": "String"
        },
        {
          "Name": "Failures",
          "Selector": "$.Payload.failed",
          "Type": "String"
        },
        {
          "Name": "How to terminate resource",
          "Selector": "$.Payload.how_to",
          "Type": "String"
        }
      ],
      "onFailure": "Continue",
      "isCritical": false
    },
    {
      "name": "ListSnapshots",
      "description": "Retrieves a list EBS Volume snapshots in the AWS account.",
      "action": "aws:executeScript",
      "nextStep": "ListEIPs",
      "inputs": {
        "InputPayload": {
          "Regions": "{{ ValidateRegionsToQuery.ValidRegions }}",
          "Documentation": "{{ DisplayResourceDeletionDocumentation }}"
        },
        "Handler": "list_snapshots.script_handler",
        "Runtime": "python3.11",
        "Attachment": "artifact.zip"
      },
      "outputs": [
        {
          "Name": "VolumeSnapshots",
          "Selector": "$.Payload.resource_list",
          "Type": "String"
        },
        {
          "Name": "Failures",
          "Selector": "$.Payload.failed",
          "Type": "String"
        },
        {
          "Name": "How to terminate resource",
          "Selector": "$.Payload.how_to",
          "Type": "String"
        }
      ],
      "onFailure": "Continue",
      "isCritical": false
    },
    {
      "name": "ListEIPs",
      "description": "Retrieves a list of Elastic IPs in the AWS account.",
      "action": "aws:executeScript",
      "nextStep": "ListENIs",
      "inputs": {
        "InputPayload": {
          "Regions": "{{ ValidateRegionsToQuery.ValidRegions }}",
          "Documentation": "{{ DisplayResourceDeletionDocumentation }}"
        },
        "Handler": "list_eips.script_handler",
        "Runtime": "python3.11",
        "Attachment": "artifact.zip"
      },
      "outputs": [
        {
          "Name": "EIPs",
          "Selector": "$.Payload.resource_list",
          "Type": "String"
        },
        {
          "Name": "Failures",
          "Selector": "$.Payload.failed",
          "Type": "String"
        },
        {
          "Name": "How to terminate resource",
          "Selector": "$.Payload.how_to",
          "Type": "String"
        }
      ],
      "onFailure": "Continue",
      "isCritical": false
    },
    {
      "name": "ListENIs",
      "description": "Retrieves a list Network Interfaces in the AWS account.",
      "action": "aws:executeScript",
      "nextStep": "ListAutoScalingGroups",
      "inputs": {
        "InputPayload": {
          "Regions": "{{ ValidateRegionsToQuery.ValidRegions }}",
          "Documentation": "{{ DisplayResourceDeletionDocumentation }}"
        },
        "Handler": "list_enis.script_handler",
        "Runtime": "python3.11",
        "Attachment": "artifact.zip"
      },
      "outputs": [
        {
          "Name": "NetworkInterfaces",
          "Selector": "$.Payload.resource_list",
          "Type": "String"
        },
        {
          "Name": "Failures",
          "Selector": "$.Payload.failed",
          "Type": "String"
        },
        {
          "Name": "How to terminate resource",
          "Selector": "$.Payload.how_to",
          "Type": "String"
        }
      ],
      "onFailure": "Continue",
      "isCritical": false
    },
    {
      "name": "ListAutoScalingGroups",
      "description": "List Auto Scaling Groups in the AWS account.",
      "action": "aws:executeScript",
      "nextStep": "ListElasticLoadBalancers",
      "inputs": {
        "Handler": "list_autoscaling_groups.script_handler",
        "InputPayload": {
          "Regions": "{{ ValidateRegionsToQuery.ValidRegions }}",
          "Documentation": "{{ DisplayResourceDeletionDocumentation }}"
        },
        "Runtime": "python3.11",
        "Attachment": "artifact.zip"
      },
      "outputs": [
        {
          "Name": "AutoScalingGroups",
          "Selector": "$.Payload.resource_list",
          "Type": "String"
        },
        {
          "Name": "Failures",
          "Selector": "$.Payload.failed",
          "Type": "String"
        },
        {
          "Name": "How to terminate resource",
          "Selector": "$.Payload.how_to",
          "Type": "String"
        }
      ],
      "onFailure": "Continue",
      "isCritical": false
    },
    {
      "name": "ListElasticLoadBalancers",
      "description": "Retrieves a list the Elastic Load Balancers in the AWS account.",
      "action": "aws:executeScript",
      "nextStep": "BranchOnIfCSVRequested",
      "inputs": {
        "InputPayload": {
          "Regions": "{{ ValidateRegionsToQuery.ValidRegions }}",
          "Documentation": "{{ DisplayResourceDeletionDocumentation }}"
        },
        "Handler": "list_elbs.script_handler",
        "Runtime": "python3.11",
        "Attachment": "artifact.zip"
      },
      "outputs": [
        {
          "Name": "ELBs",
          "Selector": "$.Payload.resource_list",
          "Type": "String"
        },
        {
          "Name": "Failures",
          "Selector": "$.Payload.failed",
          "Type": "String"
        },
        {
          "Name": "How to terminate resource",
          "Selector": "$.Payload.how_to",
          "Type": "String"
        }
      ],
      "onFailure": "Continue",
      "isCritical": false
    },
    {
      "name": "BranchOnIfCSVRequested",
      "description": "Branch on if CSV report is requested. If not, it proceeds to end the execution.",
      "action": "aws:branch",
      "isEnd": true,
      "inputs": {
        "Choices": [
          {
            "Not": {
              "Variable": "{{ BucketName }}",
              "StringEquals": ""
            },
            "NextStep": "UploadCSVToS3"
          }
        ]
      }
    },
    {
      "name": "UploadCSVToS3",
      "description": "Upload a CSV with details of detected EC2 resources to the S3 bucket provided.",
      "action": "aws:executeScript",
      "isEnd": true,
      "inputs": {
        "InputPayload": {
          "Bucket": "{{ BucketName }}",
          "Automation ID": "{{ automation:EXECUTION_ID }}",
          "Instances": "{{ ListEC2Instances.EC2Instances }}",
          "AMIs": "{{ ListImages.AMIs }}",
          "EBS Volumes": "{{ ListVolumes.EBSVolumes }}",
          "Snapshots": "{{ ListSnapshots.VolumeSnapshots }}",
          "Elastic IPs": "{{ ListEIPs.EIPs }}",
          "Elastic Network Interfaces": "{{ ListENIs.NetworkInterfaces }}",
          "Auto Scaling Groups": "{{ ListAutoScalingGroups.AutoScalingGroups }}",
          "Elastic Load balancers": "{{ ListElasticLoadBalancers.ELBs }}"
        },
        "Handler": "upload_csv_to_s3.script_handler",
        "Runtime": "python3.11",
        "Attachment": "artifact.zip"
      },
      "outputs": [
        {
          "Name": "Download From Here",
          "Selector": "$.Payload.download_from_here",
          "Type": "String"
        },
        {
          "Name": "Message",
          "Selector": "$.Payload.message",
          "Type": "String"
        }
      ],
      "onFailure": "Abort"
    }
  ],
  "files": {
    "artifact.zip": {
      "checksums": {
        "SHA256": "708510c8787a1025c823b4c1e55911eabf0894b8e709f9eee111581042706f13"
      }
    }
  }
}
