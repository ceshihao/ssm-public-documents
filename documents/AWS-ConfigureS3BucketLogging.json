{
  "description": "Enables Logging on S3 Bucket",
  "schemaVersion": "0.3",
  "assumeRole": "{{ AutomationAssumeRole }}",
  "parameters": {
    "BucketName": {
      "type": "String",
      "description": "(Required) The name of the Amazon S3 Bucket for which you want to configure logging."
    },
    "TargetBucket": {
      "type": "String",
      "description": "(Required) Specifies the bucket where you want Amazon S3 to store server access logs. You can have your logs delivered to any bucket that you own. You can also configure multiple buckets to deliver their logs to the same target bucket. In this case you should choose a different TargetPrefix for each source bucket so that the delivered log files can be distinguished by key."
    },
    "TargetPrefix": {
      "type": "String",
      "description": "(Optional) Specifies a prefix for the keys under which the log files will be stored.",
      "default": "/"
    },
    "GrantedPermission": {
      "type": "String",
      "description": "(Optional) Logging permissions assigned to the Grantee for the bucket.",
      "allowedValues": [
        "FULL_CONTROL",
        "READ",
        "WRITE",
        ""
      ],
      "default": ""
    },
    "GranteeType": {
      "type": "String",
      "description": "(Optional) Type of grantee",
      "allowedValues": [
        "CanonicalUser",
        "AmazonCustomerByEmail",
        "Group",
        ""
      ],
      "default": ""
    },
    "GranteeEmailAddress": {
      "type": "String",
      "description": "(Optional) Email address of the grantee.",
      "default": ""
    },
    "GranteeId": {
      "type": "String",
      "description": "(Optional) The canonical user ID of the grantee.",
      "default": ""
    },
    "GranteeUri": {
      "type": "String",
      "description": "(Optional) URI of the grantee group.",
      "default": ""
    },
    "AutomationAssumeRole": {
      "type": "String",
      "description": "(Optional) The ARN of the role that allows Automation to perform the actions on your behalf.",
      "default": ""
    },
    "TargetObjectKeyPartitionDateSource": {
      "type": "String",
      "default": "",
      "allowedValues": [
        "EventTime",
        "DeliveryTime",
        ""
      ],
      "description": "(Optional) Specifies the partition date source for the partitioned prefix."
    },
    "TargetObjectKeyPrefix": {
      "type": "String",
      "default": "",
      "allowedValues": [
        "Partitioned",
        "Simple",
        ""
      ],
      "description": "(Optional) Amazon S3 key format for log objects."
    }
  },
  "mainSteps": [
    {
      "name": "Branch",
      "action": "aws:branch",
      "inputs": {
        "Choices": [
          {
            "NextStep": "GetPutBucketLoggingPayload",
            "Not": {
              "Variable": "{{ TargetObjectKeyPrefix }}",
              "StringEquals": ""
            }
          }
        ],
        "Default": "CheckGrantee"
      }
    },
    {
      "name": "GetPutBucketLoggingPayload",
      "action": "aws:executeScript",
      "nextStep": "PutBucketLoggingWithTargetObjectKeyPrefix",
      "isEnd": false,
      "inputs": {
        "Runtime": "python3.8",
        "Handler": "script_handler",
        "Script": "import boto3\n\ndef script_handler(events, context):\n  loggingStatus = {\n    'TargetBucket': events['TargetBucket'],\n    'TargetPrefix': events['TargetPrefix'],\n  }\n  if events['TargetObjectKey']['Prefix']:\n    if events['TargetObjectKey']['Prefix'] == 'Partitioned':\n      loggingStatus['TargetObjectKeyFormat'] = {\n        'PartitionedPrefix': {\n          'PartitionDateSource': events['TargetObjectKey']['PartitionDateSource']\n        }\n      }\n    else:\n      loggingStatus['TargetObjectKeyFormat'] = {\n        'SimplePrefix': {}\n      }\n  if events['GrantedPermission'] and events['Grantee']['Type']:\n    loggingStatus['TargetGrants'] = [{\n      'Grantee': {\n        'Type': events['Grantee']['Type'],\n      },\n      'Permission': events['GrantedPermission'],\n    }]\n    if events['Grantee']['Type'] == 'Group':\n      loggingStatus['TargetGrants'][0]['Grantee']['URI'] = events['Grantee']['URI']\n    elif events['Grantee']['Type'] == 'CanonicalUser':\n      loggingStatus['TargetGrants'][0]['Grantee']['ID'] = events['Grantee']['ID']\n    else:\n      loggingStatus['TargetGrants'][0]['Grantee']['EmailAddress'] = events['Grantee']['EmailAddress']\n  return loggingStatus",
        "InputPayload": {
          "BucketName": "{{ BucketName }}",
          "TargetBucket": "{{TargetBucket}}",
          "TargetPrefix": "{{TargetPrefix}}",
          "Grantee": {
            "Type": "{{GranteeType}}",
            "URI": "{{GranteeUri}}",
            "ID": "{{GranteeId}}",
            "EmailAddress": "{{GranteeEmailAddress}}"
          },
          "GrantedPermission": "{{GrantedPermission}}",
          "TargetObjectKey": {
            "Prefix": "{{ TargetObjectKeyPrefix }}",
            "PartitionDateSource": "{{ TargetObjectKeyPartitionDateSource }}"
          }
        }
      },
      "outputs": [
        {
          "Type": "StringMap",
          "Name": "LoggingStatus",
          "Selector": "$.Payload"
        }
      ]
    },
    {
      "name": "PutBucketLoggingWithTargetObjectKeyPrefix",
      "action": "aws:executeAwsApi",
      "nextStep": "End",
      "isEnd": false,
      "inputs": {
        "Service": "s3",
        "Api": "PutBucketLogging",
        "Bucket": "{{ BucketName }}",
        "BucketLoggingStatus": {
          "LoggingEnabled": "{{ GetPutBucketLoggingPayload.LoggingStatus }}"
        }
      }
    },
    {
      "name": "CheckGrantee",
      "action": "aws:branch",
      "inputs": {
        "Choices": [
          {
            "NextStep": "PutBucketLogging",
            "Or": [
              {
                "Variable": "{{GrantedPermission}}",
                "StringEquals": ""
              },
              {
                "Variable": "{{GranteeType}}",
                "StringEquals": ""
              }
            ]
          }
        ],
        "Default": "PutBucketLoggingByUri"
      }
    },
    {
      "name": "PutBucketLogging",
      "action": "aws:executeAwsApi",
      "nextStep": "End",
      "isCritical": true,
      "isEnd": false,
      "inputs": {
        "Service": "s3",
        "Api": "PutBucketLogging",
        "Bucket": "{{BucketName}}",
        "BucketLoggingStatus": {
          "LoggingEnabled": {
            "TargetBucket": "{{TargetBucket}}",
            "TargetPrefix": "{{TargetPrefix}}"
          }
        }
      }
    },
    {
      "name": "PutBucketLoggingByUri",
      "action": "aws:executeAwsApi",
      "nextStep": "End",
      "isCritical": false,
      "isEnd": false,
      "onFailure": "step:PutBucketLoggingById",
      "inputs": {
        "Service": "s3",
        "Api": "PutBucketLogging",
        "Bucket": "{{BucketName}}",
        "BucketLoggingStatus": {
          "LoggingEnabled": {
            "TargetBucket": "{{TargetBucket}}",
            "TargetPrefix": "{{TargetPrefix}}",
            "TargetGrants": [
              {
                "Grantee": {
                  "Type": "{{GranteeType}}",
                  "URI": "{{GranteeUri}}"
                },
                "Permission": "{{GrantedPermission}}"
              }
            ]
          }
        }
      }
    },
    {
      "name": "PutBucketLoggingById",
      "action": "aws:executeAwsApi",
      "nextStep": "End",
      "isCritical": false,
      "isEnd": false,
      "onFailure": "step:PutBucketLoggingByEmailAddress",
      "inputs": {
        "Service": "s3",
        "Api": "PutBucketLogging",
        "Bucket": "{{BucketName}}",
        "BucketLoggingStatus": {
          "LoggingEnabled": {
            "TargetBucket": "{{TargetBucket}}",
            "TargetPrefix": "{{TargetPrefix}}",
            "TargetGrants": [
              {
                "Grantee": {
                  "Type": "{{GranteeType}}",
                  "ID": "{{GranteeId}}"
                },
                "Permission": "{{GrantedPermission}}"
              }
            ]
          }
        }
      }
    },
    {
      "name": "PutBucketLoggingByEmailAddress",
      "action": "aws:executeAwsApi",
      "nextStep": "End",
      "isCritical": true,
      "isEnd": false,
      "onFailure": "Abort",
      "inputs": {
        "Service": "s3",
        "Api": "PutBucketLogging",
        "Bucket": "{{BucketName}}",
        "BucketLoggingStatus": {
          "LoggingEnabled": {
            "TargetBucket": "{{TargetBucket}}",
            "TargetPrefix": "{{TargetPrefix}}",
            "TargetGrants": [
              {
                "Grantee": {
                  "Type": "{{GranteeType}}",
                  "EmailAddress": "{{GranteeEmailAddress}}"
                },
                "Permission": "{{GrantedPermission}}"
              }
            ]
          }
        }
      }
    },
    {
      "name": "End",
      "action": "aws:sleep",
      "isEnd": true,
      "inputs": {
        "Duration": "PT1S"
      }
    }
  ]
}
