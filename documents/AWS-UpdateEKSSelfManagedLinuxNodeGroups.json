{
  "schemaVersion": "0.3",
  "description": "### Document name - AWS-UpdateEKSSelfManagedLinuxNodeGroups\n\n## What does this document do?\nThe AWS-UpdateEKSSelfManagedLinuxNodeGroups runbook updates an existing AWS CloudFormation EKS Amazon Linux node stack\nusing the [UpdateStack](https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStack.html) API.\nThis runbook follows the CloudFormation steps in\n[Updating an existing self-managed node group](https://docs.aws.amazon.com/eks/latest/userguide/update-stack.html)\ndocument. After the stack update is initiated, the stack enters an UPDATE_IN_PROGRESS state. **Note**, if the\n`VerifyStackUpdateInProgress` step has a success status, this means the rolling update of instances has not completed,\neven though the overall execution status for the runbook shows success. In these cases, for information about\nmonitoring the progress of the node group update, see the stack updated in the\n[AWS CloudFormation console](https://console.aws.amazon.com/cloudformation).\n\n## Input Parameters\n* AutomationAssumeRole: (Optional) The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM)\nrole that allows Systems Manager Automation to perform the actions on your behalf. If no role is specified, Systems\nManager Automation uses the permissions of the user that starts this runbook.\n* StackName: (Required) The name or the unique stack ID of the AWS CloudFormation stack used to create the\nself-managed Amazon Linux node group, find in the\n[AWS CloudFormation Console](https://console.aws.amazon.com/cloudformation/).\n* NodeAutoScalingGroupDesiredCapacity: (Required) The desired instance count currently applied for the node stack.\nOr, the new desired number of nodes to scale to when your stack is updated.\n* NodeAutoScalingGroupMaxSize: (Required) The maximum number of nodes to which your node Auto Scaling group can scale\nout. This value must be at least one node more than your desired capacity. This is so that you can perform a rolling\nupdate of our nodes without reducing your node count during the update.\n* NodeInstanceType: (Required) The instance type currently applied for the node stack. Alternatively, choose a\ndifferent instance type for your nodes. See additional notes on choosing an instance type in [Updating an existing\nself-managed node group](https://docs.aws.amazon.com/eks/latest/userguide/update-stack.html) document.\n* NodeImageIdSSMParam: (Required) The Amazon EC2 Systems Manager parameter of the AMI ID that you want to update to.\nSee additional notes on the latest Amazon EKS optimized AMI for Kubernetes version and/or how to use the Amazon EKS\noptimized accelerated AMI in\n[Updating an existing self-managed node group](https://docs.aws.amazon.com/eks/latest/userguide/update-stack.html)\ndocument.\n* NodeImageId: (Required) The ID for the AMI to use, if you wish to use your own custom AMI. This value overrides any\nvalue specified for 'NodeImageIdSSMParam'. If you want to use the 'NodeImageIdSSMParam' value, ensure that the value\nfor 'NodeImageId' is blank.\n  * Default: \"\"\n* DisableIMDSv1: (Required) A value that indicates whether IMDSv1 should be disabled. By default, each node supports\nthe Instance Metadata Service Version 1 (IMDSv1) and IMDSv2. However, you can disable IMDSv1. Select true if you\ndon't want any nodes or any pods scheduled in the node group to use IMDSv1.\n  * Default: false\n* WaitForStackUpdateProgress: (Required) A value that indicates the duration the automation should sleep for, to\nprovide time for launch template stack updates and rolling update to begin as necessary before assessing the status\nof the stack. Follows the [(ISO) 8601](https://www.iso.org/iso-8601-date-and-time-format.html) time format for\nduration. PT5M defaults to sleep 5 minutes.\n  * Default: PT5M\n\n## Output Parameters\n* UpdateStack.UpdateStackResponse: Response from the UpdateStack API call.\n",
  "assumeRole": "{{ AutomationAssumeRole }}",
  "parameters": {
    "AutomationAssumeRole": {
      "type": "AWS::IAM::Role::Arn",
      "description": "(Optional) The ARN of the role that allows Automation to perform the actions on your behalf. If no role is specified, Systems Manager Automation uses the permissions of the user that starts this runbook.",
      "default": ""
    },
    "StackName": {
      "type": "String",
      "description": "(Required) The name or the unique stack ID of the AWS CloudFormation stack used to create the self-managed Amazon Linux node group, find in the AWS CloudFormation Console (https://console.aws.amazon.com/cloudformation/).",
      "allowedPattern": "^[a-zA-Z][a-zA-Z0-9-]{0,254}$|^arn:aws[a-z0-9-]*:cloudformation:[a-z0-9-]+:\\d{12}:stack\\/[a-zA-Z][a-zA-Z0-9-]{0,254}\\/[a-zA-Z0-9-]{1,1017}$"
    },
    "NodeAutoScalingGroupDesiredCapacity": {
      "type": "Integer",
      "description": "(Required) The desired instance count currently applied for the node stack. Or, the new desired number of nodes to scale to when your stack is updated.",
      "allowedPattern": "^\\d+$"
    },
    "NodeAutoScalingGroupMaxSize": {
      "type": "Integer",
      "description": "(Required) The maximum number of nodes to which your node Auto Scaling group can scale out. This value must be at least one node more than your desired capacity. This is so that you can perform a rolling update of our nodes without reducing your node count during the update.",
      "allowedPattern": "^\\d+$"
    },
    "NodeInstanceType": {
      "type": "String",
      "description": "(Required) The instance type currently applied for the node stack. Alternatively, choose a different instance type for your nodes. See additional notes on choosing an instance type in the Updating an existing self-managed node group document (https://docs.aws.amazon.com/eks/latest/userguide/update-stack.html).",
      "allowedPattern": "^[a-z][a-z0-9-]+\\.[a-z0-9]{1,100}$"
    },
    "NodeImageIdSSMParam": {
      "type": "String",
      "description": "(Required) The Amazon EC2 Systems Manager parameter of the AMI ID that you want to update to. See additional notes on the latest Amazon EKS optimized AMI for Kubernetes version and/or how to use the Amazon EKS optimized accelerated AMI in the Updating an existing self-managed node group document (https://docs.aws.amazon.com/eks/latest/userguide/update-stack.html).",
      "allowedPattern": "^$|^[a-zA-Z0-9_\\.\\/-]{1,1011}$"
    },
    "NodeImageId": {
      "type": "String",
      "description": "(Required) The ID for the AMI to use, if you wish to use your own custom AMI. This value overrides any value specified for 'NodeImageIdSSMParam'. If you want to use the 'NodeImageIdSSMParam' value, ensure that the value for 'NodeImageId' is blank.",
      "default": "",
      "allowedPattern": "^$|^[a-zA-Z0-9_\\.\\/-]{1,1011}$"
    },
    "DisableIMDSv1": {
      "type": "Boolean",
      "default": false,
      "description": "(Required) A value that indicates whether IMDSv1 should be disabled. By default, each node supports the Instance Metadata Service Version 1 (IMDSv1) and IMDSv2. However, you can disable IMDSv1. Select true if you don't want any nodes or any pods scheduled in the node group to use IMDSv1."
    },
    "WaitForStackUpdateProgress": {
      "type": "String",
      "default": "PT5M",
      "description": "(Required) A value that indicates the duration the automation should sleep for, to provide time for launch template stack updates and rolling update to begin as necessary before assessing the status of the stack. Follows the (ISO) 8601 (https://www.iso.org/iso-8601-date-and-time-format.html) time format for duration. PT5M defaults to sleep 5 minutes.",
      "allowedPattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$"
    }
  },
  "outputs": [
    "UpdateStack.UpdateStackResponse"
  ],
  "mainSteps": [
    {
      "name": "UpdateStack",
      "action": "aws:executeScript",
      "description": "## UpdateStack\nUpdates an existing AWS CloudFormation self-managed Amazon Linux node stack.\n## Outputs\n* UpdateStackResponse: Response from the UpdateStack API call.\n",
      "timeoutSeconds": 600,
      "inputs": {
        "Runtime": "python3.8",
        "Handler": "handler",
        "InputPayload": {
          "StackName": "{{ StackName }}",
          "NodeAutoScalingGroupDesiredCapacity": "{{ NodeAutoScalingGroupDesiredCapacity }}",
          "NodeAutoScalingGroupMaxSize": "{{ NodeAutoScalingGroupMaxSize }}",
          "NodeInstanceType": "{{ NodeInstanceType }}",
          "NodeImageIdSSMParam": "{{ NodeImageIdSSMParam }}",
          "NodeImageId": "{{ NodeImageId }}",
          "DisableIMDSv1": "{{ DisableIMDSv1 }}"
        },
        "Script": "import boto3\n\n\ndef update_node_group_stack(event, cfn_client):\n    template_url = \"https://s3.us-west-2.amazonaws.com/amazon-eks/cloudformation/2022-12-23/amazon-eks-nodegroup.yaml\"\n    stack_parameters = [\n        {\n            \"ParameterKey\": \"NodeAutoScalingGroupDesiredCapacity\",\n            \"ParameterValue\": str(event[\"NodeAutoScalingGroupDesiredCapacity\"]),\n            \"UsePreviousValue\": False,\n        },\n        {\n            \"ParameterKey\": \"NodeAutoScalingGroupMaxSize\",\n            \"ParameterValue\": str(event[\"NodeAutoScalingGroupMaxSize\"]),\n            \"UsePreviousValue\": False,\n        },\n        {\n            \"ParameterKey\": \"NodeImageIdSSMParam\",\n            \"ParameterValue\": event[\"NodeImageIdSSMParam\"],\n            \"UsePreviousValue\": False,\n        },\n        {\n            \"ParameterKey\": \"DisableIMDSv1\",\n            \"ParameterValue\": str(event[\"DisableIMDSv1\"]).lower(),\n            \"UsePreviousValue\": False,\n        },\n        {\"ParameterKey\": \"NodeInstanceType\", \"ParameterValue\": event[\"NodeInstanceType\"], \"UsePreviousValue\": False},\n        {\"ParameterKey\": \"NodeImageId\", \"ParameterValue\": event[\"NodeImageId\"], \"UsePreviousValue\": False},\n        {\"ParameterKey\": \"ClusterName\", \"UsePreviousValue\": True},\n        {\"ParameterKey\": \"ClusterControlPlaneSecurityGroup\", \"UsePreviousValue\": True},\n        {\"ParameterKey\": \"NodeGroupName\", \"UsePreviousValue\": True},\n        {\"ParameterKey\": \"NodeAutoScalingGroupMinSize\", \"UsePreviousValue\": True},\n        {\"ParameterKey\": \"NodeVolumeSize\", \"UsePreviousValue\": True},\n        {\"ParameterKey\": \"NodeVolumeType\", \"UsePreviousValue\": True},\n        {\"ParameterKey\": \"KeyName\", \"UsePreviousValue\": True},\n        {\"ParameterKey\": \"BootstrapArguments\", \"UsePreviousValue\": True},\n        {\"ParameterKey\": \"VpcId\", \"UsePreviousValue\": True},\n        {\"ParameterKey\": \"Subnets\", \"UsePreviousValue\": True},\n    ]\n\n    return cfn_client.update_stack(\n        StackName=event[\"StackName\"],\n        TemplateURL=template_url,\n        UsePreviousTemplate=False,\n        Capabilities=[\"CAPABILITY_IAM\"],\n        Parameters=stack_parameters,\n        RollbackConfiguration={\"RollbackTriggers\": [], \"MonitoringTimeInMinutes\": 0},\n        DisableRollback=False,\n    )\n\n\ndef handler(event, context):\n    cfn_client = boto3.client(\"cloudformation\")\n    response = update_node_group_stack(event, cfn_client)\n    return {\"UpdateStackResponse\": response}"
      },
      "outputs": [
        {
          "Name": "UpdateStackResponse",
          "Selector": "$.Payload.UpdateStackResponse",
          "Type": "StringMap"
        }
      ]
    },
    {
      "name": "SleepStackUpdateToProgress",
      "action": "aws:sleep",
      "description": "## SleepStackUpdateToProgress\nDelays the automation to provide time for launch template stack updates and begin rolling update as necessary\nbefore assessing the status of the stack.\n",
      "inputs": {
        "Duration": "{{ WaitForStackUpdateProgress }}"
      }
    },
    {
      "name": "GetStackStatus",
      "action": "aws:executeAwsApi",
      "description": "## GetStackStatus\nGets the status of the stack.\n## Outputs\n* StackStatus: Current status of the stack.\n",
      "timeoutSeconds": 600,
      "inputs": {
        "Service": "cloudformation",
        "Api": "DescribeStacks",
        "StackName": "{{ StackName }}"
      },
      "outputs": [
        {
          "Name": "StackStatus",
          "Selector": "$.Stacks[0].StackStatus",
          "Type": "String"
        }
      ]
    },
    {
      "name": "ChooseVerificationStep",
      "action": "aws:branch",
      "description": "## ChooseVerificationStep\nEvaluates the `StackStatus` to determine verification step to jump to next.\n",
      "inputs": {
        "Choices": [
          {
            "NextStep": "VerifyStackUpdateInProgress",
            "Variable": "{{ GetStackStatus.StackStatus }}",
            "StringEquals": "UPDATE_IN_PROGRESS"
          }
        ],
        "Default": "VerifyStackUpdateComplete"
      }
    },
    {
      "name": "VerifyStackUpdateInProgress",
      "action": "aws:sleep",
      "description": "## VerifyStackUpdateInProgress\nActs as a no operation step. Sleeps for the smallest unit of time allowed. Used to represent `StackName` has a\n`StackStatus` of UPDATE_IN_PROGRESS.\n",
      "isEnd": true,
      "inputs": {
        "Duration": "PT1S"
      }
    },
    {
      "name": "VerifyStackUpdateComplete",
      "action": "aws:assertAwsResourceProperty",
      "description": "## VerifyStackUpdateComplete\nVerifies the `StackName` has a `StackStatus` of UPDATE_COMPLETE.\n",
      "timeoutSeconds": 600,
      "isEnd": true,
      "inputs": {
        "Service": "cloudformation",
        "Api": "DescribeStacks",
        "StackName": "{{ StackName }}",
        "PropertySelector": "Stacks[0].StackStatus",
        "DesiredValues": [
          "UPDATE_COMPLETE"
        ]
      }
    }
  ]
}
