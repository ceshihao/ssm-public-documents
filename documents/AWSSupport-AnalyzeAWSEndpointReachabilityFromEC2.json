{
  "description": "The **AWSSupport-AnalyzeAWSEndpointReachabilityFromEC2** runbook analyzes connectivity from an Amazon Elastic Compute Cloud (Amazon EC2) \ninstance or elastic network interface to an AWS service endpoint. IPv6 is not supported. The runbook uses the value you specify for the\n`ServiceEndpoint` parameter to anaylze connectivity to an endpoint. If an AWS PrivateLink endpoint can't be found in your VPC, the runbook\nuses a public IP address for the service in the current AWS Region. This automation uses Reachability Analyzer from Amazon Virtual Private\nCloud. For more information, see\n[What is Reachability Analyzer?](https://docs.aws.amazon.com/vpc/latest/reachability/what-is-reachability-analyzer.html), in Reachability\nAnalyzer.\n\nThis automation checks the following:\n\n- Checks whether your virtual private cloud (VPC) is configured to use the Amazon provided DNS server.\n- Checks whether an AWS PrivateLink endpoint exists in the VPC for the AWS service you specify. \nIf an endpoint is found, the automation verifies the `privateDns` attribute is turned on. \n- Checks if the AWS PrivateLink endpoint is using the default endpoint policy.\n\n### Considerations\n\n- You are charged per analysis run between a source and destination. For more information,\nsee [Amazon VPC Pricing](http://aws.amazon.com/vpc/pricing/).\n- During the automation, a network insights path and network insights analysis are created. \nIf the automation completes successfully, the runbook deletes these resources . \nIf the cleanup step fails, the network insights path is not deleted by the runbook and you will need to delete it manually. \nIf you don't delete the network insights path manually, it continues to count towards the quota for your AWS account. \nFor more information about quotas for Reachability Anayzer, \nsee [Quotas for Reachability Analyzer](https://docs.aws.amazon.com/vpc/latest/reachability/reachability-analyzer-limits.html).\n- OS level configurations such as the use of a proxy, local DNS resolver, or hosts file can affect connectivity even if the\nreachability analyzer returns PASS.\n- Review the evaluation of all checks performed by the analyzer. If any of the checks return with a status of FAIL,\nthat might affect connectivity even if the overall reachability check returns a status of PASS. ",
  "schemaVersion": "0.3",
  "assumeRole": "{{AutomationAssumeRole}}",
  "outputs": [
    "generateReport.EvalReport",
    "generateJsonOutput.Output"
  ],
  "parameters": {
    "Source": {
      "type": "String",
      "allowedPattern": "^(eni|i)-[a-z0-9]{8,17}$",
      "description": "(Required) The ID of the Amazon EC2 instance or the network interface from which you want to analyze reachability."
    },
    "ServiceEndpoint": {
      "type": "String",
      "description": "(Required) The hostname of the service endpoint that you want to analyze reachability to.",
      "allowedPattern": "^([a-zA-Z0-9._-]{1,50}).amazonaws.com([.cn)]{0,3})$"
    },
    "RetainVpcReachabilityAnalysis": {
      "type": "String",
      "description": "(Optional) Determines whether the network insight path and related analysis created are retained. By default, the resources used for analyze reachability are deleted after successful analysis.\nIf you choose to retain the analysis, the runbook does not delete the analysis and you can visualize it in the Amazon VPC console. A console link is available in the automation output. \n",
      "allowedValues": [
        "true",
        "false"
      ],
      "default": "false"
    },
    "AutomationAssumeRole": {
      "type": "AWS::IAM::Role::Arn",
      "default": "",
      "description": "(Optional) The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that allows Systems Manager Automation to perform the actions on your behalf. If no role is specified, Systems Manager Automation uses the permissions of the user that runs this runbook."
    }
  },
  "mainSteps": [
    {
      "name": "validateEndpoint",
      "description": "Validates the service endpoint by attempting to resolve the hostname.",
      "action": "aws:executeScript",
      "isCritical": true,
      "onFailure": "Abort",
      "inputs": {
        "Runtime": "python3.8",
        "Handler": "validate_endpoint.script_handler",
        "InputPayload": {
          "Endpoint": "{{ServiceEndpoint}}"
        },
        "Attachment": "analyze_aws_endpoint_reachability.zip"
      },
      "outputs": [
        {
          "Name": "Ip",
          "Selector": "$.Payload.endpointValidation.ip",
          "Type": "String"
        },
        {
          "Name": "Result",
          "Selector": "$.Payload.endpointValidation.result",
          "Type": "String"
        }
      ],
      "nextStep": "getResourceProperties"
    },
    {
      "name": "getResourceProperties",
      "description": "Gathers details about the VPC and subnet.",
      "action": "aws:executeScript",
      "isCritical": true,
      "onFailure": "Abort",
      "inputs": {
        "Runtime": "python3.8",
        "Handler": "get_resource_properties.script_handler",
        "InputPayload": {
          "Source": "{{Source}}"
        },
        "Attachment": "analyze_aws_endpoint_reachability.zip"
      },
      "outputs": [
        {
          "Name": "VpcId",
          "Selector": "$.Payload.resourceProperties.vpcId",
          "Type": "String"
        },
        {
          "Name": "SubnetId",
          "Selector": "$.Payload.resourceProperties.subnetId",
          "Type": "String"
        }
      ],
      "nextStep": "evalVpcDnsConfiguration"
    },
    {
      "name": "evalVpcDnsConfiguration",
      "description": "Evaluates the DNS configuration of the VPC",
      "action": "aws:executeScript",
      "isCritical": true,
      "onFailure": "Abort",
      "inputs": {
        "Runtime": "python3.8",
        "Handler": "eval_vpc_dns_configuration.script_handler",
        "InputPayload": {
          "VpcId": "{{getResourceProperties.VpcId}}"
        },
        "Attachment": "analyze_aws_endpoint_reachability.zip"
      },
      "outputs": [
        {
          "Name": "Result",
          "Selector": "$.Payload.VpcDnsConfigurationCheck.result",
          "Type": "String"
        },
        {
          "Name": "Code",
          "Selector": "$.Payload.VpcDnsConfigurationCheck.code",
          "Type": "String"
        },
        {
          "Name": "VpcDnsSupport",
          "Selector": "$.Payload.VpcDnsConfigurationCheck.VpcDnsSupport",
          "Type": "Boolean"
        }
      ],
      "nextStep": "evalVpcEndpointChecks"
    },
    {
      "name": "evalVpcEndpointChecks",
      "description": "Evaluates the VPC endpoint checks",
      "action": "aws:executeScript",
      "isCritical": true,
      "onFailure": "Abort",
      "inputs": {
        "Runtime": "python3.8",
        "Handler": "eval_vpc_endpoint_checks.script_handler",
        "InputPayload": {
          "VpcId": "{{getResourceProperties.VpcId}}",
          "Endpoint": "{{ServiceEndpoint}}",
          "DnsEvalCode": "{{evalVpcDnsConfiguration.Code}}"
        },
        "Attachment": "analyze_aws_endpoint_reachability.zip"
      },
      "outputs": [
        {
          "Name": "VPCeEvalResult",
          "Selector": "$.Payload.VpcEndPointCheck.result",
          "Type": "String"
        },
        {
          "Name": "UsableVPCe",
          "Selector": "$.Payload.VpcEndPointCheck.usableVpcEndpoint",
          "Type": "String"
        },
        {
          "Name": "UsableVPCeType",
          "Selector": "$.Payload.VpcEndPointCheck.vpcEndpointType",
          "Type": "String"
        },
        {
          "Name": "DetectedVPCe",
          "Selector": "$.Payload.VpcEndPointCheck.detectedVpcEndpoints",
          "Type": "StringList"
        },
        {
          "Name": "VPCePolicyEvalResult",
          "Selector": "$.Payload.VpceEndPointPolicyCheck.result"
        }
      ],
      "nextStep": "getRoute"
    },
    {
      "name": "getRoute",
      "description": "Locates an internet gateway to connect to the public service endpoint.",
      "action": "aws:executeScript",
      "isCritical": true,
      "onFailure": "Abort",
      "inputs": {
        "Runtime": "python3.8",
        "Handler": "get_route.script_handler",
        "InputPayload": {
          "VpcId": "{{getResourceProperties.VpcId}}",
          "SubnetId": "{{getResourceProperties.SubnetId}}",
          "EndpointPublicIp": "{{validateEndpoint.Ip}}"
        },
        "Attachment": "analyze_aws_endpoint_reachability.zip"
      },
      "outputs": [
        {
          "Name": "NextHop",
          "Selector": "$.Payload.route.nexthop",
          "Type": "String"
        },
        {
          "Name": "DestinationIp",
          "Selector": "$.Payload.route.ip",
          "Type": "String"
        }
      ],
      "nextStep": "getDestination"
    },
    {
      "name": "getDestination",
      "description": "Determines the destination to be used for reachability analysis.",
      "action": "aws:executeScript",
      "isCritical": true,
      "onFailure": "Abort",
      "inputs": {
        "Runtime": "python3.8",
        "Handler": "get_destination.script_handler",
        "InputPayload": {
          "UsableVPCe": "{{evalVpcEndpointChecks.UsableVPCe}}",
          "NextHop": "{{getRoute.NextHop}}",
          "VpceType": "{{evalVpcEndpointChecks.UsableVPCeType}}",
          "DnsEvalCode": "{{evalVpcDnsConfiguration.Code}}"
        },
        "Attachment": "analyze_aws_endpoint_reachability.zip"
      },
      "outputs": [
        {
          "Name": "Destination",
          "Selector": "$.Payload.Destination",
          "Type": "String"
        }
      ],
      "nextStep": "evalReachability"
    },
    {
      "name": "evalReachability",
      "description": "Analyzes the reachability from source to the endpoint using Reachability Analyzer and cleans up the resources if the analysis is successful.",
      "action": "aws:executeScript",
      "isCritical": true,
      "onFailure": "Abort",
      "inputs": {
        "Runtime": "python3.8",
        "Handler": "eval_reachability.script_handler",
        "InputPayload": {
          "Source": "{{Source}}",
          "Destination": "{{getDestination.Destination}}",
          "DestinationPort": 443,
          "DestinationIp": "{{getRoute.DestinationIp}}",
          "Protocol": "tcp",
          "Endpoint": "{{ServiceEndpoint}}",
          "RetainAnalysis": "{{RetainVpcReachabilityAnalysis}}"
        },
        "Attachment": "analyze_aws_endpoint_reachability.zip"
      },
      "outputs": [
        {
          "Name": "ReachabilityEvalResult",
          "Type": "String",
          "Selector": "$.Payload.ReachabilityCheck.result"
        },
        {
          "Name": "NetworkInsightsPathId",
          "Type": "String",
          "Selector": "$.Payload.ReachabilityCheck.insightsPathId"
        },
        {
          "Name": "Reachability",
          "Type": "String",
          "Selector": "$.Payload.ReachabilityCheck.reachability"
        }
      ],
      "nextStep": "generateReport"
    },
    {
      "name": "generateReport",
      "description": "Generates a reachability evaluation report.",
      "action": "aws:executeScript",
      "isCritical": true,
      "onFailure": "Abort",
      "inputs": {
        "Runtime": "python3.8",
        "Handler": "generate_report.script_handler",
        "InputPayload": {
          "Source": "{{Source}}",
          "ServiceEndpoint": "{{ServiceEndpoint}}",
          "VpcDnsConfigurationResult": "{{evalVpcDnsConfiguration.Result}}",
          "VpcEndpointEvalResult": "{{evalVpcEndpointChecks.VPCeEvalResult}}",
          "VpcEndpointPolicyEvalResult": "{{evalVpcEndpointChecks.VPCePolicyEvalResult}}",
          "ReachabilityEvalResult": "{{evalReachability.ReachabilityEvalResult}}"
        },
        "Attachment": "analyze_aws_endpoint_reachability.zip"
      },
      "outputs": [
        {
          "Name": "EvalReport",
          "Type": "String",
          "Selector": "$.Payload.result"
        }
      ],
      "nextStep": "generateJsonOutput"
    },
    {
      "name": "generateJsonOutput",
      "description": "Generates the output in JSON.",
      "action": "aws:executeScript",
      "isCritical": true,
      "onFailure": "Abort",
      "inputs": {
        "Runtime": "python3.8",
        "Handler": "generate_json_output.script_handler",
        "InputPayload": {
          "VpcDnsSupport": "{{evalVpcDnsConfiguration.VpcDnsSupport}}",
          "VpcDnsEvalCode": "{{evalVpcDnsConfiguration.Code}}",
          "DetectedVpcEndpoints": "{{evalVpcEndpointChecks.DetectedVPCe}}",
          "UsableVpcEndpoint": "{{evalVpcEndpointChecks.UsableVPCe}}",
          "Destination": "{{getDestination.Destination}}",
          "Reachability": "{{evalReachability.Reachability}}"
        },
        "Attachment": "analyze_aws_endpoint_reachability.zip"
      },
      "outputs": [
        {
          "Name": "Output",
          "Type": "String",
          "Selector": "$.Payload"
        }
      ],
      "isEnd": true
    }
  ],
  "files": {
    "analyze_aws_endpoint_reachability.zip": {
      "checksums": {
        "sha256": "fc0de89d0bfdf72d6533c646f0c03b495eed365c0e9768d9313574b96694959b"
      }
    }
  }
}
