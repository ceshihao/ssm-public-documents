{
  "description": "The **AWSSupport-AnalyzeAWSEndpointReachabilityFromEC2** runbook analyzes connectivity from an Amazon Elastic Compute Cloud (Amazon EC2) instance or an elastic network interface to an AWS service standard endpoint. If an AWS PrivateLink endpoint can't be found in your Amazon Virtual Private Cloud (Amazon VPC), the runbook uses the public IP address for the service in the current AWS Region. This automation uses Reachability Analyzer from Amazon VPC to perform connectivity testing between the source and the VPC endpoint service. For more information, see [What is Reachability Analyzer?](https://docs.aws.amazon.com/vpc/latest/reachability/what-is-reachability-analyzer.html).\n\nThis automation checks the following:\n\n> * Checks whether your virtual private cloud (VPC) is configured to use the Amazon provided DNS server.\n> * Checks whether an AWS PrivateLink endpoint exists in the VPC for the AWS service you specify. If an endpoint is found, the automation verifies the `privateDns` attribute is turned on.\n> * Checks if the AWS PrivateLink endpoint is using the default endpoint policy.\n\n### Considerations:\n\n> * You are charged per analysis run between a source and destination. For more information, see the **Network Analysis** section in [Amazon VPC Pricing](http://aws.amazon.com/vpc/pricing/).\n> * This automation creates a network insights path and network insights analysis in your account using Reachability Analyzer. If the automation completes successfully, the runbook deletes these resources. If the cleanup step fails, the network insights path is not deleted by the runbook and you will need to delete it manually. If you don't delete the network insights path manually, it continues to count towards the quota for your AWS account. For more information about quotas for Reachability Anayzer, see [Quotas for Reachability Analyzer](https://docs.aws.amazon.com/vpc/latest/reachability/reachability-analyzer-limits.html).\n> *  Operating system-level configurations such as the use of a firewall, proxy, local DNS resolver, or hosts file can affect connectivity even if the reachability analyzer returns `PASS`.\n> * Review the evaluation of all checks performed by the analyzer. If any of the checks return with a status of `FAIL`, that might affect connectivity even if the overall reachability check returns a status of `PASS`.\n> * IPv6 is not supported.",
  "schemaVersion": "0.3",
  "assumeRole": "{{ AutomationAssumeRole }}",
  "outputs": [
    "generateReport.EvalReport",
    "generateJsonOutput.Output"
  ],
  "parameters": {
    "Source": {
      "type": "String",
      "allowedPattern": "^(eni|i)-[a-z0-9]{8,17}$",
      "description": "(Required) The ID of the Amazon EC2 instance or the elastic network interface from which you want to analyze reachability."
    },
    "ServiceEndpoint": {
      "type": "String",
      "allowedPattern": "^[a-zA-Z0-9._-]{1,50}.amazonaws.com(.cn)?$",
      "description": "(Required) The service endpoint for the AWS service that you want to analyze reachability to. Examples: `rds.us-east-2.amazonaws.com`, `s3.us-west-1.amazonaws.com`. For information about the specific AWS services endpoints see [Service endpoints and quotas](https://docs.aws.amazon.com/general/latest/gr/aws-service-information.html)."
    },
    "RetainVpcReachabilityAnalysis": {
      "type": "String",
      "description": "(Optional) Determines whether the Reachability Analyzer network insight path and related analysis created are retained. By default, the resources used for analyze reachability are deleted after successful analysis. If you choose to retain the analysis, the runbook does not delete the analysis and you can visualize it in the Amazon VPC console. A console link is available in the automation output.",
      "allowedValues": [
        "true",
        "false"
      ],
      "default": "false"
    },
    "AutomationAssumeRole": {
      "type": "AWS::IAM::Role::Arn",
      "description": "(Optional) The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that allows Systems Manager Automation to perform the actions on your behalf. If no role is specified, Systems Manager Automation uses the permissions of the user that starts this runbook.",
      "default": ""
    }
  },
  "mainSteps": [
    {
      "name": "validateEndpoint",
      "description": "Validates the service endpoint by attempting to resolve the hostname.",
      "action": "aws:executeScript",
      "isCritical": true,
      "onFailure": "Abort",
      "inputs": {
        "InputPayload": {
          "Endpoint": "{{ServiceEndpoint}}"
        },
        "Attachment": "attachment.zip",
        "Handler": "validate_endpoint.script_handler",
        "Runtime": "python3.11"
      },
      "outputs": [
        {
          "Name": "Ip",
          "Selector": "$.Payload.endpointValidation.ip",
          "Type": "String"
        },
        {
          "Name": "Result",
          "Selector": "$.Payload.endpointValidation.result",
          "Type": "String"
        }
      ],
      "nextStep": "getResourceProperties"
    },
    {
      "name": "getResourceProperties",
      "description": "Gathers details about the source VPC and subnet.",
      "action": "aws:executeScript",
      "isCritical": true,
      "onFailure": "Abort",
      "inputs": {
        "InputPayload": {
          "Source": "{{Source}}"
        },
        "Attachment": "attachment.zip",
        "Handler": "get_resource_properties.script_handler",
        "Runtime": "python3.11"
      },
      "outputs": [
        {
          "Name": "VpcId",
          "Selector": "$.Payload.resourceProperties.vpcId",
          "Type": "String"
        },
        {
          "Name": "SubnetId",
          "Selector": "$.Payload.resourceProperties.subnetId",
          "Type": "String"
        }
      ],
      "nextStep": "evalVpcDnsConfiguration"
    },
    {
      "name": "evalVpcDnsConfiguration",
      "description": "Evaluates the DNS configuration of the VPC.",
      "action": "aws:executeScript",
      "isCritical": true,
      "onFailure": "Abort",
      "inputs": {
        "InputPayload": {
          "VpcId": "{{getResourceProperties.VpcId}}"
        },
        "Attachment": "attachment.zip",
        "Handler": "eval_vpc_dns_configuration.script_handler",
        "Runtime": "python3.11"
      },
      "outputs": [
        {
          "Name": "Result",
          "Selector": "$.Payload.VpcDnsConfigurationCheck.result",
          "Type": "String"
        },
        {
          "Name": "Code",
          "Selector": "$.Payload.VpcDnsConfigurationCheck.code",
          "Type": "String"
        },
        {
          "Name": "VpcDnsSupport",
          "Selector": "$.Payload.VpcDnsConfigurationCheck.VpcDnsSupport",
          "Type": "Boolean"
        }
      ],
      "nextStep": "evalVpcEndpointChecks"
    },
    {
      "name": "evalVpcEndpointChecks",
      "description": "Evaluates the VPC endpoint checks.",
      "action": "aws:executeScript",
      "isCritical": true,
      "onFailure": "Abort",
      "inputs": {
        "InputPayload": {
          "VpcId": "{{getResourceProperties.VpcId}}",
          "Endpoint": "{{ServiceEndpoint}}",
          "DnsEvalCode": "{{evalVpcDnsConfiguration.Code}}"
        },
        "Attachment": "attachment.zip",
        "Handler": "eval_vpc_endpoint_checks.script_handler",
        "Runtime": "python3.11"
      },
      "outputs": [
        {
          "Name": "VPCeEvalResult",
          "Selector": "$.Payload.VpcEndPointCheck.result",
          "Type": "String"
        },
        {
          "Name": "UsableVPCe",
          "Selector": "$.Payload.VpcEndPointCheck.usableVpcEndpoint",
          "Type": "String"
        },
        {
          "Name": "UsableVPCeType",
          "Selector": "$.Payload.VpcEndPointCheck.vpcEndpointType",
          "Type": "String"
        },
        {
          "Name": "DetectedVPCe",
          "Selector": "$.Payload.VpcEndPointCheck.detectedVpcEndpoints",
          "Type": "StringList"
        },
        {
          "Name": "VPCePolicyEvalResult",
          "Selector": "$.Payload.VpceEndPointPolicyCheck.result"
        }
      ],
      "nextStep": "getRoute"
    },
    {
      "name": "getRoute",
      "description": "Locates an internet gateway to connect to the public service endpoint.",
      "action": "aws:executeScript",
      "isCritical": true,
      "onFailure": "Abort",
      "inputs": {
        "InputPayload": {
          "VpcId": "{{getResourceProperties.VpcId}}",
          "SubnetId": "{{getResourceProperties.SubnetId}}",
          "EndpointPublicIp": "{{validateEndpoint.Ip}}"
        },
        "Attachment": "attachment.zip",
        "Handler": "get_route.script_handler",
        "Runtime": "python3.11"
      },
      "outputs": [
        {
          "Name": "NextHop",
          "Selector": "$.Payload.route.nexthop",
          "Type": "String"
        },
        {
          "Name": "DestinationIp",
          "Selector": "$.Payload.route.ip",
          "Type": "String"
        }
      ],
      "nextStep": "getDestination"
    },
    {
      "name": "getDestination",
      "description": "Determines the destination to be used for reachability analysis.",
      "action": "aws:executeScript",
      "isCritical": true,
      "onFailure": "Abort",
      "inputs": {
        "InputPayload": {
          "UsableVPCe": "{{evalVpcEndpointChecks.UsableVPCe}}",
          "NextHop": "{{getRoute.NextHop}}",
          "VpceType": "{{evalVpcEndpointChecks.UsableVPCeType}}",
          "DnsEvalCode": "{{evalVpcDnsConfiguration.Code}}"
        },
        "Attachment": "attachment.zip",
        "Handler": "get_destination.script_handler",
        "Runtime": "python3.11"
      },
      "outputs": [
        {
          "Name": "Destination",
          "Selector": "$.Payload.Destination",
          "Type": "String"
        }
      ],
      "nextStep": "evalReachability"
    },
    {
      "name": "evalReachability",
      "description": "Analyzes the reachability from source to the endpoint using Reachability Analyzer and cleans up the resources if the analysis is successful.",
      "action": "aws:executeScript",
      "isCritical": true,
      "onFailure": "Abort",
      "inputs": {
        "InputPayload": {
          "Source": "{{Source}}",
          "Destination": "{{getDestination.Destination}}",
          "DestinationPort": 443,
          "DestinationIp": "{{getRoute.DestinationIp}}",
          "Protocol": "tcp",
          "Endpoint": "{{ServiceEndpoint}}",
          "RetainAnalysis": "{{RetainVpcReachabilityAnalysis}}"
        },
        "Attachment": "attachment.zip",
        "Handler": "eval_reachability.script_handler",
        "Runtime": "python3.11"
      },
      "outputs": [
        {
          "Name": "ReachabilityEvalResult",
          "Type": "String",
          "Selector": "$.Payload.ReachabilityCheck.result"
        },
        {
          "Name": "NetworkInsightsPathId",
          "Type": "String",
          "Selector": "$.Payload.ReachabilityCheck.insightsPathId"
        },
        {
          "Name": "Reachability",
          "Type": "String",
          "Selector": "$.Payload.ReachabilityCheck.reachability"
        }
      ],
      "nextStep": "generateReport"
    },
    {
      "name": "generateReport",
      "description": "Generates a reachability evaluation report.",
      "action": "aws:executeScript",
      "isCritical": true,
      "onFailure": "Abort",
      "inputs": {
        "InputPayload": {
          "Source": "{{Source}}",
          "ServiceEndpoint": "{{ServiceEndpoint}}",
          "VpcDnsConfigurationResult": "{{evalVpcDnsConfiguration.Result}}",
          "VpcEndpointEvalResult": "{{evalVpcEndpointChecks.VPCeEvalResult}}",
          "VpcEndpointPolicyEvalResult": "{{evalVpcEndpointChecks.VPCePolicyEvalResult}}",
          "ReachabilityEvalResult": "{{evalReachability.ReachabilityEvalResult}}"
        },
        "Attachment": "attachment.zip",
        "Handler": "generate_report.script_handler",
        "Runtime": "python3.11"
      },
      "outputs": [
        {
          "Name": "EvalReport",
          "Type": "String",
          "Selector": "$.Payload.result"
        }
      ],
      "nextStep": "generateJsonOutput"
    },
    {
      "name": "generateJsonOutput",
      "description": "Generates the output in JSON format.",
      "action": "aws:executeScript",
      "isCritical": true,
      "onFailure": "Abort",
      "inputs": {
        "InputPayload": {
          "VpcDnsSupport": "{{evalVpcDnsConfiguration.VpcDnsSupport}}",
          "VpcDnsEvalCode": "{{evalVpcDnsConfiguration.Code}}",
          "DetectedVpcEndpoints": "{{evalVpcEndpointChecks.DetectedVPCe}}",
          "UsableVpcEndpoint": "{{evalVpcEndpointChecks.UsableVPCe}}",
          "Destination": "{{getDestination.Destination}}",
          "Reachability": "{{evalReachability.Reachability}}"
        },
        "Attachment": "attachment.zip",
        "Handler": "generate_json_output.script_handler",
        "Runtime": "python3.11"
      },
      "outputs": [
        {
          "Name": "Output",
          "Type": "String",
          "Selector": "$.Payload"
        }
      ],
      "isEnd": true
    }
  ],
  "files": {
    "attachment.zip": {
      "checksums": {
        "SHA256": "92c94e36438e9f034058250a3eb38a41be56369764f876315d7b0d179c7fdbb4"
      }
    }
  }
}
