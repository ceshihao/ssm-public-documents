{
  "description": "Creates an AMI from an existing EC2 instance, and then sets up an internet-facing load balancer with an autoscale group to launch EC2 instances from that AMI. The autoscale group will scale up and down based on the CPU levels of each EC2 instance within it",
  "schemaVersion": "0.3",
  "assumeRole": "{{AutomationAssumeRole}}",
  "outputs": [
    "CreateLBASGStack.StackId"
  ],
  "parameters": {
    "AutomationAssumeRole": {
      "type": "AWS::IAM::Role::Arn",
      "description": "(Optional) The ARN of the role that allows Automation to perform the actions on your behalf.",
      "default": ""
    },
    "InstanceType": {
      "type": "String",
      "description": "(Optional) Instance Type for instances launched in the autoscale group.",
      "allowedValues": [
        "t3.small",
        "t3.medium",
        "t3.large",
        "t3.xlarge",
        "t3.2xlarge",
        "m5.large",
        "m5.xlarge",
        "m5.2xlarge",
        "m5.4xlarge",
        "m5.8xlarge",
        "m5.16xlarge",
        "c5.large",
        "c5.xlarge",
        "c5.2xlarge",
        "c5.4xlarge",
        "c5.9xlarge",
        "c5.12xlarge",
        "r4.large",
        "r4.xlarge",
        "r4.2xlarge",
        "r4.4xlarge",
        "r4.8xlarge",
        "r4.16xlarge"
      ],
      "default": "t3.small"
    },
    "InstanceId": {
      "type": "AWS::EC2::Instance::Id",
      "description": "(Required) The EC2 instance ID from which the AMI for the autoscaled group will be created."
    },
    "NoReboot": {
      "type": "Boolean",
      "description": "(Optional) Do not reboot the instance before creating the image.",
      "default": false
    },
    "VpcId": {
      "type": "String",
      "description": "(Required) The VPC ID in which the load balancer will be created.",
      "allowedPattern": "^(vpc-)([0-9a-f]{8}|[0-9a-f]{17})$"
    },
    "SubnetA": {
      "type": "String",
      "description": "(Required) The Subnet ID within Availability Zone A in which the autoscaled group will launch EC2 instances. The subnet must be in the VPC provided above.",
      "allowedPattern": "^(subnet-)([0-9a-f]{8}|[0-9a-f]{17})$"
    },
    "SubnetB": {
      "type": "String",
      "description": "(Required) The Subnet ID within Availability Zone B in which the autoscaled group will launch EC2 instances. The subnet must be in the VPC provided above.",
      "allowedPattern": "^(subnet-)([0-9a-f]{8}|[0-9a-f]{17})$"
    },
    "KeyName": {
      "type": "String",
      "description": "(Required) The key pair KeyName you want to use for the autoscaled EC2 instances. Must be created prior to running this automation.",
      "allowedPattern": "^[A-Za-z0-9_-]{1,255}$"
    },
    "InstanceProfileArn": {
      "type": "String",
      "description": "(Optional) The ARN of the Instance Profile you want to use for the autoscaled EC2 instances.",
      "default": "",
      "allowedPattern": "^(arn:aws:iam::\\d{12}:instance-profile[\\/|:][\\w+=,.@-]{1,64})?$"
    },
    "DesiredCapacity": {
      "type": "Integer",
      "description": "(Optional) Represents the initial capacity of the Auto Scaling group at the time of creation.",
      "default": 1,
      "allowedPattern": "^([1-9]|[1-9][0-9]|100)$"
    },
    "MinInstances": {
      "type": "Integer",
      "description": "(Optional) Represents the minimum group size. The Auto Scaling group cannot decrease its desired capacity lower than the minimum size limit.",
      "default": 1,
      "allowedPattern": "^([1-9]|[1-9][0-9]|100)$"
    },
    "MaxInstances": {
      "type": "Integer",
      "description": "(Optional) Represents the maximum group size. The Auto Scaling group cannot increase its desired capacity higher than the maximum size limit.",
      "default": 1,
      "allowedPattern": "^([1-9]|[1-9][0-9]|100)$"
    },
    "Port": {
      "type": "Integer",
      "description": "(Optional) Port number to use for your web application.",
      "default": 443,
      "allowedPattern": "^([0-9]{1,4}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])$"
    },
    "HealthCheckPath": {
      "type": "String",
      "description": "(Required) The destination for health checks on the autoscaled EC2 instances.",
      "allowedPattern": "^\\/[A-Za-z0-9-_\\/&]{1,1023}$"
    },
    "CreateStackTimeoutMinutes": {
      "type": "Integer",
      "description": "(Optional) CloudFormation stack creation timeout in minutes.",
      "default": 60,
      "allowedPattern": "^([1-9]|[1-5][0-9]|60)$"
    },
    "Protocol": {
      "type": "String",
      "description": "(Optional) The protocol to use for your web application.",
      "default": "HTTPS",
      "allowedValues": [
        "HTTPS",
        "HTTP"
      ]
    },
    "ELBSecurityPolicy": {
      "type": "String",
      "default": "ELBSecurityPolicy-TLS13-1-2-2021-06",
      "description": "(Optional) The SSL security policy for the load balancer listener.",
      "allowedValues": [
        "ELBSecurityPolicy-TLS13-1-2-2021-06",
        "ELBSecurityPolicy-TLS13-1-2-Res-2021-06",
        "ELBSecurityPolicy-TLS13-1-2-Ext1-2021-06",
        "ELBSecurityPolicy-TLS13-1-2-Ext2-2021-06",
        "ELBSecurityPolicy-TLS13-1-1-2021-06",
        "ELBSecurityPolicy-TLS13-1-0-2021-06",
        "ELBSecurityPolicy-TLS13-1-3-2021-06",
        "ELBSecurityPolicy-FS-1-2-Res-2020-10",
        "ELBSecurityPolicy-FS-1-2-Res-2019-08",
        "ELBSecurityPolicy-FS-1-2-2019-08",
        "ELBSecurityPolicy-FS-1-1-2019-08",
        "ELBSecurityPolicy-FS-2018-06",
        "ELBSecurityPolicy-TLS-1-2-Ext-2018-06",
        "ELBSecurityPolicy-TLS-1-2-2017-01",
        "ELBSecurityPolicy-TLS-1-1-2017-01",
        "ELBSecurityPolicy-2016-08",
        "ELBSecurityPolicy-TLS-1-0-2015-04",
        "ELBSecurityPolicy-2015-05"
      ]
    },
    "CertificateArn": {
      "type": "String",
      "description": "(Optional) The ARN of the ACM certificate to use for HTTPS protocol. Must be created prior to running this automation.",
      "allowedPattern": "^(arn:aws:acm:[a-z0-9-]+:\\d{12}:certificate\\/[a-f0-9-]{36})?$",
      "default": ""
    }
  },
  "mainSteps": [
    {
      "name": "CreateAMI",
      "action": "aws:createImage",
      "inputs": {
        "InstanceId": "{{InstanceId}}",
        "ImageName": "auto-scaled-instance-ami-{{InstanceId}}-{{global:DATE_TIME}}"
      }
    },
    {
      "name": "CreateLBASGStack",
      "action": "aws:createStack",
      "inputs": {
        "StackName": "CreateLBASG-{{InstanceId}}",
        "Parameters": [
          {
            "ParameterKey": "pInstanceType",
            "ParameterValue": "{{InstanceType}}"
          },
          {
            "ParameterKey": "pDesiredCapacity",
            "ParameterValue": "{{DesiredCapacity}}"
          },
          {
            "ParameterKey": "pMinInstances",
            "ParameterValue": "{{MinInstances}}"
          },
          {
            "ParameterKey": "pMaxInstances",
            "ParameterValue": "{{MaxInstances}}"
          },
          {
            "ParameterKey": "pAmiId",
            "ParameterValue": "{{CreateAMI.ImageId}}"
          },
          {
            "ParameterKey": "pInstanceProfileArn",
            "ParameterValue": "{{InstanceProfileArn}}"
          },
          {
            "ParameterKey": "pSubnetA",
            "ParameterValue": "{{SubnetA}}"
          },
          {
            "ParameterKey": "pSubnetB",
            "ParameterValue": "{{SubnetB}}"
          },
          {
            "ParameterKey": "pVPCID",
            "ParameterValue": "{{VpcId}}"
          },
          {
            "ParameterKey": "pPort",
            "ParameterValue": "{{Port}}"
          },
          {
            "ParameterKey": "pHealthCheckPath",
            "ParameterValue": "{{HealthCheckPath}}"
          },
          {
            "ParameterKey": "pKeyName",
            "ParameterValue": "{{KeyName}}"
          },
          {
            "ParameterKey": "pProtocol",
            "ParameterValue": "{{Protocol}}"
          },
          {
            "ParameterKey": "pCertificateArn",
            "ParameterValue": "{{CertificateArn}}"
          },
          {
            "ParameterKey": "pELBSecurityPolicy",
            "ParameterValue": "{{ELBSecurityPolicy}}"
          }
        ],
        "TemplateBody": "AWSTemplateFormatVersion: 2010-09-09\nDescription: Create an internet-facing LoadBalancer, Target Group and AutoScaling Group\n\nParameters:\n  pInstanceType:\n    Description: Instance Type for instances launched in the autoscale group.\n    Type: String\n  pDesiredCapacity:\n    Description: Represents the initial capacity of the Auto Scaling group at the time of creation.\n    Type: Number\n  pMinInstances:\n    Description: Represents the minimum group size. The Auto Scaling group cannot decrease its desired capacity lower than the minimum size limit.\n    Type: Number\n  pMaxInstances:\n    Description: Represents the maximum group size. The Auto Scaling group cannot increase its desired capacity higher than the maximum size limit.\n    Type: Number\n  pAmiId:\n    Description: AMI ID to use to launch the instances.\n    Type: AWS::EC2::Image::Id\n  pInstanceProfileArn:\n    Description: The ARN of the Instance Profile you want to use for the autoscaled EC2 instances.\n    Type: String\n  pSubnetA:\n    Description: The Subnet ID within Availability Zone A in which the autoscaled group will launch EC2 instances. The subnet must be in the VPC provided above.\n    Type: AWS::EC2::Subnet::Id\n  pSubnetB:\n    Description: The Subnet ID within Availability Zone B in which the autoscaled group will launch EC2 instances. The subnet must be in the VPC provided above.\n    Type: AWS::EC2::Subnet::Id  \n  pVPCID:\n    Description: The VPC ID in which the load balancer will be created.\n    Type: AWS::EC2::VPC::Id\n  pPort:\n    Description: Port number to use for your web application.\n    Type: Number\n  pHealthCheckPath:\n    Description: The destination for health checks on the autoscaled EC2 instances.\n    Type: String\n  pKeyName:\n    Description: The key pair KeyName you want to use for the autoscaled EC2 instances. Must be created prior to running this automation.\n    Type: AWS::EC2::KeyPair::KeyName\n  pProtocol:\n    Description: The protocol to use for your web application.\n    Type: String\n  pCertificateArn:\n    Description: The ARN of the ACM certificate to use for HTTPS protocol. Must be created prior to running this automation.\n    Type: String\n  pELBSecurityPolicy:\n    Description: The SSL security policy for the load balancer listener.\n    Type: String\n\nConditions: \n  IsHttpsProtocol: !Equals [!Ref pProtocol, HTTPS]\n  IsInstanceProfileArnProvided: !Not [!Equals [!Ref pInstanceProfileArn, '']]\n\nResources:\n  rLoadBalancerSecurityGroup:\n    Type: AWS::EC2::SecurityGroup\n    Properties:\n      GroupDescription: Security Group A\n      VpcId: !Ref pVPCID\n      SecurityGroupIngress:\n        - IpProtocol: tcp\n          FromPort: !Ref pPort\n          ToPort: !Ref pPort\n          CidrIp: 0.0.0.0/0\n\n  rInstanceSecurityGroup:\n    Type: AWS::EC2::SecurityGroup\n    Properties:\n      GroupDescription: Security Group B\n      VpcId: !Ref pVPCID\n      SecurityGroupIngress:\n        - IpProtocol: tcp\n          FromPort: !Ref pPort\n          ToPort: !Ref pPort\n          SourceSecurityGroupId: !Ref rLoadBalancerSecurityGroup\n\n  rLoadBalancer:\n    Type: AWS::ElasticLoadBalancingV2::LoadBalancer\n    Properties:\n      Subnets:\n        - !Ref pSubnetA\n        - !Ref pSubnetB\n      Scheme: internet-facing\n      Type: application\n      SecurityGroups:\n        - !Ref rLoadBalancerSecurityGroup\n\n  rTargetGroup:\n    Type: AWS::ElasticLoadBalancingV2::TargetGroup\n    DependsOn: rLoadBalancer\n    Properties:\n      VpcId: !Ref pVPCID\n      Port: !Ref pPort\n      Protocol: !Ref pProtocol\n      Matcher:\n        HttpCode: 200-299\n      HealthCheckIntervalSeconds: 10\n      HealthCheckPath: !Ref pHealthCheckPath\n      HealthCheckProtocol: !Ref pProtocol\n      HealthCheckTimeoutSeconds: 5\n      HealthyThresholdCount: 2\n      TargetGroupAttributes:\n        - Key: deregistration_delay.timeout_seconds\n          Value: 30\n\n  rLoadBalancerListener:\n    Type: AWS::ElasticLoadBalancingV2::Listener\n    Properties:\n      LoadBalancerArn: !Ref rLoadBalancer\n      Port: !Ref pPort\n      Protocol: !Ref pProtocol\n      DefaultActions:\n        - Type: forward\n          TargetGroupArn: !Ref rTargetGroup\n      Certificates: \n        !If\n        - IsHttpsProtocol\n        - \n          - CertificateArn: !Ref pCertificateArn\n        - !Ref AWS::NoValue\n      SslPolicy: !If [IsHttpsProtocol, !Ref pELBSecurityPolicy, !Ref AWS::NoValue] \n\n  rListenerRule:\n    Type: AWS::ElasticLoadBalancingV2::ListenerRule\n    Properties:\n      ListenerArn: !Ref rLoadBalancerListener\n      Priority: 1\n      Conditions:\n        - Field: path-pattern\n          Values:\n            - /*\n      Actions:\n        - TargetGroupArn: !Ref rTargetGroup\n          Type: forward\n\n  rAutoScalingGroup:\n    Type: AWS::AutoScaling::AutoScalingGroup\n    CreationPolicy:\n      AutoScalingCreationPolicy:\n        MinSuccessfulInstancesPercent: 100\n      ResourceSignal:\n        Count: 0\n    Properties:\n      LaunchTemplate: \n        LaunchTemplateId: !Ref rLaunchTemplate\n        Version: 1\n      DesiredCapacity: !Ref pDesiredCapacity\n      MinSize: !Ref pMinInstances\n      MaxSize: !Ref pMaxInstances\n      HealthCheckType: ELB\n      HealthCheckGracePeriod: 300\n      TargetGroupARNs:\n        - !Ref rTargetGroup\n      VPCZoneIdentifier:\n        - !Ref pSubnetA\n        - !Ref pSubnetB\n\n  rLaunchTemplate:\n    Type: AWS::EC2::LaunchTemplate\n    Properties:\n      LaunchTemplateData:\n        SecurityGroupIds:\n          - !Ref rInstanceSecurityGroup\n        InstanceType: !Ref pInstanceType\n        ImageId: !Ref pAmiId\n        IamInstanceProfile: \n          Arn: !If [IsInstanceProfileArnProvided, !Ref pInstanceProfileArn, !Ref AWS::NoValue]\n        KeyName: !Ref pKeyName\n  rCPUScalingPolicy:\n    Type: AWS::AutoScaling::ScalingPolicy\n    Properties:\n      AutoScalingGroupName: !Ref rAutoScalingGroup\n      EstimatedInstanceWarmup: 300\n      PolicyType: TargetTrackingScaling\n      TargetTrackingConfiguration:\n        PredefinedMetricSpecification:\n          PredefinedMetricType: ASGAverageCPUUtilization\n        TargetValue: 70",
        "TimeoutInMinutes": "{{CreateStackTimeoutMinutes}}",
        "OnFailure": "DELETE"
      },
      "onFailure": "step:DeleteAMI",
      "isEnd": false,
      "nextStep": "End"
    },
    {
      "name": "DeleteAMI",
      "action": "aws:deleteImage",
      "inputs": {
        "ImageId": "{{CreateAMI.ImageId}}"
      }
    },
    {
      "name": "End",
      "action": "aws:sleep",
      "inputs": {
        "Duration": "PT0S"
      }
    }
  ]
}
