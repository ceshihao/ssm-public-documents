{
  "description": "### Document name - AWSFIS-Run-IO-Stress\n\n## What does this document do?\nIt runs IO stress on an instance via stress-ng tool. If stress-ng is not already installed on the instance, this SSM document will install it, unless InstallDependencies parameter is set to False.\nThis SSM document supports Amazon Linux and Ubuntu operating systems only.\n\n## Dependencies installed by this SSM Document\n* stress-ng\nNote: This SSM document does not uninstall dependencies once installed. If you don't want this SSM document to install any dependencies, set InstallDependencies to False and bake the dependencies into your EC2 instance. For example, by using image-builder (https://aws.amazon.com/image-builder/).\n\n## Input Parameters\n* DurationSeconds: (Required) The duration - in seconds - of the IO stress.\n* Workers: Specify the number of mixed IO stressors to use (default 1)\n* Percent: Specify the percentage of the available file system space used by each stressor. (default 80)\n* InstallDependencies: If set to True, Systems Manager installs the required dependencies on the target instances. (default True)\n\n## Output Parameters\nNone.",
  "schemaVersion": "2.2",
  "parameters": {
    "DurationSeconds": {
      "type": "String",
      "description": "(Required) The duration - in seconds - of the IO stress.",
      "allowedPattern": "^[0-9]+$"
    },
    "Workers": {
      "type": "String",
      "description": "Specify the number of mixed IO stressors to use (default 1)",
      "default": "1",
      "allowedPattern": "^[0-9]+$"
    },
    "Percent": {
      "type": "String",
      "description": "Specify the percentage of the available file system space used by each stressor. (default 80)",
      "default": "80",
      "allowedPattern": "^([1-9][0-9]?|100)$"
    },
    "InstallDependencies": {
      "type": "String",
      "description": "If set to True, Systems Manager installs the required dependencies on the target instances (default: True)",
      "default": "True",
      "allowedValues": [
        "True",
        "False"
      ]
    }
  },
  "mainSteps": [
    {
      "action": "aws:runShellScript",
      "name": "InstallDependencies",
      "precondition": {
        "StringEquals": [
          "platformType",
          "Linux"
        ]
      },
      "description": "## Parameter: InstallDependencies\nIf set to True, this step installs the required dependecy via operating system's repository. It supports both\nDebian (apt) and CentOS (yum) based package managers.\n",
      "inputs": {
        "onFailure": "exit",
        "runCommand": [
          "#!/bin/bash\n\nif [[ \"$( which stress-ng 2>/dev/null )\" ]] ; then echo Dependency is already installed. ; exit ; fi\nif  [[ \"{{ InstallDependencies }}\" == True ]] ; then\n  echo \"Installing required dependencies\"\n  if [ -f  \"/etc/system-release\" ] ; then\n    if cat /etc/system-release | grep -i 'Amazon Linux' ; then\n      # Use amazon-linux-extras if available (Amazon Linux 2). Don't need it otherwise (Amazon Linux 1)\n      which amazon-linux-extras 2>/dev/null 1>&2 && sudo amazon-linux-extras install testing\n      sudo yum -y install stress-ng\n    else\n      echo \"There was a problem installing dependencies.\"\n      exit 1\n    fi\n  elif cat /etc/issue | grep -i Ubuntu ; then\n    sudo apt-get update -y\n    sudo DEBIAN_FRONTEND=noninteractive sudo apt-get install -y stress-ng\n  else\n    echo \"There was a problem installing dependencies.\"\n    exit 1\n  fi\nelse\n  echo \"Dependencies are not installed - Please set InstallDependencies to True.\"\n  exit 1\nfi\n"
        ]
      }
    },
    {
      "action": "aws:runShellScript",
      "name": "ExecuteStressNg",
      "precondition": {
        "StringEquals": [
          "platformType",
          "Linux"
        ]
      },
      "description": "## Parameters: Duration, Workers, and Percent\nThis step will perform an IO stress for the specified Duration time in seconds.\n",
      "inputs": {
        "maxAttempts": 1,
        "runCommand": [
          "#!/bin/bash\n\n########################\n# Fault-specific logic #\n########################\n\nif [ {{ DurationSeconds }} -lt 1 ] || [ {{ DurationSeconds }} -gt 43200 ] ; then echo DurationSeconds parameter value must be between 1 and 43200 && exit 1; fi\nif [ {{ Percent }} -lt 1 ] || [ {{ Percent }} -gt 100 ] ; then echo Percent parameter value must be between 1 and 100 && exit 1; fi\npgrep stress-ng && echo Another stress-ng command is running, exiting... && exit 1\necho Initiating IO stress for {{ DurationSeconds }} seconds...\nstress-ng --iomix {{ Workers }} --iomix-bytes {{ Percent }}% -t {{ DurationSeconds }}s\necho Finished IO stress.\n"
        ]
      }
    }
  ]
}
