{
  "schemaVersion": "0.3",
  "description": "### Document name - AWS-UpdateCLBDesyncMitigationMode\n\n## What does this document do?\nThe AWS-UpdateCLBDesyncMitigationMode runbook will update the desync mitigation mode on a Classic Load Balancer (CLB)\nto the specified mitigation mode using\n[ModifyLoadBalancerAttributes](https://docs.aws.amazon.com/elasticloadbalancing/2012-06-01/APIReference/API_ModifyLoadBalancerAttributes.html)\nAPI. The desync mitigation mode determines how the load balancer handles requests that might pose a\nsecurity risk to your application.\n\n## Input Parameters\n* AutomationAssumeRole: (Optional) The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role\n  that allows Systems Manager Automation to perform the actions on your behalf. If no role is specified,\n  Systems Manager Automation uses the permissions of the user that starts this runbook.\n  * Default: \"\"\n* LoadBalancerName: (Required) The name of the load balancer that you want to modify the HTTP Desync Mitigation Mode.\n* DesyncMitigationMode: (Required) The mode that the Classic Load Balancer will operate in.\n\n## Output Parameters\n* VerifyLoadBalancerDesyncMitigationMode.ModificationResult: Result of Desync Mitigation Mode modification.\n",
  "outputs": [
    "VerifyLoadBalancerDesyncMitigationMode.ModificationResult"
  ],
  "assumeRole": "{{ AutomationAssumeRole }}",
  "parameters": {
    "AutomationAssumeRole": {
      "type": "AWS::IAM::Role::Arn",
      "description": "(Optional) The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that\nallows Systems Manager Automation to perform the actions on your behalf. If no role is specified,\nSystems Manager Automation uses the permissions of the user that starts this runbook.\n",
      "default": ""
    },
    "LoadBalancerName": {
      "type": "String",
      "description": "(Required) The name of the load balancer that you want to modify the HTTP Desync Mitigation Mode.",
      "allowedPattern": "^[a-zA-Z0-9][a-zA-Z0-9-]{0,1010}$"
    },
    "DesyncMitigationMode": {
      "type": "String",
      "description": "(Required) The mode that the Classic Load Balancer will operate in.  For information about the desync\nmitigation modes, see\n[Desync mitigation modes](https://docs.aws.amazon.com/elasticloadbalancing/latest/application/application-load-balancers.html#desync-mitigation-mode)\ndocumentation.\n",
      "allowedValues": [
        "defensive",
        "strictest",
        "monitor"
      ]
    }
  },
  "mainSteps": [
    {
      "name": "ModifyLoadBalancerDesyncMode",
      "description": "## ModifyLoadBalancerDesyncMode\nUpdate Classic Load Balancer Attribute to input parameter DesyncMitigationMode.\n",
      "action": "aws:executeAwsApi",
      "inputs": {
        "Service": "elb",
        "Api": "ModifyLoadBalancerAttributes",
        "LoadBalancerName": "{{ LoadBalancerName }}",
        "LoadBalancerAttributes": {
          "AdditionalAttributes": [
            {
              "Key": "elb.http.desyncmitigationmode",
              "Value": "{{ DesyncMitigationMode }}"
            }
          ]
        }
      }
    },
    {
      "name": "VerifyLoadBalancerDesyncMitigationMode",
      "description": "## VerifyLoadBalancerDesyncMitigationMode\nVerify the modified Load Balancer attribute matches the input parameter `DesyncMitigationMode`.\n## Outputs\nModificationResult - Result of Desync Mitigation Mode modification.\n",
      "action": "aws:executeScript",
      "timeoutSeconds": 600,
      "inputs": {
        "Runtime": "python3.8",
        "Handler": "handler",
        "InputPayload": {
          "LoadBalancerName": "{{ LoadBalancerName }}",
          "DesyncMitigationMode": "{{ DesyncMitigationMode }}"
        },
        "Script": "import boto3\n\ndef get_clb_attributes(load_balancer_name):\n  elb_client = boto3.client(\"elb\")\n  response = elb_client.describe_load_balancer_attributes(\n    LoadBalancerName=load_balancer_name\n  )\n  return response[\"LoadBalancerAttributes\"].get(\"AdditionalAttributes\", [])\n\ndef handler(event, context):\n  load_balancer_name = event[\"LoadBalancerName\"]\n  desync_mitigation_mode = event[\"DesyncMitigationMode\"]\n\n  clb_attributes = get_clb_attributes(load_balancer_name)\n\n  attribute_modified = False\n  for attribute in clb_attributes:\n    mode_string = \"elb.http.desyncmitigationmode\"\n    if attribute[\"Key\"] == mode_string and attribute[\"Value\"] == desync_mitigation_mode:\n      attribute_modified = True\n      break\n\n  if attribute_modified == False:\n    raise ValueError(f\"VERIFICATION FAILED. DESYNC MITIGATION MODE MODIFICATION TO {desync_mitigation_mode} WAS UNSUCCESSFUL.\")\n\n  return {\"ModificationResult\": f\"Verification of Desync Mitigation Mode was successfully modified to be {desync_mitigation_mode}.\"}\n"
      },
      "outputs": [
        {
          "Name": "ModificationResult",
          "Selector": "$.Payload.ModificationResult",
          "Type": "String"
        }
      ]
    }
  ]
}
