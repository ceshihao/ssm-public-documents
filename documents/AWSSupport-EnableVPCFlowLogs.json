{
  "description": "The **AWSSupport-EnableVPCFlowLogs** runbook allows you to automate the creation of Amazon Virtual Private Cloud (Amazon VPC) flow logs for the following resource types: subnets, elastic network interfaces, VPCs, transit gateways, and/or transit gateway attachments in your AWS account. The runbook allows you to specify the location where the flow log data is published: Amazon CloudWatch Logs or Amazon Simple Storage Service (Amazon S3). After you've created a flow log, you can retrieve and view its data in the chosen destination.\nFor more information, see [Logging IP traffic using VPC Flow Logs](https://docs.aws.amazon.com/vpc/latest/userguide/flow-logs.html).\n\n### Important:\n> * If you create a flow log for a subnet or VPC, every network interface in that subnet or VPC is monitored.\n> * The creation of VPC Flow Logs will add extra costs for storing the logs both in Amazon S3 and/or Amazon CloudWatch Logs. For more information see [VPC Flow Logs pricing](https://docs.aws.amazon.com/vpc/latest/userguide/flow-logs.html#flow-logs-pricing).\n\n### Important:\n> * If you set `LogDestinationType` to `cloud-watch-logs` and you don't specify a value for `LogGroupName` or `LogDestinationArn`, the runbook tries to create a new Amazon CloudWatch Log Group with the name `AWSSupport-EnableVPCFlowLogs-<automation:EXECUTION_ID>`. When the automation creates the new Log Group, it sets the retention of the log data to 14 days.\n> * If you set `LogDestinationType` to `cloud-watch-logs` and you don't specify a value for `DeliverLogsPermissionArn`, the runbook tries to create a new AWS Identity and Access Management (IAM) role with the name `AWSSupportCreateFlowLogsRole` with permissions to allow the flow logs service (`vpc-flow-logs.amazonaws.com`) to assume the new role (`sts:AssumeRole`).\n> * Additional permissions must be granted to AWS to enable the logs to be sent. AWS can automatically create those permissions when the logs are set up, or you can create them yourself first before you set up the logging. For more information see [Enabling logging from AWS services](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/AWS-logs-and-resource-policy.html).",
  "schemaVersion": "0.3",
  "assumeRole": "{{ AutomationAssumeRole }}",
  "outputs": [
    "CreateFlowLogs.Message",
    "CreateFlowLogs.FlowLogIds",
    "CreateFlowLogs.IamRoleCreated",
    "CreateFlowLogs.LogGroupCreated"
  ],
  "parameters": {
    "AutomationAssumeRole": {
      "type": "AWS::IAM::Role::Arn",
      "description": "(Optional) The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that allows Systems Manager Automation to perform the actions on your behalf. If no role is specified, Systems Manager Automation uses the permissions of the user that starts this runbook.",
      "default": ""
    },
    "ResourceIds": {
      "type": "StringList",
      "allowedPattern": "(vpc|eni|subnet|tgw|tgw-attach)-[0-9a-f]{8,17}",
      "description": "(Required) Comma separated list with of the ID(s) of the supported resources: subnets, elastic network interfaces, VPCs, transit gateways, and/or transit gateway attachments in your AWS account for which you want to create a flow log (e.g.: `subnet-01234567890abcdef`). The maximum number of resources that can be added is `25`.",
      "minItems": 1,
      "maxItems": 25
    },
    "TrafficType": {
      "type": "String",
      "default": "ALL",
      "description": "(Optional) The type of traffic to log. You can log traffic that the resource `ACCEPT`, `REJECT`, or `ALL` traffic. Default is `ALL`.",
      "allowedValues": [
        "ACCEPT",
        "REJECT",
        "ALL"
      ]
    },
    "LogDestinationType": {
      "type": "String",
      "default": "cloud-watch-logs",
      "description": "(Optional) Specifies the destination type to which the flow log data is published. Flow log data can be published to Amazon CloudWatch Logs or Amazon S3. To publish flow log data to Amazon CloudWatch Logs, specify `cloud-watch-logs`. To publish flow log data to Amazon S3, specify `s3`. Default is `cloud-watch-logs`. **Important**: When selecting `s3`, ensure that the bucket follows Amazon S3 security best practices, and ensure that you follow data privacy laws and regulations for your company and region. For more information: https://docs.aws.amazon.com/AmazonS3/latest/userguide/security-best-practices.html.",
      "allowedValues": [
        "cloud-watch-logs",
        "s3"
      ]
    },
    "DeliverLogsPermissionArn": {
      "type": "AWS::IAM::Role::Arn",
      "default": "",
      "description": "(Conditional) The ARN for the IAM role that allows `vpc-flow-logs` to publish flow logs to an Amazon CloudWatch Logs log group in your account. If you specify `LogDestinationType` as `s3`, the parameters `DeliverLogsPermissionArn` or `LogGroupName` are omitted. See [IAM role for publishing flow logs to CloudWatch Logs](https://docs.aws.amazon.com/vpc/latest/userguide/flow-logs-cwl.html#flow-logs-iam-role)."
    },
    "LogDestinationArn": {
      "type": "String",
      "default": "",
      "description": "(Optional) Specifies the destination to which the flow log data is published. Flow log data can be published to an Amazon CloudWatch Logs log group or an Amazon S3 bucket. The value specified for this parameter depends on the value specified for `LogDestinationType`. If `LogDestinationType` is `cloud-watch-logs`, specify the ARN of the Amazon CloudWatch Logs log group. For `s3` specify the ARN of the Amazon S3 bucket. For `s3` you can also specify an optional subfolder, example: `arn:aws:s3:::my_bucket/my_subfolder/`. **Note**: if no value is specified and `LogDestinationType` is `cloud-watch-logs`, the automation will create an Amazon CloudWatch log group.",
      "allowedPattern": "^$|^arn:(aws[a-zA-Z-]*):s3:::([a-z0-9\\/\\-.]+)$|^arn:(aws[a-zA-Z-]*):logs:([a-z0-9-]+):(\\d{12}):log-group:([\\w+=,.@\\-:\\/]+)(:\\*)?$"
    },
    "LogFormat": {
      "type": "String",
      "default": "${version} ${account-id} ${interface-id} ${srcaddr} ${dstaddr} ${srcport} ${dstport} ${protocol} ${packets} ${bytes} ${start} ${end} ${action} ${log-status}",
      "description": "(Optional) The fields to include in the flow log record, in the order in which they should appear. For a list of available fields, see Flow Log records https://docs.aws.amazon.com/vpc/latest/userguide/flow-logs.html#flow-logs-fields. If you omit this parameter, the flow log is created using the default format. If you specify this parameter, you must specify at least one field.",
      "allowedPattern": "^$|(\\$\\{[a-z\\-\\s?]+\\}\\s?)+"
    },
    "LogFormatTransitGateway": {
      "type": "String",
      "default": "${version} ${resource-type} ${account-id} ${tgw-id} ${tgw-attachment-id} ${tgw-src-vpc-account-id} ${tgw-dst-vpc-account-id} ${tgw-src-vpc-id} ${tgw-dst-vpc-id} ${tgw-src-subnet-id} ${tgw-dst-subnet-id} ${tgw-src-eni} ${tgw-dst-eni} ${tgw-src-az-id} ${tgw-dst-az-id} ${tgw-pair-attachment-id} ${srcaddr} ${dstaddr} ${srcport} ${dstport} ${protocol} ${packets} ${bytes} ${start} ${end} ${log-status} ${type} ${packets-lost-no-route} ${packets-lost-blackhole} ${packets-lost-mtu-exceeded} ${packets-lost-ttl-expired} ${tcp-flags} ${region} ${flow-direction} ${pkt-src-aws-service} ${pkt-dst-aws-service}",
      "description": "(Optional) The fields to include in the transit gateway flow log record, in the order in which they should appear. For a list of available fields, see Transit Gateway Flow Log records https://docs.aws.amazon.com/vpc/latest/tgw/tgw-flow-logs.html. If you omit this parameter, the flow log is created using the default format. If you specify this parameter, you must specify at least one field.",
      "allowedPattern": "^$|(\\$\\{[a-z\\-\\s?]+\\}\\s?)+"
    },
    "LogGroupName": {
      "type": "String",
      "description": "(Conditional) The name of the Amazon CloudWatch Logs log group you want to publish flow log data to. This parameter is required if the parameter `LogDestinationType` is set to `cloud-watch-logs`. if this parameter is provided, the `LogDestinationArn` is omitted.",
      "default": "",
      "allowedPattern": "^$|[\\.\\-_/#A-Za-z0-9]{1,512}"
    }
  },
  "mainSteps": [
    {
      "name": "BranchOnDestinationType",
      "action": "aws:branch",
      "description": "Branches on the required input parameters for `LogDestinationType`: *cloud-watch-logs* or *s3*.",
      "nextStep": "CheckLogDestination",
      "inputs": {
        "Choices": [
          {
            "NextStep": "CheckLogDestination",
            "And": [
              {
                "Variable": "{{ LogDestinationType }}",
                "StringEquals": "cloud-watch-logs"
              },
              {
                "Not": {
                  "Variable": "{{ LogDestinationArn }}",
                  "Contains": ":s3:::"
                }
              }
            ]
          },
          {
            "NextStep": "CheckSourceS3BucketPublicStatus",
            "And": [
              {
                "Variable": "{{ LogDestinationType }}",
                "StringEquals": "s3"
              },
              {
                "Variable": "{{ LogDestinationArn }}",
                "Contains": ":s3:::"
              }
            ]
          }
        ],
        "Default": "CheckLogDestination"
      }
    },
    {
      "name": "CheckLogDestination",
      "action": "aws:executeScript",
      "description": "Checks the `LogDestinationArn` and `LogGroupName` parameters. If not provided, creates a new Amazon CloudWatch Logs log group with the name `AWSSupport-EnableVPCFlowLogs-<automation:EXECUTION_ID>`.",
      "nextStep": "CheckLogsPermissionIamRole",
      "isCritical": true,
      "onFailure": "Abort",
      "inputs": {
        "InputPayload": {
          "LogDestinationArn": "{{ LogDestinationArn }}",
          "LogGroupName": "{{ LogGroupName }}"
        },
        "Attachment": "attachment.zip",
        "Handler": "CreateLogGroup.script_handler",
        "Runtime": "python3.11"
      },
      "timeoutSeconds": 300,
      "outputs": [
        {
          "Name": "LogGroupArn",
          "Selector": "$.Payload.LogGroupArn",
          "Type": "String"
        },
        {
          "Name": "LogGroupName",
          "Selector": "$.Payload.LogGroupName",
          "Type": "String"
        },
        {
          "Name": "LogGroupCreated",
          "Selector": "$.Payload.LogGroupCreated",
          "Type": "String"
        }
      ]
    },
    {
      "name": "CheckLogsPermissionIamRole",
      "action": "aws:executeScript",
      "description": "Checks the `DeliverLogsPermissionArn` parameter. If not provided, creates an IAM role `AWSSupportCreateFlowLogsRole` with permissions to allow the flow logs service (`vpc-flow-logs.amazonaws.com`) to assume the new role (`sts:AssumeRole`). If the `DeliverLogsPermissionArn` is provided or already exists, describes and returns the IAM role name and ARN.",
      "nextStep": "CreateFlowLogs",
      "isCritical": true,
      "onFailure": "Abort",
      "inputs": {
        "InputPayload": {
          "DeliverLogsPermissionArn": "{{ DeliverLogsPermissionArn }}",
          "CloudWatchLogName": "{{ CheckLogDestination.LogGroupName }}",
          "CloudWatchLogCreated": "{{ CheckLogDestination.LogGroupCreated }}"
        },
        "Attachment": "attachment.zip",
        "Handler": "CreateIamRole.script_handler",
        "Runtime": "python3.11"
      },
      "timeoutSeconds": 300,
      "outputs": [
        {
          "Name": "IamRoleArn",
          "Selector": "$.Payload.IamRoleArn",
          "Type": "String"
        },
        {
          "Name": "IamRoleName",
          "Selector": "$.Payload.IamRoleName",
          "Type": "String"
        },
        {
          "Name": "IamRoleCreated",
          "Selector": "$.Payload.IamRoleCreated",
          "Type": "String"
        }
      ]
    },
    {
      "name": "CheckSourceS3BucketPublicStatus",
      "action": "aws:executeScript",
      "description": "Checks if the target Amazon Simple Storage Service (Amazon S3) potentially grants **read** or **write** `public` access to its objects.",
      "nextStep": "CreateFlowLogs",
      "onFailure": "Abort",
      "isCritical": true,
      "inputs": {
        "InputPayload": {
          "Bucket": "{{ LogDestinationArn }}",
          "BucketOwnerAccount": "{{ global:ACCOUNT_ID }}"
        },
        "Handler": "s3_bucket_public_status.check_bucket_public_status",
        "Runtime": "python3.11",
        "Attachment": "check_bucket_public_status.zip"
      }
    },
    {
      "name": "CreateFlowLogs",
      "action": "aws:executeScript",
      "description": "Creates the flow logs on the selected destination. If the action fails, the runbook will try to clean-up any resources created.",
      "onFailure": "Abort",
      "isEnd": true,
      "timeoutSeconds": 600,
      "isCritical": true,
      "inputs": {
        "InputPayload": {
          "ResourceIds": "{{ ResourceIds }}",
          "TrafficType": "{{ TrafficType }}",
          "LogDestinationType": "{{ LogDestinationType }}",
          "LogDestinationArn": "{{ LogDestinationArn }}",
          "LogFormat": "{{ LogFormat }}",
          "LogFormatTransitGateway": "{{ LogFormatTransitGateway }}",
          "CloudWatchIamRoleArn": "{{ CheckLogsPermissionIamRole.IamRoleArn }}",
          "CloudWatchIamRoleName": "{{ CheckLogsPermissionIamRole.IamRoleName }}",
          "CloudWatchIamRoleCreated": "{{ CheckLogsPermissionIamRole.IamRoleCreated }}",
          "CloudWatchLogName": "{{ CheckLogDestination.LogGroupName }}",
          "CloudWatchLogArn": "{{ CheckLogDestination.LogGroupArn }}",
          "CloudWatchLogCreated": "{{ CheckLogDestination.LogGroupCreated }}"
        },
        "Attachment": "attachment.zip",
        "Handler": "CreateFlowLogs.script_handler",
        "Runtime": "python3.11"
      },
      "outputs": [
        {
          "Name": "Message",
          "Selector": "$.Payload.message",
          "Type": "MapList"
        },
        {
          "Name": "FlowLogIds",
          "Selector": "$.Payload.flow_logs_ids",
          "Type": "StringList"
        },
        {
          "Name": "IamRoleCreated",
          "Selector": "$.Payload.iam_role_created",
          "Type": "String"
        },
        {
          "Name": "LogGroupCreated",
          "Selector": "$.Payload.log_created",
          "Type": "String"
        }
      ]
    }
  ],
  "files": {
    "attachment.zip": {
      "checksums": {
        "SHA256": "c920d23a9c971361765703be8e409cc629749cf47d90d4c80449a8db021c953f"
      }
    },
    "check_bucket_public_status.zip": {
      "checksums": {
        "SHA256": "b8b4dece36d38e2bca276cdfa6890e64dc63e6d07ada5ee40bd6fbc9cfd7a2ae"
      }
    }
  }
}
