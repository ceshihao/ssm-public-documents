{
  "description": "The **AWSSupport-TroubleshootVPN** runbook helps diagnose AWS Site-to-Site VPN tunnel issues by searching for known errors found in its associated CloudWatch logs group. The runbook makes Amazon CloudWatch logs Insights API calls on the tunnels associated log group (if enabled), searches a specific list of known errors, and outputs the potential resolution related to the error. For setting the time window for error tracing, use either `StartTimeinEpoch` and `EndTimeinEpoch`, or `LookBackPeriod`. For `LookBackPeriod`, you need to specify the number of hours you want the automation to check for errors from the automation's start time (the default is 1 hour). Alternatively, you can specify a time range using the `StartTimeinEpoch` and `EndTimeinEpoch` parameters. If you specify `StartTimeinEpoch`, `EndTimeinEpoch`, and `LookBackPeriod`, then the parameter `LookBackPeriod` takes precedence. If you don't specify `EndTimeinEpoch`, the current time is used. For more information about publishing Site-to-Site VPN logs to Amazon CloudWatch Logs please see: https://docs.aws.amazon.com/vpn/latest/s2svpn/monitoring-logs.html.\n\n### Important:\nAnalysis charges occur when the automation uses Amazon CloudWatch Log Insights to query logs. The charge is based on the volume of data that's scanned to provide query results. To reduce analysis charges, set a time frame for the queries to run over shorter timeframes. This reduces the amount of data that's scanned. You can find the pricing related to Amazon CloudWatch Logs Insights API in https://aws.amazon.com/cloudwatch/pricing/.",
  "schemaVersion": "0.3",
  "assumeRole": "{{ AutomationAssumeRole }}",
  "outputs": [
    "TraceErrors.Results"
  ],
  "parameters": {
    "AutomationAssumeRole": {
      "type": "AWS::IAM::Role::Arn",
      "description": "(Optional) The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that allows Systems Manager Automation to perform the actions on your behalf. If no role is specified, Systems Manager Automation uses the permissions of the user that starts this runbook.",
      "default": ""
    },
    "VpnConnectionId": {
      "type": "String",
      "description": "(Required) The AWS Site-to-Site VPN connection Id.",
      "allowedPattern": "^vpn-[0-9a-f]{8,17}$"
    },
    "LookBackPeriod": {
      "type": "String",
      "description": "(Optional) The number of hours to look back in the associated CloudWatch log group for analysis. Valid range: 1 to 99. Default value is 1 (hour). This parameter takes precedence over StartTimeinEpoch and EndTimeinEpoch.",
      "allowedPattern": "^([1-9][0-9]?)$|^$",
      "default": "1"
    },
    "StartTimeinEpoch": {
      "type": "String",
      "description": "(Optional) The start time (as epoch time in seconds) for log analysis. You can either use StartTimeinEpoch/EndTimeinEpoch or LookBackPeriod for logs analysis. StartTimeinEpoch and EndTimeinEpoch takes precedence over LookBackPeriod.",
      "allowedPattern": "^1[6-9][0-9]{8}$|^$",
      "default": ""
    },
    "EndTimeinEpoch": {
      "type": "String",
      "description": "(Optional) The end time (as epoch time in seconds) for log analysis. You can either use StartTimeinEpoch/EndTimeinEpoch or LookBackPeriod for logs analysis. StartTimeinEpoch and EndTimeinEpoch takes precedence over LookBackPeriod.",
      "allowedPattern": "^1[6-9][0-9]{8}$|^$",
      "default": ""
    }
  },
  "mainSteps": [
    {
      "description": "Validate the time input parameters and returns the start and end time for the Amazon CloudWatch logs Insights queries.",
      "name": "GetStartAndEndTime",
      "action": "aws:executeScript",
      "onFailure": "Abort",
      "nextStep": "GetVpnConnectionTunnelDetails",
      "inputs": {
        "Runtime": "python3.8",
        "Handler": "describe_vpn.validate_parameters",
        "Attachment": "artifact.zip",
        "InputPayload": {
          "StartTimeinEpoch": "{{ StartTimeinEpoch }}",
          "EndTimeinEpoch": "{{ EndTimeinEpoch }}",
          "LookBackPeriod": "{{ LookBackPeriod }}"
        }
      },
      "outputs": [
        {
          "Name": "StartTime",
          "Selector": "$.Payload.StartTime",
          "Type": "Integer"
        },
        {
          "Name": "EndTime",
          "Selector": "$.Payload.EndTime",
          "Type": "Integer"
        }
      ]
    },
    {
      "description": "Gets details about the target AWS Site-to-Site VPN tunnels.",
      "name": "GetVpnConnectionTunnelDetails",
      "action": "aws:executeScript",
      "onFailure": "Abort",
      "nextStep": "TraceErrors",
      "inputs": {
        "Runtime": "python3.8",
        "Handler": "describe_vpn.get_vpn_connection",
        "Attachment": "artifact.zip",
        "InputPayload": {
          "VpnConnectionId": "{{ VpnConnectionId }}"
        }
      },
      "outputs": [
        {
          "Name": "Telemetry",
          "Selector": "$.Payload.Telemetry",
          "Type": "MapList"
        },
        {
          "Name": "Tunnels",
          "Selector": "$.Payload.Tunnels",
          "Type": "MapList"
        }
      ]
    },
    {
      "description": "Performs Amazon CloudWatch Logs Insights APIs on the AWS Site-to-Site VPN's associated CloudWatch log group for known errors and returns potential solutions.",
      "name": "TraceErrors",
      "action": "aws:executeScript",
      "onFailure": "Abort",
      "isEnd": true,
      "inputs": {
        "Runtime": "python3.8",
        "Handler": "trace_error.trace_error",
        "Attachment": "artifact.zip",
        "InputPayload": {
          "VpnConnectionId": "{{ VpnConnectionId }}",
          "StartTime": "{{ GetStartAndEndTime.StartTime }}",
          "EndTime": "{{ GetStartAndEndTime.EndTime }}",
          "Tunnels": "{{ GetVpnConnectionTunnelDetails.Tunnels }}"
        }
      },
      "outputs": [
        {
          "Name": "Results",
          "Selector": "$.Payload.Results",
          "Type": "String"
        },
        {
          "Name": "VpnConnectionId",
          "Selector": "$.Payload.VpnConnectionId",
          "Type": "String"
        }
      ]
    }
  ],
  "files": {
    "artifact.zip": {
      "checksums": {
        "SHA256": "ff1f09c298d6307ffc008cbaea14841db1ac983b51871bfa95b49edab018fbd4"
      }
    }
  }
}
