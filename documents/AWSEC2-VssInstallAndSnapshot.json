{
  "schemaVersion": "2.2",
  "description": "Install the AwsVssComponents package and create an application consistent snapshot of all EBS volumes attached to an instance.",
  "parameters": {
    "ExcludeBootVolume": {
      "type": "String",
      "description": "(Optional) Select True to exclude the boot volume from the snapshot process.",
      "allowedValues": [
        "True",
        "False"
      ],
      "default": "False"
    },
    "NoWriters": {
      "type": "String",
      "description": "(Optional) Select True to exclude application VSS writers from the snapshot process. This option may be useful to resolve conflicts with third party VSS backup solutions.",
      "allowedValues": [
        "True",
        "False"
      ],
      "default": "False"
    },
    "CopyOnly": {
      "type": "String",
      "description": "(Optional) Select True to indicate a COPY ONLY backup operation.  By default a FULL backup operation is performed.  This option will prevent breaking the differential backup chain in SQL Server when performing a backup.",
      "allowedValues": [
        "True",
        "False"
      ],
      "default": "False"
    },
    "CreateAmi": {
      "type": "String",
      "description": "(Optional) Select True to create an Amazon Machine Image (AMI) backup.",
      "allowedValues": [
        "True",
        "False"
      ],
      "default": "False"
    },
    "AmiName": {
      "type": "String",
      "default": "",
      "description": "(Optional) Specify a name for created AMI.  This option only has affect if the CreateAmi option is selected.",
      "maxChars": 128,
      "allowedPattern": "^([a-zA-Z0-9()\\[\\] ./\\-@_{}:]|^'[a-zA-Z0-9()\\[\\] ./\\-_{}:]|^'$|[a-zA-Z0-9()\\[\\] ./\\-@_{}:]'){0,128}$"
    },
    "description": {
      "type": "String",
      "default": "",
      "description": "(Optional) Specify a description to apply to created EBS snaphots.",
      "maxChars": 255,
      "allowedPattern": "^([^'\\n\\r]|(\\r|\\n)?'[^@]|(\\r|\\n)([^']|'?$)|'$|[^\\r\\n]'@){0,255}$"
    },
    "tags": {
      "type": "String",
      "default": "Key=Name,Value=",
      "description": "(Optional) Specify descriptive key-value pair tags to apply to created EBS snapshots.  Use a semicolon as a separator between tags pairs. Example: Key=Name,Value=VSS Snapshot;Key=BackupId,Value=01234",
      "allowedPattern": "^([Kk]ey=([a-zA-Z0-9() ./\\-\"'@_+:={}]*),[Vv]alue=([a-zA-Z0-9() ./\\-\"'@_+:={}]*);?)*$"
    },
    "executionTimeout": {
      "type": "String",
      "default": "800",
      "description": "(Optional) The time in seconds for the CreateVssSnapshot command to be completed before it is considered to have failed. Extending this timeout will cause the command to wait longer for VSS to start its freeze. Default is 800 seconds. Maximum is 172800 (48 hours). Minimum is 120.",
      "allowedPattern": "^((1[2-9][0-9]{1})|([2-9][0-9]{2})|([1-9][0-9]{3,4})|(1[0-6][0-9]{4})|(17[0-1][0-9]{3})|(172[0-7][0-9]{2})|(172800))$"
    },
    "CollectDiagnosticLogs": {
      "type": "String",
      "description": "(Optional) Select True to collect extra diagnostic information.",
      "allowedValues": [
        "True",
        "False"
      ],
      "default": "False"
    },
    "VssVersion": {
      "type": "String",
      "default": "",
      "description": "(Optional) The version of AwsVssComponents to install. If you don't specify a version, defaults to the recommended version.",
      "maxChars": 16,
      "allowedPattern": "^[0-9.]*$"
    }
  },
  "mainSteps": [
    {
      "precondition": {
        "StringEquals": [
          "platformType",
          "Windows"
        ]
      },
      "action": "aws:runPowerShellScript",
      "name": "CheckInstall",
      "inputs": {
        "runCommand": [
          "# Copyright 2023 Amazon.com, Inc. or its affiliates. All Rights Reserved.",
          "",
          "Set-StrictMode -Version Latest",
          "$ErrorActionPreference = \"Stop\"",
          "",
          "# Failure is a safe default in case of unexpected error. It will choose not to install.",
          "trap {",
          "    Write-Host \"Encountered unexpected error. Please see error details below.\"",
          "    Write-Host ($_.Exception | Format-List -Force | Out-String)",
          "    Write-Host ($_.InvocationInfo | Format-List -Force | Out-String)",
          "    exit 4000",
          "}",
          "",
          "$2008R2Versions = @(\"1.0\",\"1.1\",\"1.2.00\",\"1.3.00\",\"1.3.1.0\")",
          "$2012Versions = $2008R2Versions + @(\"1.3.2.0\",\"2.0.0\",\"2.0.1\",\"2.1.0\")",
          "",
          "function Get-OSMajorVersion {",
          "    return [environment]::OSVersion.Version.Major",
          "}",
          "",
          "function Get-OSMinorVersion {",
          "    return [environment]::OSVersion.Version.Minor",
          "}",
          "",
          "function Get-OSVersionCheck {",
          "    param(",
          "        [Parameter(Mandatory=$true)][AllowEmptyString()][String]$VssVersion",
          "    )",
          "    $major = Get-OSMajorVersion",
          "    $minor = Get-OSMinorVersion",
          "    if ($major -eq 6) {",
          "        if((1, 2, 3) -notcontains $minor) {",
          "            Write-Host \"Unsupported OS version 6.$minor\"",
          "            return 1",
          "        }",
          "        if(1 -eq $minor) {",
          "            if ($2008R2Versions -contains $VssVersion) {",
          "                return 0",
          "            } else {",
          "                Write-Host \"VssVersion '$VssVersion' is unsupported on Windows Server 2008 R2\"",
          "                return 1",
          "            }",
          "        }",
          "        if ($2012Versions -contains $VssVersion) {",
          "            return 0",
          "        } else {",
          "            Write-Host \"VssVersion '$VssVersion' is unsupported on Windows Server 2012 or 2012 R2\"",
          "            return 1",
          "        }",
          "    }",
          "    if ($major -eq 10) {",
          "        return 0",
          "    }",
          "    Write-Host \"Unsupported OS major version $major\"",
          "    return 1",
          "}",
          "",
          "# Returns 0 to indicate install should be attempted.",
          "# Returns 1 to indicate install shouldn't be attempted.",
          "function Get-VssInstallDecision {",
          "    param(",
          "        [Parameter(Mandatory=$true)][AllowEmptyString()][String]$VssVersion",
          "    )",
          "",
          "    # Check version support. Don't upgrade to an unsupported version and break",
          "    # an existing working environment.",
          "    if (0 -ne (Get-OSVersionCheck -VssVersion $VssVersion)) {",
          "        Write-Host \"Failed version compatibility check. Skipping install step.\"",
          "        return 1",
          "    }",
          "",
          "    Write-Host \"Running install step.\"",
          "    return 0",
          "}",
          "[String]$VssVersion = '{{VssVersion}}'",
          "# Success (zero) to install, failure (nonzero) to skip.",
          "$exitCode = [int](Get-VssInstallDecision -VssVersion $VssVersion)",
          "exit $exitCode"
        ],
        "onFailure": "successAndExit",
        "timeoutSeconds": "60"
      }
    },
    {
      "precondition": {
        "StringEquals": [
          "platformType",
          "Windows"
        ]
      },
      "action": "aws:runDocument",
      "name": "InstallVss",
      "inputs": {
        "documentType": "SSMDocument",
        "documentPath": "AWS-ConfigureAWSPackage",
        "documentParameters": "{\"action\":\"Install\", \"name\":\"AwsVssComponents\", \"version\":\"{{VssVersion}}\" }",
        "timeoutSeconds": "600"
      }
    },
    {
      "precondition": {
        "StringEquals": [
          "platformType",
          "Windows"
        ]
      },
      "action": "aws:runDocument",
      "name": "CreateVssSnapshot",
      "inputs": {
        "documentType": "SSMDocument",
        "documentPath": "AWSEC2-CreateVssSnapshot",
        "documentParameters": "{\"ExcludeBootVolume\":\"{{ExcludeBootVolume}}\", \"NoWriters\":\"{{NoWriters}}\", \"CopyOnly\":\"{{CopyOnly}}\", \"CreateAmi\":\"{{CreateAmi}}\", \"AmiName\":\"{{AmiName}}\", \"description\":\"{{description}}\", \"tags\":\"{{tags}}\", \"executionTimeout\":\"{{executionTimeout}}\", \"CollectDiagnosticLogs\":\"{{CollectDiagnosticLogs}}\" }",
        "finallyStep": true,
        "timeoutSeconds": "{{executionTimeout}}"
      }
    }
  ]
}
