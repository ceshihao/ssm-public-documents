{
  "description": "### Document name - AWSConfigRemediation-DropInvalidHeadersForALB\n\n## What does this document do?\nThis runbook enables the application load balancer you specify to remove HTTP headers with invalid headers using the [ModifyLoadBalancerAttributes](https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_ModifyLoadBalancerAttributes.html) API.\n\n## Input Parameters\n* AutomationAssumeRole: (Required) The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that allows Systems Manager Automation to perform the actions on your behalf.\n* LoadBalancerArn: (Required) The Amazon Resource Name (ARN) of the load balancer that you want to drop invalid headers.\n\n## Output Parameters\n* DropInvalidHeaders.Output: The standard HTTP response from the ModifyLoadBalancerAttributes API.\n",
  "schemaVersion": "0.3",
  "assumeRole": "{{ AutomationAssumeRole }}",
  "outputs": [
    "DropInvalidHeaders.Output"
  ],
  "parameters": {
    "AutomationAssumeRole": {
      "type": "AWS::IAM::Role::Arn",
      "description": "(Required) The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that allows Systems Manager Automation to perform the actions on your behalf."
    },
    "LoadBalancerArn": {
      "type": "String",
      "description": "The Amazon Resource Name (ARN) of the load balancer that you want to drop invalid headers.",
      "allowedPattern": "^arn:(aws[a-zA-Z-]*)?:elasticloadbalancing:[a-z]{2}-[a-z]+-[0-9]{1}:[0-9]{12}:loadbalancer\\/app\\/((?!internal-)(?!-)[0-9a-zA-Z-]{1,32}(?<!-))\\/[0-9aA-zZ]{16}$"
    }
  },
  "mainSteps": [
    {
      "name": "DropInvalidHeaders",
      "action": "aws:executeAwsApi",
      "description": "## DropInvalidHeaders\nEnables the drop invalid headers setting for the load balancer you specify in the `LoadBalancerArn` parameter.\n## Outputs\n* Output: The standard HTTP response from the ModifyLoadBalancerAttributes API.\n",
      "timeoutSeconds": 600,
      "isEnd": false,
      "inputs": {
        "Service": "elbv2",
        "Api": "ModifyLoadBalancerAttributes",
        "LoadBalancerArn": "{{ LoadBalancerArn }}",
        "Attributes": [
          {
            "Key": "routing.http.drop_invalid_header_fields.enabled",
            "Value": "true"
          }
        ]
      },
      "outputs": [
        {
          "Name": "Output",
          "Selector": "$",
          "Type": "StringMap"
        }
      ]
    },
    {
      "name": "VerifyDropInvalidHeaders",
      "action": "aws:executeScript",
      "isEnd": true,
      "timeoutSeconds": 600,
      "description": "## VerifyDropInvalidHeaders\nVerifies the drop invalid headers setting has been enabled on the load balancer you specify in the `LoadBalancerArn` parameter.\n",
      "inputs": {
        "Runtime": "python3.8",
        "Handler": "verify_drop_invalid_headers",
        "InputPayload": {
          "LoadBalancerArn": "{{ LoadBalancerArn }}"
        },
        "Script": "import boto3\ndef verify_drop_invalid_headers(event, context):\n  elbv2_client = boto3.client(\"elbv2\")\n  load_balancer_arn = event[\"LoadBalancerArn\"]\n  response = elbv2_client.describe_load_balancer_attributes(LoadBalancerArn=load_balancer_arn)\n  for attribute in response[\"Attributes\"]:\n    if (attribute[\"Key\"] == \"routing.http.drop_invalid_header_fields.enabled\" and attribute[\"Value\"] == \"true\"):\n      return {\n        \"Output\": {\n          \"message\": \"AWS APPLICATION LOAD BALANCER TO DROP INVALID HEADERS SETTING IS SUCCESSFUL.\",\n          \"HTTPResponse\": response\n          }\n        }\n  raise Exception(\"VERIFICATION FAILED, AWS APPLICATION LOAD BALANCER {} TO DROP INVALID HEADERS SETTING IS NOT SUCCESSFUL.\".format(load_balancer_arn))"
      },
      "outputs": [
        {
          "Name": "Output",
          "Selector": "$.Payload.output",
          "Type": "StringMap"
        }
      ]
    }
  ]
}
