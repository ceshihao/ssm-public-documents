{
  "description": "### Document name - AWSConfigRemediation-EnableWAFV2Logging\n\n## What does this document do?\nThis runbook enables logging for an AWS Web Application Firewall (AWS WAFV2) regional and global web access control list (ACL) with the specified Amazon Kinesis Data Firehose (Kinesis Data Firehose) using the [PutLoggingConfiguration](https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_PutLoggingConfiguration.html#API_waf_PutLoggingConfiguration_ResponseSyntax) API.\n\n## Input Parameters\n* AutomationAssumeRole: (Required) The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that allows Systems Manager Automation to perform the actions on your behalf.\n* LogDestinationConfigs: (Required) The Kinesis Data Firehose ARN that you want to associate with the web ACL.\n* WebAclArn: (Required) ARN of the web ACL for which logging will be enabled.\n\n## Output Parameters\n* EnableWAFV2LoggingAndVerify.Output: Success message with HTTP Response from PutLoggingConfiguration, GetLoggingConfiguration API calls or failure exception.\n",
  "schemaVersion": "0.3",
  "assumeRole": "{{ AutomationAssumeRole }}",
  "outputs": [
    "EnableWAFV2LoggingAndVerify.Output"
  ],
  "parameters": {
    "AutomationAssumeRole": {
      "type": "AWS::IAM::Role::Arn",
      "description": "(Required) The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that allows Systems Manager Automation to perform the actions on your behalf."
    },
    "LogDestinationConfigs": {
      "type": "String",
      "description": "(Required) The Kinesis Data Firehose ARN that you want to associate with the web ACL.",
      "allowedPattern": "^arn:aws[a-z-]*:firehose:[a-z\\d-]+:\\d{12}:deliverystream/aws-waf-logs-[\\w-]+$"
    },
    "WebAclArn": {
      "type": "String",
      "description": "(Required) ARN of the web ACL for which logging will be enabled.",
      "allowedPattern": "^arn:aws[a-z-]*:wafv2:[a-z\\d-]+:\\d{12}:(global|regional)/webacl/[\\w/-]+$"
    }
  },
  "mainSteps": [
    {
      "name": "EnableWAFV2LoggingAndVerify",
      "action": "aws:executeScript",
      "isEnd": true,
      "timeoutSeconds": 600,
      "description": "## EnableWAFV2LoggingAndVerify\nEnables logging for the AWS WAFV2 web ACL and verifies that the logging has the specified configuration.\n## Outputs\n* Output: Success message with HTTP Response from PutLoggingConfiguration, GetLoggingConfiguration API calls or failure exception.\n",
      "inputs": {
        "Runtime": "python3.11",
        "Handler": "enable_wafv2_logging_and_verify",
        "InputPayload": {
          "LogDestinationConfigs": "{{ LogDestinationConfigs }}",
          "ResourceArn": "{{ WebAclArn }}"
        },
        "Script": "import boto3\n\ndef enable_wafv2_logging_and_verify(event, context):\n    firehose_client = boto3.client('firehose')\n    wafv2_client = boto3.client('wafv2')\n    web_acl_arn = event[\"ResourceArn\"]\n    delivery_stream_arn = event[\"LogDestinationConfigs\"]\n    delivery_stream_name = delivery_stream_arn.split(\"/\")[-1]\n\n    response = firehose_client.describe_delivery_stream(DeliveryStreamName=delivery_stream_name, Limit=1)\n    if response[\"DeliveryStreamDescription\"][\"DeliveryStreamARN\"] != delivery_stream_arn:\n        raise Exception(\"UPDATE FAILED, AMAZON KINESIS DATA FIREHOSE ARN PROVIDED DOESN'T EXISTS.\")\n\n    update_response = wafv2_client.put_logging_configuration(\n        LoggingConfiguration={\n            \"ResourceArn\": web_acl_arn,\n            \"LogDestinationConfigs\": [\n                delivery_stream_arn,\n            ]\n        }\n    )\n    get_response = wafv2_client.get_logging_configuration(ResourceArn=web_acl_arn)\n    if get_response[\"LoggingConfiguration\"][\"LogDestinationConfigs\"] == [delivery_stream_arn]:\n        return {\n            \"output\": {\n                \"Message\": \"Enable Logging configuration for AWS WAFV2 web ACL is SUCCESSFUL\",\n                \"HTTPResponsePutAPI\": update_response,\n                \"HTTPResponseGetAPI\": get_response\n                }\n            }\n    raise Exception(\"VERIFICATION FAILED, LOGGING CONFIGURATION FOR AWS WAFV2 IS NOT ENABLED.\")"
      },
      "outputs": [
        {
          "Name": "Output",
          "Selector": "$.Payload.output",
          "Type": "StringMap"
        }
      ]
    }
  ]
}
