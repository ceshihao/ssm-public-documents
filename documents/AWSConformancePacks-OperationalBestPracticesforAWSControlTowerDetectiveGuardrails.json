{
  "schemaVersion": "1.0",
  "description": "Operational Best Practices for AWS Control Tower Detective Guardrails",
  "templateBody": {
    "Parameters": {
      "RestrictedIncomingTrafficParamBlockedPort1": {
        "Default": "20",
        "Type": "String"
      },
      "RestrictedIncomingTrafficParamBlockedPort2": {
        "Default": "21",
        "Type": "String"
      },
      "RestrictedIncomingTrafficParamBlockedPort3": {
        "Default": "3389",
        "Type": "String"
      },
      "RestrictedIncomingTrafficParamBlockedPort4": {
        "Default": "3306",
        "Type": "String"
      },
      "RestrictedIncomingTrafficParamBlockedPort5": {
        "Default": "4333",
        "Type": "String"
      },
      "S3BucketVersioningEnabledParamIsMfaDeleteEnabled": {
        "Default": "true",
        "Type": "String"
      }
    },
    "Resources": {
      "CloudTrailCloudWatchLogsEnabled": {
        "Properties": {
          "ConfigRuleName": "cloud-trail-cloud-watch-logs-enabled",
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "CLOUD_TRAIL_CLOUD_WATCH_LOGS_ENABLED"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "CloudTrailLogFileValidationEnabled": {
        "Properties": {
          "ConfigRuleName": "cloud-trail-log-file-validation-enabled",
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "CLOUD_TRAIL_LOG_FILE_VALIDATION_ENABLED"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "EbsOptimizedInstance": {
        "Properties": {
          "ConfigRuleName": "ebs-optimized-instance",
          "Scope": {
            "ComplianceResourceTypes": [
              "AWS::EC2::Instance"
            ]
          },
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "EBS_OPTIMIZED_INSTANCE"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "Ec2EbsEncryptionByDefault": {
        "Properties": {
          "ConfigRuleName": "ec2-ebs-encryption-by-default",
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "EC2_EBS_ENCRYPTION_BY_DEFAULT"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "IamRootAccessKeyCheck": {
        "Properties": {
          "ConfigRuleName": "iam-root-access-key-check",
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "IAM_ROOT_ACCESS_KEY_CHECK"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "IamUserMfaEnabled": {
        "Properties": {
          "ConfigRuleName": "iam-user-mfa-enabled",
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "IAM_USER_MFA_ENABLED"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "IncomingSshDisabled": {
        "Properties": {
          "ConfigRuleName": "restricted-ssh",
          "Scope": {
            "ComplianceResourceTypes": [
              "AWS::EC2::SecurityGroup"
            ]
          },
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "INCOMING_SSH_DISABLED"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "MfaEnabledForIamConsoleAccess": {
        "Properties": {
          "ConfigRuleName": "mfa-enabled-for-iam-console-access",
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "MFA_ENABLED_FOR_IAM_CONSOLE_ACCESS"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "MultiRegionCloudTrailEnabled": {
        "Properties": {
          "ConfigRuleName": "multi-region-cloudtrail-enabled",
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "MULTI_REGION_CLOUD_TRAIL_ENABLED"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "RdsInstancePublicAccessCheck": {
        "Properties": {
          "ConfigRuleName": "rds-instance-public-access-check",
          "Scope": {
            "ComplianceResourceTypes": [
              "AWS::RDS::DBInstance"
            ]
          },
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "RDS_INSTANCE_PUBLIC_ACCESS_CHECK"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "RdsSnapshotsPublicProhibited": {
        "Properties": {
          "ConfigRuleName": "rds-snapshots-public-prohibited",
          "Scope": {
            "ComplianceResourceTypes": [
              "AWS::RDS::DBSnapshot",
              "AWS::RDS::DBClusterSnapshot"
            ]
          },
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "RDS_SNAPSHOTS_PUBLIC_PROHIBITED"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "RdsStorageEncrypted": {
        "Properties": {
          "ConfigRuleName": "rds-storage-encrypted",
          "Scope": {
            "ComplianceResourceTypes": [
              "AWS::RDS::DBInstance"
            ]
          },
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "RDS_STORAGE_ENCRYPTED"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "RestrictedIncomingTraffic": {
        "Properties": {
          "ConfigRuleName": "restricted-common-ports",
          "InputParameters": {
            "blockedPort1": {
              "Fn::If": [
                "restrictedIncomingTrafficParamBlockedPort1",
                {
                  "Ref": "RestrictedIncomingTrafficParamBlockedPort1"
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            },
            "blockedPort2": {
              "Fn::If": [
                "restrictedIncomingTrafficParamBlockedPort2",
                {
                  "Ref": "RestrictedIncomingTrafficParamBlockedPort2"
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            },
            "blockedPort3": {
              "Fn::If": [
                "restrictedIncomingTrafficParamBlockedPort3",
                {
                  "Ref": "RestrictedIncomingTrafficParamBlockedPort3"
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            },
            "blockedPort4": {
              "Fn::If": [
                "restrictedIncomingTrafficParamBlockedPort4",
                {
                  "Ref": "RestrictedIncomingTrafficParamBlockedPort4"
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            },
            "blockedPort5": {
              "Fn::If": [
                "restrictedIncomingTrafficParamBlockedPort5",
                {
                  "Ref": "RestrictedIncomingTrafficParamBlockedPort5"
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          },
          "Scope": {
            "ComplianceResourceTypes": [
              "AWS::EC2::SecurityGroup"
            ]
          },
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "RESTRICTED_INCOMING_TRAFFIC"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "RootAccountHardwareMfaEnabled": {
        "Properties": {
          "ConfigRuleName": "root-account-hardware-mfa-enabled",
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "ROOT_ACCOUNT_HARDWARE_MFA_ENABLED"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "RootAccountMfaEnabled": {
        "Properties": {
          "ConfigRuleName": "root-account-mfa-enabled",
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "ROOT_ACCOUNT_MFA_ENABLED"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "S3BucketLoggingEnabled": {
        "Properties": {
          "ConfigRuleName": "s3-bucket-logging-enabled",
          "Scope": {
            "ComplianceResourceTypes": [
              "AWS::S3::Bucket"
            ]
          },
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "S3_BUCKET_LOGGING_ENABLED"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "S3BucketPublicReadProhibited": {
        "Properties": {
          "ConfigRuleName": "s3-bucket-public-read-prohibited",
          "Scope": {
            "ComplianceResourceTypes": [
              "AWS::S3::Bucket"
            ]
          },
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "S3_BUCKET_PUBLIC_READ_PROHIBITED"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "S3BucketPublicWriteProhibited": {
        "Properties": {
          "ConfigRuleName": "s3-bucket-public-write-prohibited",
          "Scope": {
            "ComplianceResourceTypes": [
              "AWS::S3::Bucket"
            ]
          },
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "S3_BUCKET_PUBLIC_WRITE_PROHIBITED"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "S3BucketServerSideEncryptionEnabled": {
        "Properties": {
          "ConfigRuleName": "s3-bucket-server-side-encryption-enabled",
          "Scope": {
            "ComplianceResourceTypes": [
              "AWS::S3::Bucket"
            ]
          },
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "S3_BUCKET_SERVER_SIDE_ENCRYPTION_ENABLED"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      },
      "S3BucketVersioningEnabled": {
        "Properties": {
          "ConfigRuleName": "s3-bucket-versioning-enabled",
          "InputParameters": {
            "isMfaDeleteEnabled": {
              "Ref": "S3BucketVersioningEnabledParamIsMfaDeleteEnabled"
            }
          },
          "Scope": {
            "ComplianceResourceTypes": [
              "AWS::S3::Bucket"
            ]
          },
          "Source": {
            "Owner": "AWS",
            "SourceIdentifier": "S3_BUCKET_VERSIONING_ENABLED"
          }
        },
        "Type": "AWS::Config::ConfigRule"
      }
    },
    "Conditions": {
      "restrictedIncomingTrafficParamBlockedPort1": {
        "Fn::Not": [
          {
            "Fn::Equals": [
              "",
              {
                "Ref": "RestrictedIncomingTrafficParamBlockedPort1"
              }
            ]
          }
        ]
      },
      "restrictedIncomingTrafficParamBlockedPort2": {
        "Fn::Not": [
          {
            "Fn::Equals": [
              "",
              {
                "Ref": "RestrictedIncomingTrafficParamBlockedPort2"
              }
            ]
          }
        ]
      },
      "restrictedIncomingTrafficParamBlockedPort3": {
        "Fn::Not": [
          {
            "Fn::Equals": [
              "",
              {
                "Ref": "RestrictedIncomingTrafficParamBlockedPort3"
              }
            ]
          }
        ]
      },
      "restrictedIncomingTrafficParamBlockedPort4": {
        "Fn::Not": [
          {
            "Fn::Equals": [
              "",
              {
                "Ref": "RestrictedIncomingTrafficParamBlockedPort4"
              }
            ]
          }
        ]
      },
      "restrictedIncomingTrafficParamBlockedPort5": {
        "Fn::Not": [
          {
            "Fn::Equals": [
              "",
              {
                "Ref": "RestrictedIncomingTrafficParamBlockedPort5"
              }
            ]
          }
        ]
      }
    }
  }
}
