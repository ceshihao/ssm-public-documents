{
  "outputs": [
    "Finalize.images",
    "Finalize.report",
    "Finalize.reportS3Location"
  ],
  "schemaVersion": "0.3",
  "description": "Analyze and extract .NET and Java applications running on migrated servers. Uses the provided Role to store artifacts and report in the Amazon S3 bucket. To build the container, upload to ECR, and deploy to ECS, EKS, or App Runner, use AWS App2Container.",
  "files": {
    "Attachments.zip": {
      "checksums": {
        "sha256": "7822aa3f788150f9267a19da01cf0063d3e26a4071e170d1fd9bbac4e80c67b4"
      }
    }
  },
  "assumeRole": "{{ AutomationAssumeRole }}",
  "parameters": {
    "AutomationAssumeRole": {
      "description": "The ARN of the role that allows Automation to perform the actions on your behalf. If no role is specified, Systems Manager Automation uses your IAM permissions to run this runbook.",
      "type": "String",
      "allowedPattern": "^arn:aws:iam::[0-9]{12}:role/[a-zA-Z0-9+=,.@_-]+$"
    },
    "InstanceId": {
      "description": "(Required) The ID of the target EC2 instance with applications that will be assessed for replatforming. Only running applications will be assessed.",
      "type": "AWS::EC2::Instance::Id"
    },
    "OutputLocation": {
      "description": "(Required) The S3 location where artifacts will be uploaded to. All artifacts will be created under the prefix \"application-transformation\" under this location. Eg. Providing a value of \"s3://my-bucket/my-prefix\" will ensure that artifacts are generated with the prefix: \"s3://my-bucket/my-prefix/application-transformation\".",
      "type": "String",
      "allowedPattern": "^s3://[a-zA-Z0-9.-]+(/[a-zA-Z0-9./_-]+)?$"
    },
    "OutputEncryptionKey": {
      "default": "",
      "description": "(Optional) The ARN of a Customer Manged KMS key to use for Server Side Encryption. If provided, the AWS Application Transformation Service will always use this key to encrypt your data, including in the OutputBucket.",
      "type": "String",
      "allowedPattern": "^(arn:aws:kms:[a-z0-9-]+:[0-9]{12}:key/[a-f0-9]{8}-([a-f0-9]{4}-){3}[a-f0-9]{12}|)$"
    }
  },
  "mainSteps": [
    {
      "outputs": [
        {
          "Type": "String",
          "Name": "runtime_assessment_id",
          "Selector": "$.Payload.runtime_assessment_id"
        },
        {
          "Type": "String",
          "Name": "start_timestamp",
          "Selector": "$.Payload.start_timestamp"
        },
        {
          "Type": "String",
          "Name": "error",
          "Selector": "$.Payload.error"
        }
      ],
      "inputs": {
        "Runtime": "python3.11",
        "InputPayload": {
          "outputLocation": "{{ OutputLocation }}",
          "instanceId": "{{ InstanceId }}",
          "outputEncryptionKey": "{{ OutputEncryptionKey }}"
        },
        "Handler": "main.start",
        "Attachment": "Attachments.zip"
      },
      "name": "Start",
      "action": "aws:executeScript",
      "nextStep": "CheckStatus0",
      "onFailure": "step:Finalize"
    },
    {
      "inputs": {
        "Choices": [
          {
            "Variable": "{{ Start.runtime_assessment_id }}",
            "StartsWith": "rta",
            "NextStep": "Poll0"
          }
        ],
        "Default": "Finalize"
      },
      "name": "CheckStatus0",
      "action": "aws:branch",
      "onFailure": "step:Finalize"
    },
    {
      "outputs": [
        {
          "Type": "String",
          "Name": "runtime_assessment_status",
          "Selector": "$.Payload.runtime_assessment_status"
        },
        {
          "Type": "String",
          "Name": "error",
          "Selector": "$.Payload.error"
        }
      ],
      "inputs": {
        "Runtime": "python3.11",
        "InputPayload": {
          "start_timestamp": "{{ Start.start_timestamp }}",
          "runtime_assessment_id": "{{ Start.runtime_assessment_id }}"
        },
        "Handler": "main.poll_runtime_assessment",
        "Attachment": "Attachments.zip"
      },
      "name": "Poll0",
      "action": "aws:executeScript",
      "nextStep": "CheckStatus1",
      "onFailure": "step:Finalize"
    },
    {
      "inputs": {
        "Choices": [
          {
            "StringEquals": "running",
            "Variable": "{{ Poll0.runtime_assessment_status }}",
            "NextStep": "Poll1"
          },
          {
            "StringEquals": "pending",
            "Variable": "{{ Poll0.runtime_assessment_status }}",
            "NextStep": "Poll1"
          }
        ],
        "Default": "Finalize"
      },
      "name": "CheckStatus1",
      "action": "aws:branch",
      "onFailure": "step:Finalize"
    },
    {
      "outputs": [
        {
          "Type": "String",
          "Name": "runtime_assessment_status",
          "Selector": "$.Payload.runtime_assessment_status"
        },
        {
          "Type": "String",
          "Name": "error",
          "Selector": "$.Payload.error"
        }
      ],
      "inputs": {
        "Runtime": "python3.11",
        "InputPayload": {
          "start_timestamp": "{{ Start.start_timestamp }}",
          "runtime_assessment_id": "{{ Start.runtime_assessment_id }}"
        },
        "Handler": "main.poll_runtime_assessment",
        "Attachment": "Attachments.zip"
      },
      "name": "Poll1",
      "action": "aws:executeScript",
      "nextStep": "CheckStatus2",
      "onFailure": "step:Finalize"
    },
    {
      "inputs": {
        "Choices": [
          {
            "StringEquals": "running",
            "Variable": "{{ Poll1.runtime_assessment_status }}",
            "NextStep": "Poll2"
          },
          {
            "StringEquals": "pending",
            "Variable": "{{ Poll1.runtime_assessment_status }}",
            "NextStep": "Poll2"
          }
        ],
        "Default": "Finalize"
      },
      "name": "CheckStatus2",
      "action": "aws:branch",
      "onFailure": "step:Finalize"
    },
    {
      "outputs": [
        {
          "Type": "String",
          "Name": "runtime_assessment_status",
          "Selector": "$.Payload.runtime_assessment_status"
        },
        {
          "Type": "String",
          "Name": "error",
          "Selector": "$.Payload.error"
        }
      ],
      "inputs": {
        "Runtime": "python3.11",
        "InputPayload": {
          "start_timestamp": "{{ Start.start_timestamp }}",
          "runtime_assessment_id": "{{ Start.runtime_assessment_id }}"
        },
        "Handler": "main.poll_runtime_assessment",
        "Attachment": "Attachments.zip"
      },
      "name": "Poll2",
      "action": "aws:executeScript",
      "nextStep": "CheckStatus3",
      "onFailure": "step:Finalize"
    },
    {
      "inputs": {
        "Choices": [
          {
            "StringEquals": "running",
            "Variable": "{{ Poll2.runtime_assessment_status }}",
            "NextStep": "Poll3"
          },
          {
            "StringEquals": "pending",
            "Variable": "{{ Poll2.runtime_assessment_status }}",
            "NextStep": "Poll3"
          }
        ],
        "Default": "Finalize"
      },
      "name": "CheckStatus3",
      "action": "aws:branch",
      "onFailure": "step:Finalize"
    },
    {
      "outputs": [
        {
          "Type": "String",
          "Name": "runtime_assessment_status",
          "Selector": "$.Payload.runtime_assessment_status"
        },
        {
          "Type": "String",
          "Name": "error",
          "Selector": "$.Payload.error"
        }
      ],
      "inputs": {
        "Runtime": "python3.11",
        "InputPayload": {
          "start_timestamp": "{{ Start.start_timestamp }}",
          "runtime_assessment_id": "{{ Start.runtime_assessment_id }}"
        },
        "Handler": "main.poll_runtime_assessment",
        "Attachment": "Attachments.zip"
      },
      "name": "Poll3",
      "action": "aws:executeScript",
      "nextStep": "CheckStatus4",
      "onFailure": "step:Finalize"
    },
    {
      "inputs": {
        "Choices": [
          {
            "StringEquals": "running",
            "Variable": "{{ Poll3.runtime_assessment_status }}",
            "NextStep": "Poll4"
          },
          {
            "StringEquals": "pending",
            "Variable": "{{ Poll3.runtime_assessment_status }}",
            "NextStep": "Poll4"
          }
        ],
        "Default": "Finalize"
      },
      "name": "CheckStatus4",
      "action": "aws:branch",
      "onFailure": "step:Finalize"
    },
    {
      "outputs": [
        {
          "Type": "String",
          "Name": "runtime_assessment_status",
          "Selector": "$.Payload.runtime_assessment_status"
        },
        {
          "Type": "String",
          "Name": "error",
          "Selector": "$.Payload.error"
        }
      ],
      "inputs": {
        "Runtime": "python3.11",
        "InputPayload": {
          "start_timestamp": "{{ Start.start_timestamp }}",
          "runtime_assessment_id": "{{ Start.runtime_assessment_id }}"
        },
        "Handler": "main.poll_runtime_assessment",
        "Attachment": "Attachments.zip"
      },
      "name": "Poll4",
      "action": "aws:executeScript",
      "nextStep": "CheckStatus5",
      "onFailure": "step:Finalize"
    },
    {
      "inputs": {
        "Choices": [
          {
            "StringEquals": "running",
            "Variable": "{{ Poll4.runtime_assessment_status }}",
            "NextStep": "Poll5"
          },
          {
            "StringEquals": "pending",
            "Variable": "{{ Poll4.runtime_assessment_status }}",
            "NextStep": "Poll5"
          }
        ],
        "Default": "Finalize"
      },
      "name": "CheckStatus5",
      "action": "aws:branch",
      "onFailure": "step:Finalize"
    },
    {
      "outputs": [
        {
          "Type": "String",
          "Name": "runtime_assessment_status",
          "Selector": "$.Payload.runtime_assessment_status"
        },
        {
          "Type": "String",
          "Name": "error",
          "Selector": "$.Payload.error"
        }
      ],
      "inputs": {
        "Runtime": "python3.11",
        "InputPayload": {
          "start_timestamp": "{{ Start.start_timestamp }}",
          "runtime_assessment_id": "{{ Start.runtime_assessment_id }}"
        },
        "Handler": "main.poll_runtime_assessment",
        "Attachment": "Attachments.zip"
      },
      "name": "Poll5",
      "action": "aws:executeScript",
      "nextStep": "Finalize",
      "onFailure": "step:Finalize"
    },
    {
      "outputs": [
        {
          "Type": "StringList",
          "Name": "images",
          "Selector": "$.Payload.images"
        },
        {
          "Type": "String",
          "Name": "report",
          "Selector": "$.Payload.report"
        },
        {
          "Type": "String",
          "Name": "reportS3Location",
          "Selector": "$.Payload.reportS3Location"
        }
      ],
      "inputs": {
        "Runtime": "python3.11",
        "InputPayload": {
          "start_error": "{{ Start.error }}",
          "poll2_error": "{{ Poll2.error }}",
          "poll5_error": "{{ Poll5.error }}",
          "outputLocation": "{{ OutputLocation }}",
          "instanceId": "{{ InstanceId }}",
          "start_timestamp": "{{ Start.start_timestamp }}",
          "poll4_error": "{{ Poll4.error }}",
          "outputEncryptionKey": "{{ OutputEncryptionKey }}",
          "poll0_error": "{{ Poll0.error }}",
          "runtime_assessment_id": "{{ Start.runtime_assessment_id }}",
          "poll1_error": "{{ Poll1.error }}",
          "poll3_error": "{{ Poll3.error }}"
        },
        "Handler": "main.finalize",
        "Attachment": "Attachments.zip"
      },
      "name": "Finalize",
      "action": "aws:executeScript",
      "isEnd": true
    }
  ]
}
