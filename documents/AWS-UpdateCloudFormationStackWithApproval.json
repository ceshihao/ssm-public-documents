{
  "description": "CloudFormation Template Update - Manage updating CloudFormation Template from a S3 bucket.",
  "schemaVersion": "0.3",
  "assumeRole": "{{AutomationAssumeRole}}",
  "parameters": {
    "StackNameOrId": {
      "type": "String",
      "description": "(Required) Name or Unique ID of the CloudFormation stack to be updated"
    },
    "TemplateUrl": {
      "type": "String",
      "description": "(Required) S3 bucket location of updated CloudFormation Template (e.g. https://s3.amazonaws.com/example/updated.template)"
    },
    "LambdaAssumeRole": {
      "type": "String",
      "description": "(Required) The ARN of the role assumed by lambda"
    },
    "Approvers": {
      "type": "StringList",
      "description": "(Required) IAM user or user arn of approvers for the automation action"
    },
    "SNSTopicArn": {
      "type": "String",
      "description": "(Required) The SNS topic ARN used to send pending approval notification for updating CloudFormation Template. The SNS topic name must start with Automation."
    },
    "AutomationAssumeRole": {
      "type": "String",
      "description": "(Optional) The ARN of the role that allows Automation to perform the actions on your behalf. ",
      "default": ""
    }
  },
  "mainSteps": [
    {
      "name": "approve",
      "action": "aws:approve",
      "onFailure": "Abort",
      "inputs": {
        "NotificationArn": "{{SNSTopicArn}}",
        "Message": "Approval required to update CloudFormation stack: {{StackNameOrId}}",
        "MinRequiredApprovals": 1,
        "Approvers": "{{Approvers}}"
      }
    },
    {
      "name": "createDocumentStack",
      "action": "aws:createStack",
      "inputs": {
        "Capabilities": [
          "CAPABILITY_IAM"
        ],
        "StackName": "UpdateCFTemplateStack{{automation:EXECUTION_ID}}",
        "Parameters": [
          {
            "ParameterKey": "LambdaRoleArn",
            "ParameterValue": "{{LambdaAssumeRole}}"
          },
          {
            "ParameterKey": "LambdaName",
            "ParameterValue": "UpdateCFTemplate-{{automation:EXECUTION_ID}}"
          }
        ],
        "TemplateBody": "AWSTemplateFormatVersion: '2010-09-09'\nParameters:\n  LambdaName:\n    Description: The lambda function name\n    Type: String\n  LambdaRoleArn:\n    Default: ''\n    Description: The ARN of the role that allows Lambda created by Automation to perform\n      the action on your behalf\n    Type: String\nResources:\n  UpdateCFLambda:\n    Properties:\n      Code:\n        ZipFile: \"#\\n# Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights\\\n          \\ Reserved.\\n#\\n# Permission is hereby granted, free of charge, to any person\\\n          \\ obtaining a copy of this\\n# software and associated documentation files\\\n          \\ (the \\\"Software\\\"), to deal in the Software\\n# without restriction, including\\\n          \\ without limitation the rights to use, copy, modify,\\n# merge, publish,\\\n          \\ distribute, sublicense, and/or sell copies of the Software, and to\\n#\\\n          \\ permit persons to whom the Software is furnished to do so.\\n#\\n# THE SOFTWARE\\\n          \\ IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\\n\\\n          # INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\\\n          \\ FOR A\\n# PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\\n          \\ AUTHORS OR COPYRIGHT\\n# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\\n          \\ LIABILITY, WHETHER IN AN ACTION\\n# OF CONTRACT, TORT OR OTHERWISE, ARISING\\\n          \\ FROM, OUT OF OR IN CONNECTION WITH THE\\n# SOFTWARE OR THE USE OR OTHER\\\n          \\ DEALINGS IN THE SOFTWARE.\\n#\\nimport boto3\\n\\n\\ndef handler(event, context):\\n\\\n          \\tcf = boto3.client(\\\"cloudformation\\\")\\n\\n\\tcf.update_stack(\\n\\t\\tStackName=event[\\\"\\\n          StackName\\\"],\\n\\t\\tTemplateURL=event[\\\"TemplateUrl\\\"],\\n\\t\\tCapabilities=[\\\"\\\n          CAPABILITY_IAM\\\"]\\n\\t)\"\n      FunctionName:\n        Ref: LambdaName\n      Handler: index.handler\n      MemorySize: 128\n      Role:\n        Ref: LambdaRoleArn\n      Runtime: python3.11\n      Timeout: 60\n    Type: AWS::Lambda::Function\n"
      }
    },
    {
      "name": "updateCloudFormationTemplate",
      "action": "aws:invokeLambdaFunction",
      "inputs": {
        "FunctionName": "UpdateCFTemplate-{{automation:EXECUTION_ID}}",
        "Payload": "{\"StackName\": \"{{StackNameOrId}}\", \"TemplateUrl\": \"{{TemplateUrl}}\"}"
      }
    },
    {
      "name": "deleteCloudFormationTemplate",
      "action": "aws:deleteStack",
      "inputs": {
        "StackName": "UpdateCFTemplateStack{{automation:EXECUTION_ID}}"
      }
    }
  ]
}
