{
  "description": "Recover the specified HANA database.",
  "schemaVersion": "2.2",
  "parameters": {
    "FilePath": {
      "type": "String",
      "allowedPattern": "^/hana/shared/aws-backint-agent/awsbackup/StorageId.json$",
      "maxChars": 100
    },
    "HANASecretId": {
      "type": "String",
      "default": "''",
      "allowedPattern": "^[a-zA-Z0-9\"\\'\\[\\]\\{\\}\\/\\-_:+=\\.@]*$",
      "maxChars": 128
    },
    "HANASecretRegion": {
      "type": "String",
      "allowedPattern": "^[a-z0-9\\-]*$",
      "maxChars": 30
    },
    "HANASID": {
      "type": "String",
      "default": "None",
      "allowedPattern": "[A-Za-z0-9]{3}"
    },
    "HANAInstanceNum": {
      "type": "String",
      "default": "None",
      "allowedPattern": "^[0-9]{2}$"
    },
    "HANADatabaseName": {
      "type": "String",
      "allowedPattern": "^[a-zA-Z0-9_\\-\\/]*$",
      "maxChars": 150
    },
    "RestoreType": {
      "type": "String",
      "allowedValues": [
        "FULL_DATA_BACKUP_RECOVERY",
        "POINT_IN_TIME_RECOVERY",
        "LOG_POSITION_RECOVERY",
        "MOST_RECENT_TIME_RECOVERY"
      ]
    },
    "HanaBackupId": {
      "type": "String",
      "allowedPattern": "^None|[0-9]{13}$"
    },
    "BackupPrefix": {
      "type": "String",
      "allowedPattern": "(^$|^[a-zA-Z0-9_]{1,32}$)"
    },
    "DBSystemCopy": {
      "type": "String",
      "allowedValues": [
        "True",
        "False"
      ]
    },
    "SourceSystemId": {
      "type": "String",
      "allowedPattern": "None|[A-Za-z0-9]{3}"
    },
    "SourceDatabaseName": {
      "type": "String",
      "allowedPattern": "^None|[a-zA-Z0-9_\\-\\/]*$"
    },
    "CatalogIdRead": {
      "type": "String",
      "allowedPattern": "^[a-zA-Z0-9!@#$%^&*=?+-/]*$",
      "maxChars": 6148
    },
    "LogIdRead": {
      "type": "String",
      "allowedPattern": "^[a-zA-Z0-9!@#$%^&*=?+-/]*$",
      "maxChars": 6148
    },
    "RestoreTimestamp": {
      "type": "String",
      "allowedPattern": "^None|[0-9]{10}$"
    },
    "CatalogRestoreOptions": {
      "type": "String",
      "allowedValues": [
        "NO_CATALOG",
        "LATEST_CATALOG_FROM_AWS_BACKUP",
        "CLOSEST_CATALOG_FROM_AWS_BACKUP",
        "CATALOG_FROM_LOCAL_PATH"
      ]
    },
    "LocalCatalogPath": {
      "type": "String",
      "allowedPattern": "^None|[A-Za-z0-9-_./]*$"
    },
    "LogBackupRestoreOption": {
      "type": "String",
      "allowedValues": [
        "LOG_ONLY_FROM_AWS_BACKUP",
        "LOG_FROM_BOTH_AWS_BACKUP_AND_LOCAL",
        "None"
      ]
    },
    "LocalLogBackupPaths": {
      "type": "String",
      "allowedPattern": "^None|^[A-Za-z0-9-_.,/ ]*$"
    },
    "InitializeLogArea": {
      "type": "String",
      "allowedValues": [
        "True",
        "False"
      ]
    },
    "UseDeltaBackups": {
      "type": "String",
      "allowedValues": [
        "True",
        "False"
      ]
    },
    "LogPositionId": {
      "type": "String",
      "allowedPattern": "^None|[A-Za-z0-9_/,]*$"
    },
    "LogVolumeId": {
      "type": "String",
      "allowedPattern": "^None|[A-Za-z0-9_/,]*$"
    },
    "RestoreIdRead": {
      "type": "String",
      "allowedPattern": "^[a-zA-Z0-9!@#$%^&*=?+-/]*$",
      "maxChars": 6148
    },
    "AdoptHdbcli": {
      "type": "String",
      "default": "True",
      "allowedValues": [
        "True",
        "False"
      ]
    },
    "Debug": {
      "type": "String",
      "default": "False",
      "allowedValues": [
        "True",
        "False"
      ]
    }
  },
  "mainSteps": [
    {
      "name": "InstallPackage",
      "action": "aws:runDocument",
      "inputs": {
        "documentType": "SSMDocument",
        "documentPath": "AWS-ConfigureAWSPackage",
        "documentParameters": {
          "name": "arn:aws:ssm:us-east-1:107954469871:document/AWSSystemsManagerSAP-Support",
          "action": "Install",
          "installationType": "Uninstall and reinstall"
        }
      }
    },
    {
      "name": "InstallPackageAgain",
      "action": "aws:runDocument",
      "inputs": {
        "documentType": "SSMDocument",
        "documentPath": "AWS-ConfigureAWSPackage",
        "documentParameters": {
          "name": "arn:aws:ssm:us-east-1:107954469871:document/AWSSystemsManagerSAP-Support",
          "action": "Install",
          "installationType": "Uninstall and reinstall"
        }
      }
    },
    {
      "name": "PerformAction",
      "action": "aws:runShellScript",
      "inputs": {
        "RunCommand": [
          "#!/bin/bash",
          "# Timestamp: 1693219851398",
          "mkdir -p /usr/bin/ssm-sap/logs",
          "cd /usr/bin/ssm-sap/logs",
          "export PYTHONPATH=$PYTHONPATH:/usr/bin/ssm-sap/scripts",
          "if [ $(which python3 3>/dev/null) ]; then",
          "   PYTHON_BIN=$(which python3)",
          "elif [ $(which python 3>/dev/null) ]; then",
          "   PYTHON_BIN=$(which python)",
          "else",
          "   exit 1",
          "fi",
          "if [[ \"{{Debug}}\" == \"True\" ]]; then",
          "   DEBUGMODE='--debug'",
          "else",
          "   DEBUGMODE=''",
          "fi",
          "touch ~/.bashrc && source ~/.bashrc",
          "if [[ \":$PYTHONPATH:\" != *\":/usr/bin/ssm-sap/scripts/dependencies\"* ]]; then",
          "   sed -i 's#://usr/bin/ssm-sap/scripts/dependencies##' ~/.bashrc",
          "   echo export PYTHONPATH='${PYTHONPATH}:/usr/bin/ssm-sap/scripts/dependencies' >> ~/.bashrc",
          "   source ~/.bashrc",
          "fi",
          "declare -A params",
          "count=0",
          "dict=\"{ \"",
          "params[FilePath]='{{FilePath}}'",
          "params[HANASecretId]='{{HANASecretId}}'",
          "params[HANASecretRegion]='{{HANASecretRegion}}'",
          "params[HANASID]='{{HANASID}}'",
          "params[HANAInstanceNum]='{{HANAInstanceNum}}'",
          "params[HANADatabaseName]='{{HANADatabaseName}}'",
          "params[RestoreType]='{{RestoreType}}'",
          "params[HanaBackupId]='{{HanaBackupId}}'",
          "params[BackupPrefix]='{{BackupPrefix}}'",
          "params[DBSystemCopy]='{{DBSystemCopy}}'",
          "params[SourceSystemId]='{{SourceSystemId}}'",
          "params[SourceDatabaseName]='{{SourceDatabaseName}}'",
          "params[CatalogIdRead]='{{CatalogIdRead}}'",
          "params[LogIdRead]='{{LogIdRead}}'",
          "params[RestoreTimestamp]='{{RestoreTimestamp}}'",
          "params[CatalogRestoreOptions]='{{CatalogRestoreOptions}}'",
          "params[LocalCatalogPath]='{{LocalCatalogPath}}'",
          "params[LogBackupRestoreOption]='{{LogBackupRestoreOption}}'",
          "params[LocalLogBackupPaths]='{{LocalLogBackupPaths}}'",
          "params[InitializeLogArea]='{{InitializeLogArea}}'",
          "params[UseDeltaBackups]='{{UseDeltaBackups}}'",
          "params[LogPositionId]='{{LogPositionId}}'",
          "params[LogVolumeId]='{{LogVolumeId}}'",
          "params[RestoreIdRead]='{{RestoreIdRead}}'",
          "params[AdoptHdbcli]='{{AdoptHdbcli}}'",
          "params[Debug]='{{Debug}}'",
          "len=$(expr ${#params[@]} - 1)",
          "for keys in \"${!params[@]}\"; do",
          "    if [ ${count} -lt ${len} ]; then",
          "        dict=$(printf '%s ' \"$dict\" \"\\\"$keys\\\":\" \"\\\"${params[$keys]}\\\", \")",
          "    else",
          "        dict=$(printf '%s ' \"$dict\" \"\\\"$keys\\\":\" \"\\\"${params[$keys]}\\\"\")",
          "    fi",
          "    ((count++))",
          "done",
          "dict=\"$(echo -n ${dict}) }\"",
          "$PYTHON_BIN /usr/bin/ssm-sap/scripts/oldscripts/idRenewal/id_renewal.py --dbName '{{HANADatabaseName}}' --sourceDbName '{{SourceDatabaseName}}' --sid '{{HANASID}}' --filePath '{{FilePath}}' --restoreIdRead '{{RestoreIdRead}}' --catalogIdRead '{{CatalogIdRead}}' --txIdRead '{{LogIdRead}}' $DEBUGMODE --noEcho",
          "$PYTHON_BIN /usr/bin/ssm-sap/scripts/oldscripts/restore/HanaRestore.py \"${dict}\" $DEBUGMODE"
        ],
        "TimeoutSeconds": "14400"
      }
    }
  ]
}
